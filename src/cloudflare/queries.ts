/* eslint-disable @typescript-eslint/no-unused-vars */
import type { GraphQLClient } from 'graphql-request';
import type * as Dom from 'graphql-request/dist/types.dom';
import gql from 'graphql-tag';

type Maybe<T> = T | null;
type InputMaybe<T> = Maybe<T>;
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
interface Scalars {
    ID: string;
    String: string;
    Boolean: boolean;
    Int: number;
    Float: number;
    Date: unknown;
    Time: string;
    bool: boolean;
    bytes: number;
    float32: number;
    float64: number;
    int64: number;
    string: string;
    uint8: number;
    uint16: number;
    uint32: number;
    uint64: number;
}

interface AccountAccessLoginRequestsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountAccessLoginRequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountAccessLoginRequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly appId: InputMaybe<Scalars['string']>;
    readonly appId_geq: InputMaybe<Scalars['string']>;
    readonly appId_gt: InputMaybe<Scalars['string']>;
    readonly appId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly appId_leq: InputMaybe<Scalars['string']>;
    readonly appId_like: InputMaybe<Scalars['string']>;
    readonly appId_lt: InputMaybe<Scalars['string']>;
    readonly appId_neq: InputMaybe<Scalars['string']>;
    readonly appId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly appId_notlike: InputMaybe<Scalars['string']>;
    readonly approvingPolicyId: InputMaybe<Scalars['string']>;
    readonly approvingPolicyId_geq: InputMaybe<Scalars['string']>;
    readonly approvingPolicyId_gt: InputMaybe<Scalars['string']>;
    readonly approvingPolicyId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly approvingPolicyId_leq: InputMaybe<Scalars['string']>;
    readonly approvingPolicyId_like: InputMaybe<Scalars['string']>;
    readonly approvingPolicyId_lt: InputMaybe<Scalars['string']>;
    readonly approvingPolicyId_neq: InputMaybe<Scalars['string']>;
    readonly approvingPolicyId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly approvingPolicyId_notlike: InputMaybe<Scalars['string']>;
    readonly cfRayId: InputMaybe<Scalars['string']>;
    readonly cfRayId_geq: InputMaybe<Scalars['string']>;
    readonly cfRayId_gt: InputMaybe<Scalars['string']>;
    readonly cfRayId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly cfRayId_leq: InputMaybe<Scalars['string']>;
    readonly cfRayId_like: InputMaybe<Scalars['string']>;
    readonly cfRayId_lt: InputMaybe<Scalars['string']>;
    readonly cfRayId_neq: InputMaybe<Scalars['string']>;
    readonly cfRayId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly cfRayId_notlike: InputMaybe<Scalars['string']>;
    readonly country: InputMaybe<Scalars['string']>;
    readonly country_geq: InputMaybe<Scalars['string']>;
    readonly country_gt: InputMaybe<Scalars['string']>;
    readonly country_in: InputMaybe<readonly Scalars['string'][]>;
    readonly country_leq: InputMaybe<Scalars['string']>;
    readonly country_like: InputMaybe<Scalars['string']>;
    readonly country_lt: InputMaybe<Scalars['string']>;
    readonly country_neq: InputMaybe<Scalars['string']>;
    readonly country_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly country_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly deviceId: InputMaybe<Scalars['string']>;
    readonly deviceId_geq: InputMaybe<Scalars['string']>;
    readonly deviceId_gt: InputMaybe<Scalars['string']>;
    readonly deviceId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceId_leq: InputMaybe<Scalars['string']>;
    readonly deviceId_like: InputMaybe<Scalars['string']>;
    readonly deviceId_lt: InputMaybe<Scalars['string']>;
    readonly deviceId_neq: InputMaybe<Scalars['string']>;
    readonly deviceId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceId_notlike: InputMaybe<Scalars['string']>;
    readonly hasExistingJWT: InputMaybe<Scalars['uint8']>;
    readonly hasExistingJWT_geq: InputMaybe<Scalars['uint8']>;
    readonly hasExistingJWT_gt: InputMaybe<Scalars['uint8']>;
    readonly hasExistingJWT_in: InputMaybe<Scalars['bytes']>;
    readonly hasExistingJWT_leq: InputMaybe<Scalars['uint8']>;
    readonly hasExistingJWT_lt: InputMaybe<Scalars['uint8']>;
    readonly hasExistingJWT_neq: InputMaybe<Scalars['uint8']>;
    readonly hasExistingJWT_notin: InputMaybe<Scalars['bytes']>;
    readonly hasGatewayEnabled: InputMaybe<Scalars['uint8']>;
    readonly hasGatewayEnabled_geq: InputMaybe<Scalars['uint8']>;
    readonly hasGatewayEnabled_gt: InputMaybe<Scalars['uint8']>;
    readonly hasGatewayEnabled_in: InputMaybe<Scalars['bytes']>;
    readonly hasGatewayEnabled_leq: InputMaybe<Scalars['uint8']>;
    readonly hasGatewayEnabled_lt: InputMaybe<Scalars['uint8']>;
    readonly hasGatewayEnabled_neq: InputMaybe<Scalars['uint8']>;
    readonly hasGatewayEnabled_notin: InputMaybe<Scalars['bytes']>;
    readonly hasWarpEnabled: InputMaybe<Scalars['uint8']>;
    readonly hasWarpEnabled_geq: InputMaybe<Scalars['uint8']>;
    readonly hasWarpEnabled_gt: InputMaybe<Scalars['uint8']>;
    readonly hasWarpEnabled_in: InputMaybe<Scalars['bytes']>;
    readonly hasWarpEnabled_leq: InputMaybe<Scalars['uint8']>;
    readonly hasWarpEnabled_lt: InputMaybe<Scalars['uint8']>;
    readonly hasWarpEnabled_neq: InputMaybe<Scalars['uint8']>;
    readonly hasWarpEnabled_notin: InputMaybe<Scalars['bytes']>;
    readonly identityProvider: InputMaybe<Scalars['string']>;
    readonly identityProvider_geq: InputMaybe<Scalars['string']>;
    readonly identityProvider_gt: InputMaybe<Scalars['string']>;
    readonly identityProvider_in: InputMaybe<readonly Scalars['string'][]>;
    readonly identityProvider_leq: InputMaybe<Scalars['string']>;
    readonly identityProvider_like: InputMaybe<Scalars['string']>;
    readonly identityProvider_lt: InputMaybe<Scalars['string']>;
    readonly identityProvider_neq: InputMaybe<Scalars['string']>;
    readonly identityProvider_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly identityProvider_notlike: InputMaybe<Scalars['string']>;
    readonly ipAddress: InputMaybe<Scalars['string']>;
    readonly ipAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipAddress_like: InputMaybe<Scalars['string']>;
    readonly ipAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipAddress_notlike: InputMaybe<Scalars['string']>;
    readonly isSuccessfulLogin: InputMaybe<Scalars['uint8']>;
    readonly isSuccessfulLogin_geq: InputMaybe<Scalars['uint8']>;
    readonly isSuccessfulLogin_gt: InputMaybe<Scalars['uint8']>;
    readonly isSuccessfulLogin_in: InputMaybe<Scalars['bytes']>;
    readonly isSuccessfulLogin_leq: InputMaybe<Scalars['uint8']>;
    readonly isSuccessfulLogin_lt: InputMaybe<Scalars['uint8']>;
    readonly isSuccessfulLogin_neq: InputMaybe<Scalars['uint8']>;
    readonly isSuccessfulLogin_notin: InputMaybe<Scalars['bytes']>;
    readonly mtlsCertSerialId: InputMaybe<Scalars['string']>;
    readonly mtlsCertSerialId_geq: InputMaybe<Scalars['string']>;
    readonly mtlsCertSerialId_gt: InputMaybe<Scalars['string']>;
    readonly mtlsCertSerialId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mtlsCertSerialId_leq: InputMaybe<Scalars['string']>;
    readonly mtlsCertSerialId_like: InputMaybe<Scalars['string']>;
    readonly mtlsCertSerialId_lt: InputMaybe<Scalars['string']>;
    readonly mtlsCertSerialId_neq: InputMaybe<Scalars['string']>;
    readonly mtlsCertSerialId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mtlsCertSerialId_notlike: InputMaybe<Scalars['string']>;
    readonly mtlsCommonName: InputMaybe<Scalars['string']>;
    readonly mtlsCommonName_geq: InputMaybe<Scalars['string']>;
    readonly mtlsCommonName_gt: InputMaybe<Scalars['string']>;
    readonly mtlsCommonName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mtlsCommonName_leq: InputMaybe<Scalars['string']>;
    readonly mtlsCommonName_like: InputMaybe<Scalars['string']>;
    readonly mtlsCommonName_lt: InputMaybe<Scalars['string']>;
    readonly mtlsCommonName_neq: InputMaybe<Scalars['string']>;
    readonly mtlsCommonName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mtlsCommonName_notlike: InputMaybe<Scalars['string']>;
    readonly mtlsStatus: InputMaybe<Scalars['string']>;
    readonly mtlsStatus_geq: InputMaybe<Scalars['string']>;
    readonly mtlsStatus_gt: InputMaybe<Scalars['string']>;
    readonly mtlsStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mtlsStatus_leq: InputMaybe<Scalars['string']>;
    readonly mtlsStatus_like: InputMaybe<Scalars['string']>;
    readonly mtlsStatus_lt: InputMaybe<Scalars['string']>;
    readonly mtlsStatus_neq: InputMaybe<Scalars['string']>;
    readonly mtlsStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mtlsStatus_notlike: InputMaybe<Scalars['string']>;
    readonly serviceTokenId: InputMaybe<Scalars['string']>;
    readonly serviceTokenId_geq: InputMaybe<Scalars['string']>;
    readonly serviceTokenId_gt: InputMaybe<Scalars['string']>;
    readonly serviceTokenId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly serviceTokenId_leq: InputMaybe<Scalars['string']>;
    readonly serviceTokenId_like: InputMaybe<Scalars['string']>;
    readonly serviceTokenId_lt: InputMaybe<Scalars['string']>;
    readonly serviceTokenId_neq: InputMaybe<Scalars['string']>;
    readonly serviceTokenId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly serviceTokenId_notlike: InputMaybe<Scalars['string']>;
    readonly userUuid: InputMaybe<Scalars['string']>;
    readonly userUuid_geq: InputMaybe<Scalars['string']>;
    readonly userUuid_gt: InputMaybe<Scalars['string']>;
    readonly userUuid_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userUuid_leq: InputMaybe<Scalars['string']>;
    readonly userUuid_like: InputMaybe<Scalars['string']>;
    readonly userUuid_lt: InputMaybe<Scalars['string']>;
    readonly userUuid_neq: InputMaybe<Scalars['string']>;
    readonly userUuid_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userUuid_notlike: InputMaybe<Scalars['string']>;
}

type AccountAccessLoginRequestsAdaptiveGroupsOrderBy =
  /** appId ascending */
  | 'appId_ASC'
  /** appId descending */
  | 'appId_DESC'
  /** approvingPolicyId ascending */
  | 'approvingPolicyId_ASC'
  /** approvingPolicyId descending */
  | 'approvingPolicyId_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** cfRayId ascending */
  | 'cfRayId_ASC'
  /** cfRayId descending */
  | 'cfRayId_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** country ascending */
  | 'country_ASC'
  /** country descending */
  | 'country_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** deviceId ascending */
  | 'deviceId_ASC'
  /** deviceId descending */
  | 'deviceId_DESC'
  /** hasExistingJWT ascending */
  | 'hasExistingJWT_ASC'
  /** hasExistingJWT descending */
  | 'hasExistingJWT_DESC'
  /** hasGatewayEnabled ascending */
  | 'hasGatewayEnabled_ASC'
  /** hasGatewayEnabled descending */
  | 'hasGatewayEnabled_DESC'
  /** hasWarpEnabled ascending */
  | 'hasWarpEnabled_ASC'
  /** hasWarpEnabled descending */
  | 'hasWarpEnabled_DESC'
  /** identityProvider ascending */
  | 'identityProvider_ASC'
  /** identityProvider descending */
  | 'identityProvider_DESC'
  /** ipAddress ascending */
  | 'ipAddress_ASC'
  /** ipAddress descending */
  | 'ipAddress_DESC'
  /** isSuccessfulLogin ascending */
  | 'isSuccessfulLogin_ASC'
  /** isSuccessfulLogin descending */
  | 'isSuccessfulLogin_DESC'
  /** mtlsCertSerialId ascending */
  | 'mtlsCertSerialId_ASC'
  /** mtlsCertSerialId descending */
  | 'mtlsCertSerialId_DESC'
  /** mtlsCommonName ascending */
  | 'mtlsCommonName_ASC'
  /** mtlsCommonName descending */
  | 'mtlsCommonName_DESC'
  /** mtlsStatus ascending */
  | 'mtlsStatus_ASC'
  /** mtlsStatus descending */
  | 'mtlsStatus_DESC'
  /** serviceTokenId ascending */
  | 'serviceTokenId_ASC'
  /** serviceTokenId descending */
  | 'serviceTokenId_DESC'
  /** userUuid ascending */
  | 'userUuid_ASC'
  /** userUuid descending */
  | 'userUuid_DESC';

interface AccountCdnNetworkAnalyticsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountCdnNetworkAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountCdnNetworkAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly coloCity: InputMaybe<Scalars['string']>;
    readonly coloCity_geq: InputMaybe<Scalars['string']>;
    readonly coloCity_gt: InputMaybe<Scalars['string']>;
    readonly coloCity_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_leq: InputMaybe<Scalars['string']>;
    readonly coloCity_like: InputMaybe<Scalars['string']>;
    readonly coloCity_lt: InputMaybe<Scalars['string']>;
    readonly coloCity_neq: InputMaybe<Scalars['string']>;
    readonly coloCity_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_notlike: InputMaybe<Scalars['string']>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly coloCountry: InputMaybe<Scalars['string']>;
    readonly coloCountry_geq: InputMaybe<Scalars['string']>;
    readonly coloCountry_gt: InputMaybe<Scalars['string']>;
    readonly coloCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_leq: InputMaybe<Scalars['string']>;
    readonly coloCountry_like: InputMaybe<Scalars['string']>;
    readonly coloCountry_lt: InputMaybe<Scalars['string']>;
    readonly coloCountry_neq: InputMaybe<Scalars['string']>;
    readonly coloCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_notlike: InputMaybe<Scalars['string']>;
    readonly coloGeohash: InputMaybe<Scalars['string']>;
    readonly coloGeohash_geq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_gt: InputMaybe<Scalars['string']>;
    readonly coloGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloGeohash_leq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_like: InputMaybe<Scalars['string']>;
    readonly coloGeohash_lt: InputMaybe<Scalars['string']>;
    readonly coloGeohash_neq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly coloName: InputMaybe<Scalars['string']>;
    readonly coloName_geq: InputMaybe<Scalars['string']>;
    readonly coloName_gt: InputMaybe<Scalars['string']>;
    readonly coloName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloName_leq: InputMaybe<Scalars['string']>;
    readonly coloName_like: InputMaybe<Scalars['string']>;
    readonly coloName_lt: InputMaybe<Scalars['string']>;
    readonly coloName_neq: InputMaybe<Scalars['string']>;
    readonly coloName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationAsn: InputMaybe<Scalars['uint32']>;
    readonly destinationAsnName: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_geq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_gt: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAsnName_leq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_like: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_lt: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_neq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAsnName_notlike: InputMaybe<Scalars['string']>;
    readonly destinationAsn_geq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_gt: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly destinationAsn_leq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_lt: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_neq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly destinationCountry: InputMaybe<Scalars['string']>;
    readonly destinationCountry_geq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_gt: InputMaybe<Scalars['string']>;
    readonly destinationCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationCountry_leq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_like: InputMaybe<Scalars['string']>;
    readonly destinationCountry_lt: InputMaybe<Scalars['string']>;
    readonly destinationCountry_neq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationCountry_notlike: InputMaybe<Scalars['string']>;
    readonly destinationGeohash: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_geq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_gt: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationGeohash_leq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_like: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_lt: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_neq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly direction: InputMaybe<Scalars['string']>;
    readonly direction_geq: InputMaybe<Scalars['string']>;
    readonly direction_gt: InputMaybe<Scalars['string']>;
    readonly direction_in: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_leq: InputMaybe<Scalars['string']>;
    readonly direction_like: InputMaybe<Scalars['string']>;
    readonly direction_lt: InputMaybe<Scalars['string']>;
    readonly direction_neq: InputMaybe<Scalars['string']>;
    readonly direction_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_notlike: InputMaybe<Scalars['string']>;
    readonly ethertype: InputMaybe<Scalars['uint16']>;
    readonly ethertype_geq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_gt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ethertype_leq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_lt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_neq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greChecksum: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greEthertype: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_geq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_gt: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greEthertype_leq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_lt: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_neq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greHeaderLength: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_geq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_gt: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greHeaderLength_leq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_lt: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_neq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greKey: InputMaybe<Scalars['uint32']>;
    readonly greKey_geq: InputMaybe<Scalars['uint32']>;
    readonly greKey_gt: InputMaybe<Scalars['uint32']>;
    readonly greKey_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greKey_leq: InputMaybe<Scalars['uint32']>;
    readonly greKey_lt: InputMaybe<Scalars['uint32']>;
    readonly greKey_neq: InputMaybe<Scalars['uint32']>;
    readonly greKey_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greSequenceNumber: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greSequenceNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greVersion: InputMaybe<Scalars['uint8']>;
    readonly greVersion_geq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_gt: InputMaybe<Scalars['uint8']>;
    readonly greVersion_in: InputMaybe<Scalars['bytes']>;
    readonly greVersion_leq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_lt: InputMaybe<Scalars['uint8']>;
    readonly greVersion_neq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_notin: InputMaybe<Scalars['bytes']>;
    readonly icmpChecksum: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly icmpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly icmpCode: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_geq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_gt: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_in: InputMaybe<Scalars['bytes']>;
    readonly icmpCode_leq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_lt: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_neq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_notin: InputMaybe<Scalars['bytes']>;
    readonly icmpType: InputMaybe<Scalars['uint8']>;
    readonly icmpType_geq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_gt: InputMaybe<Scalars['uint8']>;
    readonly icmpType_in: InputMaybe<Scalars['bytes']>;
    readonly icmpType_leq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_lt: InputMaybe<Scalars['uint8']>;
    readonly icmpType_neq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_notin: InputMaybe<Scalars['bytes']>;
    readonly ipDestinationAddress: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_like: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationAddress_notlike: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_geq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_gt: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationSubnet_leq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_like: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_lt: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_neq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationSubnet_notlike: InputMaybe<Scalars['string']>;
    readonly ipFragmentOffset: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_geq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_gt: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipFragmentOffset_leq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_lt: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_neq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipHeaderLength: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_geq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_gt: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipHeaderLength_leq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_lt: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_neq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipMoreFragments: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_geq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_gt: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_in: InputMaybe<Scalars['bytes']>;
    readonly ipMoreFragments_leq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_lt: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_neq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_notin: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol: InputMaybe<Scalars['uint8']>;
    readonly ipProtocolName: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_geq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_gt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_leq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_like: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_lt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_neq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_notlike: InputMaybe<Scalars['string']>;
    readonly ipProtocol_geq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_gt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_in: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol_leq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_lt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_neq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_notin: InputMaybe<Scalars['bytes']>;
    readonly ipSourceAddress: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_like: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceAddress_notlike: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_geq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_gt: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceSubnet_leq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_like: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_lt: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_neq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceSubnet_notlike: InputMaybe<Scalars['string']>;
    readonly ipTotalLength: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_geq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_gt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLengthBuckets_leq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_lt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_neq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLength_geq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_gt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLength_leq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_lt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_neq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTtl: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_geq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_gt: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_in: InputMaybe<Scalars['bytes']>;
    readonly ipTtlBuckets_leq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_lt: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_neq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_notin: InputMaybe<Scalars['bytes']>;
    readonly ipTtl_geq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_gt: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_in: InputMaybe<Scalars['bytes']>;
    readonly ipTtl_leq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_lt: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_neq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Checksum: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_geq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_gt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Checksum_leq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_lt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_neq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4DontFragment: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4DontFragment_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Dscp: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4Dscp_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Ecn: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4Ecn_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Identification: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_geq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_gt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Identification_leq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_lt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_neq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Options: InputMaybe<Scalars['string']>;
    readonly ipv4Options_geq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_gt: InputMaybe<Scalars['string']>;
    readonly ipv4Options_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv4Options_leq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_like: InputMaybe<Scalars['string']>;
    readonly ipv4Options_lt: InputMaybe<Scalars['string']>;
    readonly ipv4Options_neq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv4Options_notlike: InputMaybe<Scalars['string']>;
    readonly ipv6Dscp: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_in: InputMaybe<Scalars['bytes']>;
    readonly ipv6Dscp_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv6Ecn: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_in: InputMaybe<Scalars['bytes']>;
    readonly ipv6Ecn_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv6ExtensionHeaders: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_geq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_gt: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv6ExtensionHeaders_leq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_like: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_lt: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_neq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv6ExtensionHeaders_notlike: InputMaybe<Scalars['string']>;
    readonly ipv6FlowLabel: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_geq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_gt: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6FlowLabel_leq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_lt: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_neq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6Identification: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_geq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_gt: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6Identification_leq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_lt: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_neq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly mitigationSystem: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_geq: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_gt: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationSystem_leq: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_like: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_lt: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_neq: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationSystem_notlike: InputMaybe<Scalars['string']>;
    readonly outcome: InputMaybe<Scalars['string']>;
    readonly outcome_geq: InputMaybe<Scalars['string']>;
    readonly outcome_gt: InputMaybe<Scalars['string']>;
    readonly outcome_in: InputMaybe<readonly Scalars['string'][]>;
    readonly outcome_leq: InputMaybe<Scalars['string']>;
    readonly outcome_like: InputMaybe<Scalars['string']>;
    readonly outcome_lt: InputMaybe<Scalars['string']>;
    readonly outcome_neq: InputMaybe<Scalars['string']>;
    readonly outcome_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly outcome_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceAsn: InputMaybe<Scalars['uint32']>;
    readonly sourceAsnName: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_geq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_gt: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAsnName_leq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_like: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_lt: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_neq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAsnName_notlike: InputMaybe<Scalars['string']>;
    readonly sourceAsn_geq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_gt: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceAsn_leq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_lt: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_neq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceCountry: InputMaybe<Scalars['string']>;
    readonly sourceCountry_geq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_gt: InputMaybe<Scalars['string']>;
    readonly sourceCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceCountry_leq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_like: InputMaybe<Scalars['string']>;
    readonly sourceCountry_lt: InputMaybe<Scalars['string']>;
    readonly sourceCountry_neq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceCountry_notlike: InputMaybe<Scalars['string']>;
    readonly sourceGeohash: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_geq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_gt: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceGeohash_leq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_like: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_lt: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_neq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly sourcePort: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly sourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpAcknowledgementNumber: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpAcknowledgementNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpChecksum: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpDataOffset: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpDataOffset_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpFlags: InputMaybe<Scalars['uint8']>;
    readonly tcpFlagsString: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_geq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_gt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_leq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_like: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_lt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_neq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_notlike: InputMaybe<Scalars['string']>;
    readonly tcpFlags_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_in: InputMaybe<Scalars['bytes']>;
    readonly tcpFlags_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_notin: InputMaybe<Scalars['bytes']>;
    readonly tcpMss: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpMss_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpOptions: InputMaybe<Scalars['string']>;
    readonly tcpOptions_geq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_gt: InputMaybe<Scalars['string']>;
    readonly tcpOptions_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpOptions_leq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_like: InputMaybe<Scalars['string']>;
    readonly tcpOptions_lt: InputMaybe<Scalars['string']>;
    readonly tcpOptions_neq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpOptions_notlike: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_geq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_gt: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpSackBlocks_leq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_like: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_lt: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_neq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpSackBlocks_notlike: InputMaybe<Scalars['string']>;
    readonly tcpSackPermitted: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_in: InputMaybe<Scalars['bytes']>;
    readonly tcpSackPermitted_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_notin: InputMaybe<Scalars['bytes']>;
    readonly tcpSequenceNumber: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpSequenceNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampEcr: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampEcr_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampValue: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampValue_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpUrgentPointer: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpUrgentPointer_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowScale: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowScale_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowSize: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowSize_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpChecksum: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpPayloadLength: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_geq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_gt: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpPayloadLength_leq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_lt: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_neq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
}

type AccountCdnNetworkAnalyticsAdaptiveGroupsOrderBy =
  /** avg(bitRateDay) ascending */
  | 'avg_bitRateDay_ASC'
  /** avg(bitRateDay) descending */
  | 'avg_bitRateDay_DESC'
  /** avg(bitRateFifteenMinutes) ascending */
  | 'avg_bitRateFifteenMinutes_ASC'
  /** avg(bitRateFifteenMinutes) descending */
  | 'avg_bitRateFifteenMinutes_DESC'
  /** avg(bitRateFiveMinutes) ascending */
  | 'avg_bitRateFiveMinutes_ASC'
  /** avg(bitRateFiveMinutes) descending */
  | 'avg_bitRateFiveMinutes_DESC'
  /** avg(bitRateHour) ascending */
  | 'avg_bitRateHour_ASC'
  /** avg(bitRateHour) descending */
  | 'avg_bitRateHour_DESC'
  /** avg(bitRateMinute) ascending */
  | 'avg_bitRateMinute_ASC'
  /** avg(bitRateMinute) descending */
  | 'avg_bitRateMinute_DESC'
  /** avg(bitRateTenSeconds) ascending */
  | 'avg_bitRateTenSeconds_ASC'
  /** avg(bitRateTenSeconds) descending */
  | 'avg_bitRateTenSeconds_DESC'
  /** avg(bitRate) ascending */
  | 'avg_bitRate_ASC'
  /** avg(bitRate) descending */
  | 'avg_bitRate_DESC'
  /** avg(packetRateDay) ascending */
  | 'avg_packetRateDay_ASC'
  /** avg(packetRateDay) descending */
  | 'avg_packetRateDay_DESC'
  /** avg(packetRateFifteenMinutes) ascending */
  | 'avg_packetRateFifteenMinutes_ASC'
  /** avg(packetRateFifteenMinutes) descending */
  | 'avg_packetRateFifteenMinutes_DESC'
  /** avg(packetRateFiveMinutes) ascending */
  | 'avg_packetRateFiveMinutes_ASC'
  /** avg(packetRateFiveMinutes) descending */
  | 'avg_packetRateFiveMinutes_DESC'
  /** avg(packetRateHour) ascending */
  | 'avg_packetRateHour_ASC'
  /** avg(packetRateHour) descending */
  | 'avg_packetRateHour_DESC'
  /** avg(packetRateMinute) ascending */
  | 'avg_packetRateMinute_ASC'
  /** avg(packetRateMinute) descending */
  | 'avg_packetRateMinute_DESC'
  /** avg(packetRateTenSeconds) ascending */
  | 'avg_packetRateTenSeconds_ASC'
  /** avg(packetRateTenSeconds) descending */
  | 'avg_packetRateTenSeconds_DESC'
  /** avg(packetRate) ascending */
  | 'avg_packetRate_ASC'
  /** avg(packetRate) descending */
  | 'avg_packetRate_DESC'
  /** coloCity ascending */
  | 'coloCity_ASC'
  /** coloCity descending */
  | 'coloCity_DESC'
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** coloCountry ascending */
  | 'coloCountry_ASC'
  /** coloCountry descending */
  | 'coloCountry_DESC'
  /** coloGeohash ascending */
  | 'coloGeohash_ASC'
  /** coloGeohash descending */
  | 'coloGeohash_DESC'
  /** coloName ascending */
  | 'coloName_ASC'
  /** coloName descending */
  | 'coloName_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetimeTenSeconds ascending */
  | 'datetimeTenSeconds_ASC'
  /** datetimeTenSeconds descending */
  | 'datetimeTenSeconds_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** destinationAsnName ascending */
  | 'destinationAsnName_ASC'
  /** destinationAsnName descending */
  | 'destinationAsnName_DESC'
  /** destinationAsn ascending */
  | 'destinationAsn_ASC'
  /** destinationAsn descending */
  | 'destinationAsn_DESC'
  /** destinationCountry ascending */
  | 'destinationCountry_ASC'
  /** destinationCountry descending */
  | 'destinationCountry_DESC'
  /** destinationGeohash ascending */
  | 'destinationGeohash_ASC'
  /** destinationGeohash descending */
  | 'destinationGeohash_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** direction ascending */
  | 'direction_ASC'
  /** direction descending */
  | 'direction_DESC'
  /** ethertype ascending */
  | 'ethertype_ASC'
  /** ethertype descending */
  | 'ethertype_DESC'
  /** greChecksum ascending */
  | 'greChecksum_ASC'
  /** greChecksum descending */
  | 'greChecksum_DESC'
  /** greEthertype ascending */
  | 'greEthertype_ASC'
  /** greEthertype descending */
  | 'greEthertype_DESC'
  /** greHeaderLength ascending */
  | 'greHeaderLength_ASC'
  /** greHeaderLength descending */
  | 'greHeaderLength_DESC'
  /** greKey ascending */
  | 'greKey_ASC'
  /** greKey descending */
  | 'greKey_DESC'
  /** greSequenceNumber ascending */
  | 'greSequenceNumber_ASC'
  /** greSequenceNumber descending */
  | 'greSequenceNumber_DESC'
  /** greVersion ascending */
  | 'greVersion_ASC'
  /** greVersion descending */
  | 'greVersion_DESC'
  /** icmpChecksum ascending */
  | 'icmpChecksum_ASC'
  /** icmpChecksum descending */
  | 'icmpChecksum_DESC'
  /** icmpCode ascending */
  | 'icmpCode_ASC'
  /** icmpCode descending */
  | 'icmpCode_DESC'
  /** icmpType ascending */
  | 'icmpType_ASC'
  /** icmpType descending */
  | 'icmpType_DESC'
  /** ipDestinationAddress ascending */
  | 'ipDestinationAddress_ASC'
  /** ipDestinationAddress descending */
  | 'ipDestinationAddress_DESC'
  /** ipDestinationSubnet ascending */
  | 'ipDestinationSubnet_ASC'
  /** ipDestinationSubnet descending */
  | 'ipDestinationSubnet_DESC'
  /** ipFragmentOffset ascending */
  | 'ipFragmentOffset_ASC'
  /** ipFragmentOffset descending */
  | 'ipFragmentOffset_DESC'
  /** ipHeaderLength ascending */
  | 'ipHeaderLength_ASC'
  /** ipHeaderLength descending */
  | 'ipHeaderLength_DESC'
  /** ipMoreFragments ascending */
  | 'ipMoreFragments_ASC'
  /** ipMoreFragments descending */
  | 'ipMoreFragments_DESC'
  /** ipProtocolName ascending */
  | 'ipProtocolName_ASC'
  /** ipProtocolName descending */
  | 'ipProtocolName_DESC'
  /** ipProtocol ascending */
  | 'ipProtocol_ASC'
  /** ipProtocol descending */
  | 'ipProtocol_DESC'
  /** ipSourceAddress ascending */
  | 'ipSourceAddress_ASC'
  /** ipSourceAddress descending */
  | 'ipSourceAddress_DESC'
  /** ipSourceSubnet ascending */
  | 'ipSourceSubnet_ASC'
  /** ipSourceSubnet descending */
  | 'ipSourceSubnet_DESC'
  /** ipTotalLengthBuckets ascending */
  | 'ipTotalLengthBuckets_ASC'
  /** ipTotalLengthBuckets descending */
  | 'ipTotalLengthBuckets_DESC'
  /** ipTotalLength ascending */
  | 'ipTotalLength_ASC'
  /** ipTotalLength descending */
  | 'ipTotalLength_DESC'
  /** ipTtlBuckets ascending */
  | 'ipTtlBuckets_ASC'
  /** ipTtlBuckets descending */
  | 'ipTtlBuckets_DESC'
  /** ipTtl ascending */
  | 'ipTtl_ASC'
  /** ipTtl descending */
  | 'ipTtl_DESC'
  /** ipv4Checksum ascending */
  | 'ipv4Checksum_ASC'
  /** ipv4Checksum descending */
  | 'ipv4Checksum_DESC'
  /** ipv4DontFragment ascending */
  | 'ipv4DontFragment_ASC'
  /** ipv4DontFragment descending */
  | 'ipv4DontFragment_DESC'
  /** ipv4Dscp ascending */
  | 'ipv4Dscp_ASC'
  /** ipv4Dscp descending */
  | 'ipv4Dscp_DESC'
  /** ipv4Ecn ascending */
  | 'ipv4Ecn_ASC'
  /** ipv4Ecn descending */
  | 'ipv4Ecn_DESC'
  /** ipv4Identification ascending */
  | 'ipv4Identification_ASC'
  /** ipv4Identification descending */
  | 'ipv4Identification_DESC'
  /** ipv4Options ascending */
  | 'ipv4Options_ASC'
  /** ipv4Options descending */
  | 'ipv4Options_DESC'
  /** ipv6Dscp ascending */
  | 'ipv6Dscp_ASC'
  /** ipv6Dscp descending */
  | 'ipv6Dscp_DESC'
  /** ipv6Ecn ascending */
  | 'ipv6Ecn_ASC'
  /** ipv6Ecn descending */
  | 'ipv6Ecn_DESC'
  /** ipv6ExtensionHeaders ascending */
  | 'ipv6ExtensionHeaders_ASC'
  /** ipv6ExtensionHeaders descending */
  | 'ipv6ExtensionHeaders_DESC'
  /** ipv6FlowLabel ascending */
  | 'ipv6FlowLabel_ASC'
  /** ipv6FlowLabel descending */
  | 'ipv6FlowLabel_DESC'
  /** ipv6Identification ascending */
  | 'ipv6Identification_ASC'
  /** ipv6Identification descending */
  | 'ipv6Identification_DESC'
  /** mitigationSystem ascending */
  | 'mitigationSystem_ASC'
  /** mitigationSystem descending */
  | 'mitigationSystem_DESC'
  /** outcome ascending */
  | 'outcome_ASC'
  /** outcome descending */
  | 'outcome_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** sourceAsnName ascending */
  | 'sourceAsnName_ASC'
  /** sourceAsnName descending */
  | 'sourceAsnName_DESC'
  /** sourceAsn ascending */
  | 'sourceAsn_ASC'
  /** sourceAsn descending */
  | 'sourceAsn_DESC'
  /** sourceCountry ascending */
  | 'sourceCountry_ASC'
  /** sourceCountry descending */
  | 'sourceCountry_DESC'
  /** sourceGeohash ascending */
  | 'sourceGeohash_ASC'
  /** sourceGeohash descending */
  | 'sourceGeohash_DESC'
  /** sourcePort ascending */
  | 'sourcePort_ASC'
  /** sourcePort descending */
  | 'sourcePort_DESC'
  /** sum(bits) ascending */
  | 'sum_bits_ASC'
  /** sum(bits) descending */
  | 'sum_bits_DESC'
  /** sum(packets) ascending */
  | 'sum_packets_ASC'
  /** sum(packets) descending */
  | 'sum_packets_DESC'
  /** system ascending */
  | 'system_ASC'
  /** system descending */
  | 'system_DESC'
  /** tcpAcknowledgementNumber ascending */
  | 'tcpAcknowledgementNumber_ASC'
  /** tcpAcknowledgementNumber descending */
  | 'tcpAcknowledgementNumber_DESC'
  /** tcpChecksum ascending */
  | 'tcpChecksum_ASC'
  /** tcpChecksum descending */
  | 'tcpChecksum_DESC'
  /** tcpDataOffset ascending */
  | 'tcpDataOffset_ASC'
  /** tcpDataOffset descending */
  | 'tcpDataOffset_DESC'
  /** tcpFlagsString ascending */
  | 'tcpFlagsString_ASC'
  /** tcpFlagsString descending */
  | 'tcpFlagsString_DESC'
  /** tcpFlags ascending */
  | 'tcpFlags_ASC'
  /** tcpFlags descending */
  | 'tcpFlags_DESC'
  /** tcpMss ascending */
  | 'tcpMss_ASC'
  /** tcpMss descending */
  | 'tcpMss_DESC'
  /** tcpOptions ascending */
  | 'tcpOptions_ASC'
  /** tcpOptions descending */
  | 'tcpOptions_DESC'
  /** tcpSackBlocks ascending */
  | 'tcpSackBlocks_ASC'
  /** tcpSackBlocks descending */
  | 'tcpSackBlocks_DESC'
  /** tcpSackPermitted ascending */
  | 'tcpSackPermitted_ASC'
  /** tcpSackPermitted descending */
  | 'tcpSackPermitted_DESC'
  /** tcpSequenceNumber ascending */
  | 'tcpSequenceNumber_ASC'
  /** tcpSequenceNumber descending */
  | 'tcpSequenceNumber_DESC'
  /** tcpTimestampEcr ascending */
  | 'tcpTimestampEcr_ASC'
  /** tcpTimestampEcr descending */
  | 'tcpTimestampEcr_DESC'
  /** tcpTimestampValue ascending */
  | 'tcpTimestampValue_ASC'
  /** tcpTimestampValue descending */
  | 'tcpTimestampValue_DESC'
  /** tcpUrgentPointer ascending */
  | 'tcpUrgentPointer_ASC'
  /** tcpUrgentPointer descending */
  | 'tcpUrgentPointer_DESC'
  /** tcpWindowScale ascending */
  | 'tcpWindowScale_ASC'
  /** tcpWindowScale descending */
  | 'tcpWindowScale_DESC'
  /** tcpWindowSize ascending */
  | 'tcpWindowSize_ASC'
  /** tcpWindowSize descending */
  | 'tcpWindowSize_DESC'
  /** udpChecksum ascending */
  | 'udpChecksum_ASC'
  /** udpChecksum descending */
  | 'udpChecksum_DESC'
  /** udpPayloadLength ascending */
  | 'udpPayloadLength_ASC'
  /** udpPayloadLength descending */
  | 'udpPayloadLength_DESC'
  /** verdict ascending */
  | 'verdict_ASC'
  /** verdict descending */
  | 'verdict_DESC';

interface AccountDosdAttackAnalyticsGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountDosdAttackAnalyticsGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountDosdAttackAnalyticsGroupsFilter_InputObject[]>;
    readonly attackId: InputMaybe<Scalars['string']>;
    readonly attackId_geq: InputMaybe<Scalars['string']>;
    readonly attackId_gt: InputMaybe<Scalars['string']>;
    readonly attackId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_leq: InputMaybe<Scalars['string']>;
    readonly attackId_like: InputMaybe<Scalars['string']>;
    readonly attackId_lt: InputMaybe<Scalars['string']>;
    readonly attackId_neq: InputMaybe<Scalars['string']>;
    readonly attackId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_notlike: InputMaybe<Scalars['string']>;
    readonly attackType: InputMaybe<Scalars['string']>;
    readonly attackType_geq: InputMaybe<Scalars['string']>;
    readonly attackType_gt: InputMaybe<Scalars['string']>;
    readonly attackType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackType_leq: InputMaybe<Scalars['string']>;
    readonly attackType_like: InputMaybe<Scalars['string']>;
    readonly attackType_lt: InputMaybe<Scalars['string']>;
    readonly attackType_neq: InputMaybe<Scalars['string']>;
    readonly attackType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackType_notlike: InputMaybe<Scalars['string']>;
    readonly bits: InputMaybe<Scalars['uint64']>;
    readonly bits_geq: InputMaybe<Scalars['uint64']>;
    readonly bits_gt: InputMaybe<Scalars['uint64']>;
    readonly bits_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly bits_leq: InputMaybe<Scalars['uint64']>;
    readonly bits_lt: InputMaybe<Scalars['uint64']>;
    readonly bits_neq: InputMaybe<Scalars['uint64']>;
    readonly bits_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly commonTcpFlags: InputMaybe<Scalars['uint8']>;
    readonly commonTcpFlagsNames: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_geq: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_gt: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_in: InputMaybe<readonly Scalars['string'][]>;
    readonly commonTcpFlagsNames_leq: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_like: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_lt: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_neq: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly commonTcpFlagsNames_notlike: InputMaybe<Scalars['string']>;
    readonly commonTcpFlags_geq: InputMaybe<Scalars['uint8']>;
    readonly commonTcpFlags_gt: InputMaybe<Scalars['uint8']>;
    readonly commonTcpFlags_in: InputMaybe<Scalars['bytes']>;
    readonly commonTcpFlags_leq: InputMaybe<Scalars['uint8']>;
    readonly commonTcpFlags_lt: InputMaybe<Scalars['uint8']>;
    readonly commonTcpFlags_neq: InputMaybe<Scalars['uint8']>;
    readonly commonTcpFlags_notin: InputMaybe<Scalars['bytes']>;
    readonly destinationIp: InputMaybe<Scalars['string']>;
    readonly destinationIp_geq: InputMaybe<Scalars['string']>;
    readonly destinationIp_gt: InputMaybe<Scalars['string']>;
    readonly destinationIp_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIp_leq: InputMaybe<Scalars['string']>;
    readonly destinationIp_like: InputMaybe<Scalars['string']>;
    readonly destinationIp_lt: InputMaybe<Scalars['string']>;
    readonly destinationIp_neq: InputMaybe<Scalars['string']>;
    readonly destinationIp_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIp_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly endDatetime: InputMaybe<Scalars['Time']>;
    readonly endDatetime_geq: InputMaybe<Scalars['Time']>;
    readonly endDatetime_gt: InputMaybe<Scalars['Time']>;
    readonly endDatetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly endDatetime_leq: InputMaybe<Scalars['Time']>;
    readonly endDatetime_lt: InputMaybe<Scalars['Time']>;
    readonly endDatetime_neq: InputMaybe<Scalars['Time']>;
    readonly endDatetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly ipProtocol: InputMaybe<Scalars['uint8']>;
    readonly ipProtocolName: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_geq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_gt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_leq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_like: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_lt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_neq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_notlike: InputMaybe<Scalars['string']>;
    readonly ipProtocol_geq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_gt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_in: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol_leq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_lt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_neq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_notin: InputMaybe<Scalars['bytes']>;
    readonly mitigationReason: InputMaybe<Scalars['string']>;
    readonly mitigationReason_geq: InputMaybe<Scalars['string']>;
    readonly mitigationReason_gt: InputMaybe<Scalars['string']>;
    readonly mitigationReason_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationReason_leq: InputMaybe<Scalars['string']>;
    readonly mitigationReason_like: InputMaybe<Scalars['string']>;
    readonly mitigationReason_lt: InputMaybe<Scalars['string']>;
    readonly mitigationReason_neq: InputMaybe<Scalars['string']>;
    readonly mitigationReason_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationReason_notlike: InputMaybe<Scalars['string']>;
    readonly mitigationScope: InputMaybe<Scalars['string']>;
    readonly mitigationScope_geq: InputMaybe<Scalars['string']>;
    readonly mitigationScope_gt: InputMaybe<Scalars['string']>;
    readonly mitigationScope_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationScope_leq: InputMaybe<Scalars['string']>;
    readonly mitigationScope_like: InputMaybe<Scalars['string']>;
    readonly mitigationScope_lt: InputMaybe<Scalars['string']>;
    readonly mitigationScope_neq: InputMaybe<Scalars['string']>;
    readonly mitigationScope_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationScope_notlike: InputMaybe<Scalars['string']>;
    readonly mitigationType: InputMaybe<Scalars['string']>;
    readonly mitigationType_geq: InputMaybe<Scalars['string']>;
    readonly mitigationType_gt: InputMaybe<Scalars['string']>;
    readonly mitigationType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationType_leq: InputMaybe<Scalars['string']>;
    readonly mitigationType_like: InputMaybe<Scalars['string']>;
    readonly mitigationType_lt: InputMaybe<Scalars['string']>;
    readonly mitigationType_neq: InputMaybe<Scalars['string']>;
    readonly mitigationType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationType_notlike: InputMaybe<Scalars['string']>;
    readonly packets: InputMaybe<Scalars['uint64']>;
    readonly packets_geq: InputMaybe<Scalars['uint64']>;
    readonly packets_gt: InputMaybe<Scalars['uint64']>;
    readonly packets_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly packets_leq: InputMaybe<Scalars['uint64']>;
    readonly packets_lt: InputMaybe<Scalars['uint64']>;
    readonly packets_neq: InputMaybe<Scalars['uint64']>;
    readonly packets_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly sourceIp: InputMaybe<Scalars['string']>;
    readonly sourceIp_geq: InputMaybe<Scalars['string']>;
    readonly sourceIp_gt: InputMaybe<Scalars['string']>;
    readonly sourceIp_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIp_leq: InputMaybe<Scalars['string']>;
    readonly sourceIp_like: InputMaybe<Scalars['string']>;
    readonly sourceIp_lt: InputMaybe<Scalars['string']>;
    readonly sourceIp_neq: InputMaybe<Scalars['string']>;
    readonly sourceIp_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIp_notlike: InputMaybe<Scalars['string']>;
    readonly sourcePort: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly sourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly startDatetime: InputMaybe<Scalars['Time']>;
    readonly startDatetime_geq: InputMaybe<Scalars['Time']>;
    readonly startDatetime_gt: InputMaybe<Scalars['Time']>;
    readonly startDatetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly startDatetime_leq: InputMaybe<Scalars['Time']>;
    readonly startDatetime_lt: InputMaybe<Scalars['Time']>;
    readonly startDatetime_neq: InputMaybe<Scalars['Time']>;
    readonly startDatetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly tcpFlags: InputMaybe<Scalars['uint8']>;
    readonly tcpFlagsNames: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_geq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_gt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsNames_leq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_like: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_lt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_neq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsNames_notlike: InputMaybe<Scalars['string']>;
    readonly tcpFlags_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_in: InputMaybe<Scalars['bytes']>;
    readonly tcpFlags_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_notin: InputMaybe<Scalars['bytes']>;
}

type AccountDosdAttackAnalyticsGroupsOrderBy =
  /** attackId ascending */
  | 'attackId_ASC'
  /** attackId descending */
  | 'attackId_DESC'
  /** attackType ascending */
  | 'attackType_ASC'
  /** attackType descending */
  | 'attackType_DESC'
  /** bits ascending */
  | 'bits_ASC'
  /** bits descending */
  | 'bits_DESC'
  /** commonTcpFlagsNames ascending */
  | 'commonTcpFlagsNames_ASC'
  /** commonTcpFlagsNames descending */
  | 'commonTcpFlagsNames_DESC'
  /** commonTcpFlags ascending */
  | 'commonTcpFlags_ASC'
  /** commonTcpFlags descending */
  | 'commonTcpFlags_DESC'
  /** destinationIp ascending */
  | 'destinationIp_ASC'
  /** destinationIp descending */
  | 'destinationIp_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** endDatetime ascending */
  | 'endDatetime_ASC'
  /** endDatetime descending */
  | 'endDatetime_DESC'
  /** ipProtocolName ascending */
  | 'ipProtocolName_ASC'
  /** ipProtocolName descending */
  | 'ipProtocolName_DESC'
  /** ipProtocol ascending */
  | 'ipProtocol_ASC'
  /** ipProtocol descending */
  | 'ipProtocol_DESC'
  /** mitigationReason ascending */
  | 'mitigationReason_ASC'
  /** mitigationReason descending */
  | 'mitigationReason_DESC'
  /** mitigationScope ascending */
  | 'mitigationScope_ASC'
  /** mitigationScope descending */
  | 'mitigationScope_DESC'
  /** mitigationType ascending */
  | 'mitigationType_ASC'
  /** mitigationType descending */
  | 'mitigationType_DESC'
  /** packets ascending */
  | 'packets_ASC'
  /** packets descending */
  | 'packets_DESC'
  /** sourceIp ascending */
  | 'sourceIp_ASC'
  /** sourceIp descending */
  | 'sourceIp_DESC'
  /** sourcePort ascending */
  | 'sourcePort_ASC'
  /** sourcePort descending */
  | 'sourcePort_DESC'
  /** startDatetime ascending */
  | 'startDatetime_ASC'
  /** startDatetime descending */
  | 'startDatetime_DESC'
  /** tcpFlagsNames ascending */
  | 'tcpFlagsNames_ASC'
  /** tcpFlagsNames descending */
  | 'tcpFlagsNames_DESC'
  /** tcpFlags ascending */
  | 'tcpFlags_ASC'
  /** tcpFlags descending */
  | 'tcpFlags_DESC';

interface AccountDosdNetworkAnalyticsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountDosdNetworkAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountDosdNetworkAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly attackId: InputMaybe<Scalars['string']>;
    readonly attackId_geq: InputMaybe<Scalars['string']>;
    readonly attackId_gt: InputMaybe<Scalars['string']>;
    readonly attackId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_leq: InputMaybe<Scalars['string']>;
    readonly attackId_like: InputMaybe<Scalars['string']>;
    readonly attackId_lt: InputMaybe<Scalars['string']>;
    readonly attackId_neq: InputMaybe<Scalars['string']>;
    readonly attackId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_notlike: InputMaybe<Scalars['string']>;
    readonly coloCity: InputMaybe<Scalars['string']>;
    readonly coloCity_geq: InputMaybe<Scalars['string']>;
    readonly coloCity_gt: InputMaybe<Scalars['string']>;
    readonly coloCity_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_leq: InputMaybe<Scalars['string']>;
    readonly coloCity_like: InputMaybe<Scalars['string']>;
    readonly coloCity_lt: InputMaybe<Scalars['string']>;
    readonly coloCity_neq: InputMaybe<Scalars['string']>;
    readonly coloCity_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_notlike: InputMaybe<Scalars['string']>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly coloCountry: InputMaybe<Scalars['string']>;
    readonly coloCountry_geq: InputMaybe<Scalars['string']>;
    readonly coloCountry_gt: InputMaybe<Scalars['string']>;
    readonly coloCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_leq: InputMaybe<Scalars['string']>;
    readonly coloCountry_like: InputMaybe<Scalars['string']>;
    readonly coloCountry_lt: InputMaybe<Scalars['string']>;
    readonly coloCountry_neq: InputMaybe<Scalars['string']>;
    readonly coloCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_notlike: InputMaybe<Scalars['string']>;
    readonly coloGeohash: InputMaybe<Scalars['string']>;
    readonly coloGeohash_geq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_gt: InputMaybe<Scalars['string']>;
    readonly coloGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloGeohash_leq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_like: InputMaybe<Scalars['string']>;
    readonly coloGeohash_lt: InputMaybe<Scalars['string']>;
    readonly coloGeohash_neq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly coloName: InputMaybe<Scalars['string']>;
    readonly coloName_geq: InputMaybe<Scalars['string']>;
    readonly coloName_gt: InputMaybe<Scalars['string']>;
    readonly coloName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloName_leq: InputMaybe<Scalars['string']>;
    readonly coloName_like: InputMaybe<Scalars['string']>;
    readonly coloName_lt: InputMaybe<Scalars['string']>;
    readonly coloName_neq: InputMaybe<Scalars['string']>;
    readonly coloName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationAsn: InputMaybe<Scalars['uint32']>;
    readonly destinationAsnName: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_geq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_gt: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAsnName_leq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_like: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_lt: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_neq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAsnName_notlike: InputMaybe<Scalars['string']>;
    readonly destinationAsn_geq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_gt: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly destinationAsn_leq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_lt: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_neq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly destinationCountry: InputMaybe<Scalars['string']>;
    readonly destinationCountry_geq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_gt: InputMaybe<Scalars['string']>;
    readonly destinationCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationCountry_leq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_like: InputMaybe<Scalars['string']>;
    readonly destinationCountry_lt: InputMaybe<Scalars['string']>;
    readonly destinationCountry_neq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationCountry_notlike: InputMaybe<Scalars['string']>;
    readonly destinationGeohash: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_geq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_gt: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationGeohash_leq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_like: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_lt: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_neq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly direction: InputMaybe<Scalars['string']>;
    readonly direction_geq: InputMaybe<Scalars['string']>;
    readonly direction_gt: InputMaybe<Scalars['string']>;
    readonly direction_in: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_leq: InputMaybe<Scalars['string']>;
    readonly direction_like: InputMaybe<Scalars['string']>;
    readonly direction_lt: InputMaybe<Scalars['string']>;
    readonly direction_neq: InputMaybe<Scalars['string']>;
    readonly direction_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_notlike: InputMaybe<Scalars['string']>;
    readonly ethertype: InputMaybe<Scalars['uint16']>;
    readonly ethertype_geq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_gt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ethertype_leq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_lt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_neq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greChecksum: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greEthertype: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_geq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_gt: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greEthertype_leq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_lt: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_neq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greHeaderLength: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_geq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_gt: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greHeaderLength_leq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_lt: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_neq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greKey: InputMaybe<Scalars['uint32']>;
    readonly greKey_geq: InputMaybe<Scalars['uint32']>;
    readonly greKey_gt: InputMaybe<Scalars['uint32']>;
    readonly greKey_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greKey_leq: InputMaybe<Scalars['uint32']>;
    readonly greKey_lt: InputMaybe<Scalars['uint32']>;
    readonly greKey_neq: InputMaybe<Scalars['uint32']>;
    readonly greKey_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greSequenceNumber: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greSequenceNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greVersion: InputMaybe<Scalars['uint8']>;
    readonly greVersion_geq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_gt: InputMaybe<Scalars['uint8']>;
    readonly greVersion_in: InputMaybe<Scalars['bytes']>;
    readonly greVersion_leq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_lt: InputMaybe<Scalars['uint8']>;
    readonly greVersion_neq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_notin: InputMaybe<Scalars['bytes']>;
    readonly icmpChecksum: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly icmpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly icmpCode: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_geq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_gt: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_in: InputMaybe<Scalars['bytes']>;
    readonly icmpCode_leq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_lt: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_neq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_notin: InputMaybe<Scalars['bytes']>;
    readonly icmpType: InputMaybe<Scalars['uint8']>;
    readonly icmpType_geq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_gt: InputMaybe<Scalars['uint8']>;
    readonly icmpType_in: InputMaybe<Scalars['bytes']>;
    readonly icmpType_leq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_lt: InputMaybe<Scalars['uint8']>;
    readonly icmpType_neq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_notin: InputMaybe<Scalars['bytes']>;
    readonly ipDestinationAddress: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_like: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationAddress_notlike: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_geq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_gt: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationSubnet_leq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_like: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_lt: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_neq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationSubnet_notlike: InputMaybe<Scalars['string']>;
    readonly ipFragmentOffset: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_geq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_gt: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipFragmentOffset_leq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_lt: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_neq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipHeaderLength: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_geq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_gt: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipHeaderLength_leq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_lt: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_neq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipMoreFragments: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_geq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_gt: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_in: InputMaybe<Scalars['bytes']>;
    readonly ipMoreFragments_leq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_lt: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_neq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_notin: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol: InputMaybe<Scalars['uint8']>;
    readonly ipProtocolName: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_geq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_gt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_leq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_like: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_lt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_neq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_notlike: InputMaybe<Scalars['string']>;
    readonly ipProtocol_geq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_gt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_in: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol_leq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_lt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_neq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_notin: InputMaybe<Scalars['bytes']>;
    readonly ipSourceAddress: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_like: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceAddress_notlike: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_geq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_gt: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceSubnet_leq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_like: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_lt: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_neq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceSubnet_notlike: InputMaybe<Scalars['string']>;
    readonly ipTotalLength: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_geq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_gt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLengthBuckets_leq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_lt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_neq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLength_geq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_gt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLength_leq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_lt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_neq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTtl: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_geq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_gt: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_in: InputMaybe<Scalars['bytes']>;
    readonly ipTtlBuckets_leq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_lt: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_neq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_notin: InputMaybe<Scalars['bytes']>;
    readonly ipTtl_geq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_gt: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_in: InputMaybe<Scalars['bytes']>;
    readonly ipTtl_leq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_lt: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_neq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Checksum: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_geq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_gt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Checksum_leq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_lt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_neq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4DontFragment: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4DontFragment_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Dscp: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4Dscp_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Ecn: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4Ecn_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Identification: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_geq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_gt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Identification_leq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_lt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_neq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Options: InputMaybe<Scalars['string']>;
    readonly ipv4Options_geq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_gt: InputMaybe<Scalars['string']>;
    readonly ipv4Options_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv4Options_leq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_like: InputMaybe<Scalars['string']>;
    readonly ipv4Options_lt: InputMaybe<Scalars['string']>;
    readonly ipv4Options_neq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv4Options_notlike: InputMaybe<Scalars['string']>;
    readonly ipv6Dscp: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_in: InputMaybe<Scalars['bytes']>;
    readonly ipv6Dscp_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv6Ecn: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_in: InputMaybe<Scalars['bytes']>;
    readonly ipv6Ecn_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv6ExtensionHeaders: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_geq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_gt: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv6ExtensionHeaders_leq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_like: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_lt: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_neq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv6ExtensionHeaders_notlike: InputMaybe<Scalars['string']>;
    readonly ipv6FlowLabel: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_geq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_gt: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6FlowLabel_leq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_lt: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_neq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6Identification: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_geq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_gt: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6Identification_leq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_lt: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_neq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly mitigationReason: InputMaybe<Scalars['string']>;
    readonly mitigationReason_geq: InputMaybe<Scalars['string']>;
    readonly mitigationReason_gt: InputMaybe<Scalars['string']>;
    readonly mitigationReason_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationReason_leq: InputMaybe<Scalars['string']>;
    readonly mitigationReason_like: InputMaybe<Scalars['string']>;
    readonly mitigationReason_lt: InputMaybe<Scalars['string']>;
    readonly mitigationReason_neq: InputMaybe<Scalars['string']>;
    readonly mitigationReason_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationReason_notlike: InputMaybe<Scalars['string']>;
    readonly mitigationScope: InputMaybe<Scalars['string']>;
    readonly mitigationScope_geq: InputMaybe<Scalars['string']>;
    readonly mitigationScope_gt: InputMaybe<Scalars['string']>;
    readonly mitigationScope_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationScope_leq: InputMaybe<Scalars['string']>;
    readonly mitigationScope_like: InputMaybe<Scalars['string']>;
    readonly mitigationScope_lt: InputMaybe<Scalars['string']>;
    readonly mitigationScope_neq: InputMaybe<Scalars['string']>;
    readonly mitigationScope_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationScope_notlike: InputMaybe<Scalars['string']>;
    readonly outcome: InputMaybe<Scalars['string']>;
    readonly outcome_geq: InputMaybe<Scalars['string']>;
    readonly outcome_gt: InputMaybe<Scalars['string']>;
    readonly outcome_in: InputMaybe<readonly Scalars['string'][]>;
    readonly outcome_leq: InputMaybe<Scalars['string']>;
    readonly outcome_like: InputMaybe<Scalars['string']>;
    readonly outcome_lt: InputMaybe<Scalars['string']>;
    readonly outcome_neq: InputMaybe<Scalars['string']>;
    readonly outcome_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly outcome_notlike: InputMaybe<Scalars['string']>;
    readonly protocolState: InputMaybe<Scalars['string']>;
    readonly protocolState_geq: InputMaybe<Scalars['string']>;
    readonly protocolState_gt: InputMaybe<Scalars['string']>;
    readonly protocolState_in: InputMaybe<readonly Scalars['string'][]>;
    readonly protocolState_leq: InputMaybe<Scalars['string']>;
    readonly protocolState_like: InputMaybe<Scalars['string']>;
    readonly protocolState_lt: InputMaybe<Scalars['string']>;
    readonly protocolState_neq: InputMaybe<Scalars['string']>;
    readonly protocolState_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly protocolState_notlike: InputMaybe<Scalars['string']>;
    readonly ruleId: InputMaybe<Scalars['string']>;
    readonly ruleId_geq: InputMaybe<Scalars['string']>;
    readonly ruleId_gt: InputMaybe<Scalars['string']>;
    readonly ruleId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_leq: InputMaybe<Scalars['string']>;
    readonly ruleId_like: InputMaybe<Scalars['string']>;
    readonly ruleId_lt: InputMaybe<Scalars['string']>;
    readonly ruleId_neq: InputMaybe<Scalars['string']>;
    readonly ruleId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_notlike: InputMaybe<Scalars['string']>;
    readonly rulesetId: InputMaybe<Scalars['string']>;
    readonly rulesetId_geq: InputMaybe<Scalars['string']>;
    readonly rulesetId_gt: InputMaybe<Scalars['string']>;
    readonly rulesetId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_leq: InputMaybe<Scalars['string']>;
    readonly rulesetId_like: InputMaybe<Scalars['string']>;
    readonly rulesetId_lt: InputMaybe<Scalars['string']>;
    readonly rulesetId_neq: InputMaybe<Scalars['string']>;
    readonly rulesetId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_notlike: InputMaybe<Scalars['string']>;
    readonly rulesetOverrideId: InputMaybe<Scalars['string']>;
    readonly rulesetOverrideId_geq: InputMaybe<Scalars['string']>;
    readonly rulesetOverrideId_gt: InputMaybe<Scalars['string']>;
    readonly rulesetOverrideId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetOverrideId_leq: InputMaybe<Scalars['string']>;
    readonly rulesetOverrideId_like: InputMaybe<Scalars['string']>;
    readonly rulesetOverrideId_lt: InputMaybe<Scalars['string']>;
    readonly rulesetOverrideId_neq: InputMaybe<Scalars['string']>;
    readonly rulesetOverrideId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetOverrideId_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceAsn: InputMaybe<Scalars['uint32']>;
    readonly sourceAsnName: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_geq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_gt: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAsnName_leq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_like: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_lt: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_neq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAsnName_notlike: InputMaybe<Scalars['string']>;
    readonly sourceAsn_geq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_gt: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceAsn_leq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_lt: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_neq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceCountry: InputMaybe<Scalars['string']>;
    readonly sourceCountry_geq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_gt: InputMaybe<Scalars['string']>;
    readonly sourceCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceCountry_leq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_like: InputMaybe<Scalars['string']>;
    readonly sourceCountry_lt: InputMaybe<Scalars['string']>;
    readonly sourceCountry_neq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceCountry_notlike: InputMaybe<Scalars['string']>;
    readonly sourceGeohash: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_geq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_gt: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceGeohash_leq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_like: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_lt: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_neq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly sourcePort: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly sourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpAcknowledgementNumber: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpAcknowledgementNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpChecksum: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpDataOffset: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpDataOffset_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpFlags: InputMaybe<Scalars['uint8']>;
    readonly tcpFlagsString: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_geq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_gt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_leq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_like: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_lt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_neq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_notlike: InputMaybe<Scalars['string']>;
    readonly tcpFlags_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_in: InputMaybe<Scalars['bytes']>;
    readonly tcpFlags_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_notin: InputMaybe<Scalars['bytes']>;
    readonly tcpMss: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpMss_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpOptions: InputMaybe<Scalars['string']>;
    readonly tcpOptions_geq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_gt: InputMaybe<Scalars['string']>;
    readonly tcpOptions_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpOptions_leq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_like: InputMaybe<Scalars['string']>;
    readonly tcpOptions_lt: InputMaybe<Scalars['string']>;
    readonly tcpOptions_neq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpOptions_notlike: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_geq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_gt: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpSackBlocks_leq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_like: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_lt: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_neq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpSackBlocks_notlike: InputMaybe<Scalars['string']>;
    readonly tcpSackPermitted: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_in: InputMaybe<Scalars['bytes']>;
    readonly tcpSackPermitted_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_notin: InputMaybe<Scalars['bytes']>;
    readonly tcpSequenceNumber: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpSequenceNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampEcr: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampEcr_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampValue: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampValue_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpUrgentPointer: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpUrgentPointer_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowScale: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowScale_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowSize: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowSize_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpChecksum: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpPayloadLength: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_geq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_gt: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpPayloadLength_leq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_lt: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_neq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly verdict: InputMaybe<Scalars['string']>;
    readonly verdict_geq: InputMaybe<Scalars['string']>;
    readonly verdict_gt: InputMaybe<Scalars['string']>;
    readonly verdict_in: InputMaybe<readonly Scalars['string'][]>;
    readonly verdict_leq: InputMaybe<Scalars['string']>;
    readonly verdict_like: InputMaybe<Scalars['string']>;
    readonly verdict_lt: InputMaybe<Scalars['string']>;
    readonly verdict_neq: InputMaybe<Scalars['string']>;
    readonly verdict_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly verdict_notlike: InputMaybe<Scalars['string']>;
}

type AccountDosdNetworkAnalyticsAdaptiveGroupsOrderBy =
  /** attackId ascending */
  | 'attackId_ASC'
  /** attackId descending */
  | 'attackId_DESC'
  /** avg(bitRateDay) ascending */
  | 'avg_bitRateDay_ASC'
  /** avg(bitRateDay) descending */
  | 'avg_bitRateDay_DESC'
  /** avg(bitRateFifteenMinutes) ascending */
  | 'avg_bitRateFifteenMinutes_ASC'
  /** avg(bitRateFifteenMinutes) descending */
  | 'avg_bitRateFifteenMinutes_DESC'
  /** avg(bitRateFiveMinutes) ascending */
  | 'avg_bitRateFiveMinutes_ASC'
  /** avg(bitRateFiveMinutes) descending */
  | 'avg_bitRateFiveMinutes_DESC'
  /** avg(bitRateHour) ascending */
  | 'avg_bitRateHour_ASC'
  /** avg(bitRateHour) descending */
  | 'avg_bitRateHour_DESC'
  /** avg(bitRateMinute) ascending */
  | 'avg_bitRateMinute_ASC'
  /** avg(bitRateMinute) descending */
  | 'avg_bitRateMinute_DESC'
  /** avg(bitRateTenSeconds) ascending */
  | 'avg_bitRateTenSeconds_ASC'
  /** avg(bitRateTenSeconds) descending */
  | 'avg_bitRateTenSeconds_DESC'
  /** avg(bitRate) ascending */
  | 'avg_bitRate_ASC'
  /** avg(bitRate) descending */
  | 'avg_bitRate_DESC'
  /** avg(packetRateDay) ascending */
  | 'avg_packetRateDay_ASC'
  /** avg(packetRateDay) descending */
  | 'avg_packetRateDay_DESC'
  /** avg(packetRateFifteenMinutes) ascending */
  | 'avg_packetRateFifteenMinutes_ASC'
  /** avg(packetRateFifteenMinutes) descending */
  | 'avg_packetRateFifteenMinutes_DESC'
  /** avg(packetRateFiveMinutes) ascending */
  | 'avg_packetRateFiveMinutes_ASC'
  /** avg(packetRateFiveMinutes) descending */
  | 'avg_packetRateFiveMinutes_DESC'
  /** avg(packetRateHour) ascending */
  | 'avg_packetRateHour_ASC'
  /** avg(packetRateHour) descending */
  | 'avg_packetRateHour_DESC'
  /** avg(packetRateMinute) ascending */
  | 'avg_packetRateMinute_ASC'
  /** avg(packetRateMinute) descending */
  | 'avg_packetRateMinute_DESC'
  /** avg(packetRateTenSeconds) ascending */
  | 'avg_packetRateTenSeconds_ASC'
  /** avg(packetRateTenSeconds) descending */
  | 'avg_packetRateTenSeconds_DESC'
  /** avg(packetRate) ascending */
  | 'avg_packetRate_ASC'
  /** avg(packetRate) descending */
  | 'avg_packetRate_DESC'
  /** coloCity ascending */
  | 'coloCity_ASC'
  /** coloCity descending */
  | 'coloCity_DESC'
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** coloCountry ascending */
  | 'coloCountry_ASC'
  /** coloCountry descending */
  | 'coloCountry_DESC'
  /** coloGeohash ascending */
  | 'coloGeohash_ASC'
  /** coloGeohash descending */
  | 'coloGeohash_DESC'
  /** coloName ascending */
  | 'coloName_ASC'
  /** coloName descending */
  | 'coloName_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetimeTenSeconds ascending */
  | 'datetimeTenSeconds_ASC'
  /** datetimeTenSeconds descending */
  | 'datetimeTenSeconds_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** destinationAsnName ascending */
  | 'destinationAsnName_ASC'
  /** destinationAsnName descending */
  | 'destinationAsnName_DESC'
  /** destinationAsn ascending */
  | 'destinationAsn_ASC'
  /** destinationAsn descending */
  | 'destinationAsn_DESC'
  /** destinationCountry ascending */
  | 'destinationCountry_ASC'
  /** destinationCountry descending */
  | 'destinationCountry_DESC'
  /** destinationGeohash ascending */
  | 'destinationGeohash_ASC'
  /** destinationGeohash descending */
  | 'destinationGeohash_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** direction ascending */
  | 'direction_ASC'
  /** direction descending */
  | 'direction_DESC'
  /** ethertype ascending */
  | 'ethertype_ASC'
  /** ethertype descending */
  | 'ethertype_DESC'
  /** greChecksum ascending */
  | 'greChecksum_ASC'
  /** greChecksum descending */
  | 'greChecksum_DESC'
  /** greEthertype ascending */
  | 'greEthertype_ASC'
  /** greEthertype descending */
  | 'greEthertype_DESC'
  /** greHeaderLength ascending */
  | 'greHeaderLength_ASC'
  /** greHeaderLength descending */
  | 'greHeaderLength_DESC'
  /** greKey ascending */
  | 'greKey_ASC'
  /** greKey descending */
  | 'greKey_DESC'
  /** greSequenceNumber ascending */
  | 'greSequenceNumber_ASC'
  /** greSequenceNumber descending */
  | 'greSequenceNumber_DESC'
  /** greVersion ascending */
  | 'greVersion_ASC'
  /** greVersion descending */
  | 'greVersion_DESC'
  /** icmpChecksum ascending */
  | 'icmpChecksum_ASC'
  /** icmpChecksum descending */
  | 'icmpChecksum_DESC'
  /** icmpCode ascending */
  | 'icmpCode_ASC'
  /** icmpCode descending */
  | 'icmpCode_DESC'
  /** icmpType ascending */
  | 'icmpType_ASC'
  /** icmpType descending */
  | 'icmpType_DESC'
  /** ipDestinationAddress ascending */
  | 'ipDestinationAddress_ASC'
  /** ipDestinationAddress descending */
  | 'ipDestinationAddress_DESC'
  /** ipDestinationSubnet ascending */
  | 'ipDestinationSubnet_ASC'
  /** ipDestinationSubnet descending */
  | 'ipDestinationSubnet_DESC'
  /** ipFragmentOffset ascending */
  | 'ipFragmentOffset_ASC'
  /** ipFragmentOffset descending */
  | 'ipFragmentOffset_DESC'
  /** ipHeaderLength ascending */
  | 'ipHeaderLength_ASC'
  /** ipHeaderLength descending */
  | 'ipHeaderLength_DESC'
  /** ipMoreFragments ascending */
  | 'ipMoreFragments_ASC'
  /** ipMoreFragments descending */
  | 'ipMoreFragments_DESC'
  /** ipProtocolName ascending */
  | 'ipProtocolName_ASC'
  /** ipProtocolName descending */
  | 'ipProtocolName_DESC'
  /** ipProtocol ascending */
  | 'ipProtocol_ASC'
  /** ipProtocol descending */
  | 'ipProtocol_DESC'
  /** ipSourceAddress ascending */
  | 'ipSourceAddress_ASC'
  /** ipSourceAddress descending */
  | 'ipSourceAddress_DESC'
  /** ipSourceSubnet ascending */
  | 'ipSourceSubnet_ASC'
  /** ipSourceSubnet descending */
  | 'ipSourceSubnet_DESC'
  /** ipTotalLengthBuckets ascending */
  | 'ipTotalLengthBuckets_ASC'
  /** ipTotalLengthBuckets descending */
  | 'ipTotalLengthBuckets_DESC'
  /** ipTotalLength ascending */
  | 'ipTotalLength_ASC'
  /** ipTotalLength descending */
  | 'ipTotalLength_DESC'
  /** ipTtlBuckets ascending */
  | 'ipTtlBuckets_ASC'
  /** ipTtlBuckets descending */
  | 'ipTtlBuckets_DESC'
  /** ipTtl ascending */
  | 'ipTtl_ASC'
  /** ipTtl descending */
  | 'ipTtl_DESC'
  /** ipv4Checksum ascending */
  | 'ipv4Checksum_ASC'
  /** ipv4Checksum descending */
  | 'ipv4Checksum_DESC'
  /** ipv4DontFragment ascending */
  | 'ipv4DontFragment_ASC'
  /** ipv4DontFragment descending */
  | 'ipv4DontFragment_DESC'
  /** ipv4Dscp ascending */
  | 'ipv4Dscp_ASC'
  /** ipv4Dscp descending */
  | 'ipv4Dscp_DESC'
  /** ipv4Ecn ascending */
  | 'ipv4Ecn_ASC'
  /** ipv4Ecn descending */
  | 'ipv4Ecn_DESC'
  /** ipv4Identification ascending */
  | 'ipv4Identification_ASC'
  /** ipv4Identification descending */
  | 'ipv4Identification_DESC'
  /** ipv4Options ascending */
  | 'ipv4Options_ASC'
  /** ipv4Options descending */
  | 'ipv4Options_DESC'
  /** ipv6Dscp ascending */
  | 'ipv6Dscp_ASC'
  /** ipv6Dscp descending */
  | 'ipv6Dscp_DESC'
  /** ipv6Ecn ascending */
  | 'ipv6Ecn_ASC'
  /** ipv6Ecn descending */
  | 'ipv6Ecn_DESC'
  /** ipv6ExtensionHeaders ascending */
  | 'ipv6ExtensionHeaders_ASC'
  /** ipv6ExtensionHeaders descending */
  | 'ipv6ExtensionHeaders_DESC'
  /** ipv6FlowLabel ascending */
  | 'ipv6FlowLabel_ASC'
  /** ipv6FlowLabel descending */
  | 'ipv6FlowLabel_DESC'
  /** ipv6Identification ascending */
  | 'ipv6Identification_ASC'
  /** ipv6Identification descending */
  | 'ipv6Identification_DESC'
  /** mitigationReason ascending */
  | 'mitigationReason_ASC'
  /** mitigationReason descending */
  | 'mitigationReason_DESC'
  /** mitigationScope ascending */
  | 'mitigationScope_ASC'
  /** mitigationScope descending */
  | 'mitigationScope_DESC'
  /** outcome ascending */
  | 'outcome_ASC'
  /** outcome descending */
  | 'outcome_DESC'
  /** protocolState ascending */
  | 'protocolState_ASC'
  /** protocolState descending */
  | 'protocolState_DESC'
  /** ruleId ascending */
  | 'ruleId_ASC'
  /** ruleId descending */
  | 'ruleId_DESC'
  /** rulesetId ascending */
  | 'rulesetId_ASC'
  /** rulesetId descending */
  | 'rulesetId_DESC'
  /** rulesetOverrideId ascending */
  | 'rulesetOverrideId_ASC'
  /** rulesetOverrideId descending */
  | 'rulesetOverrideId_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** sourceAsnName ascending */
  | 'sourceAsnName_ASC'
  /** sourceAsnName descending */
  | 'sourceAsnName_DESC'
  /** sourceAsn ascending */
  | 'sourceAsn_ASC'
  /** sourceAsn descending */
  | 'sourceAsn_DESC'
  /** sourceCountry ascending */
  | 'sourceCountry_ASC'
  /** sourceCountry descending */
  | 'sourceCountry_DESC'
  /** sourceGeohash ascending */
  | 'sourceGeohash_ASC'
  /** sourceGeohash descending */
  | 'sourceGeohash_DESC'
  /** sourcePort ascending */
  | 'sourcePort_ASC'
  /** sourcePort descending */
  | 'sourcePort_DESC'
  /** sum(bits) ascending */
  | 'sum_bits_ASC'
  /** sum(bits) descending */
  | 'sum_bits_DESC'
  /** sum(packets) ascending */
  | 'sum_packets_ASC'
  /** sum(packets) descending */
  | 'sum_packets_DESC'
  /** system ascending */
  | 'system_ASC'
  /** system descending */
  | 'system_DESC'
  /** tcpAcknowledgementNumber ascending */
  | 'tcpAcknowledgementNumber_ASC'
  /** tcpAcknowledgementNumber descending */
  | 'tcpAcknowledgementNumber_DESC'
  /** tcpChecksum ascending */
  | 'tcpChecksum_ASC'
  /** tcpChecksum descending */
  | 'tcpChecksum_DESC'
  /** tcpDataOffset ascending */
  | 'tcpDataOffset_ASC'
  /** tcpDataOffset descending */
  | 'tcpDataOffset_DESC'
  /** tcpFlagsString ascending */
  | 'tcpFlagsString_ASC'
  /** tcpFlagsString descending */
  | 'tcpFlagsString_DESC'
  /** tcpFlags ascending */
  | 'tcpFlags_ASC'
  /** tcpFlags descending */
  | 'tcpFlags_DESC'
  /** tcpMss ascending */
  | 'tcpMss_ASC'
  /** tcpMss descending */
  | 'tcpMss_DESC'
  /** tcpOptions ascending */
  | 'tcpOptions_ASC'
  /** tcpOptions descending */
  | 'tcpOptions_DESC'
  /** tcpSackBlocks ascending */
  | 'tcpSackBlocks_ASC'
  /** tcpSackBlocks descending */
  | 'tcpSackBlocks_DESC'
  /** tcpSackPermitted ascending */
  | 'tcpSackPermitted_ASC'
  /** tcpSackPermitted descending */
  | 'tcpSackPermitted_DESC'
  /** tcpSequenceNumber ascending */
  | 'tcpSequenceNumber_ASC'
  /** tcpSequenceNumber descending */
  | 'tcpSequenceNumber_DESC'
  /** tcpTimestampEcr ascending */
  | 'tcpTimestampEcr_ASC'
  /** tcpTimestampEcr descending */
  | 'tcpTimestampEcr_DESC'
  /** tcpTimestampValue ascending */
  | 'tcpTimestampValue_ASC'
  /** tcpTimestampValue descending */
  | 'tcpTimestampValue_DESC'
  /** tcpUrgentPointer ascending */
  | 'tcpUrgentPointer_ASC'
  /** tcpUrgentPointer descending */
  | 'tcpUrgentPointer_DESC'
  /** tcpWindowScale ascending */
  | 'tcpWindowScale_ASC'
  /** tcpWindowScale descending */
  | 'tcpWindowScale_DESC'
  /** tcpWindowSize ascending */
  | 'tcpWindowSize_ASC'
  /** tcpWindowSize descending */
  | 'tcpWindowSize_DESC'
  /** udpChecksum ascending */
  | 'udpChecksum_ASC'
  /** udpChecksum descending */
  | 'udpChecksum_DESC'
  /** udpPayloadLength ascending */
  | 'udpPayloadLength_ASC'
  /** udpPayloadLength descending */
  | 'udpPayloadLength_DESC'
  /** verdict ascending */
  | 'verdict_ASC'
  /** verdict descending */
  | 'verdict_DESC';

interface AccountDurableObjectsInvocationsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountDurableObjectsInvocationsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountDurableObjectsInvocationsAdaptiveGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly environmentName: InputMaybe<Scalars['string']>;
    readonly environmentName_geq: InputMaybe<Scalars['string']>;
    readonly environmentName_gt: InputMaybe<Scalars['string']>;
    readonly environmentName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly environmentName_leq: InputMaybe<Scalars['string']>;
    readonly environmentName_like: InputMaybe<Scalars['string']>;
    readonly environmentName_lt: InputMaybe<Scalars['string']>;
    readonly environmentName_neq: InputMaybe<Scalars['string']>;
    readonly environmentName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly environmentName_notlike: InputMaybe<Scalars['string']>;
    readonly namespaceId: InputMaybe<Scalars['string']>;
    readonly namespaceId_geq: InputMaybe<Scalars['string']>;
    readonly namespaceId_gt: InputMaybe<Scalars['string']>;
    readonly namespaceId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly namespaceId_leq: InputMaybe<Scalars['string']>;
    readonly namespaceId_like: InputMaybe<Scalars['string']>;
    readonly namespaceId_lt: InputMaybe<Scalars['string']>;
    readonly namespaceId_neq: InputMaybe<Scalars['string']>;
    readonly namespaceId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly namespaceId_notlike: InputMaybe<Scalars['string']>;
    readonly objectId: InputMaybe<Scalars['string']>;
    readonly objectId_geq: InputMaybe<Scalars['string']>;
    readonly objectId_gt: InputMaybe<Scalars['string']>;
    readonly objectId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly objectId_leq: InputMaybe<Scalars['string']>;
    readonly objectId_like: InputMaybe<Scalars['string']>;
    readonly objectId_lt: InputMaybe<Scalars['string']>;
    readonly objectId_neq: InputMaybe<Scalars['string']>;
    readonly objectId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly objectId_notlike: InputMaybe<Scalars['string']>;
    readonly scriptName: InputMaybe<Scalars['string']>;
    readonly scriptName_geq: InputMaybe<Scalars['string']>;
    readonly scriptName_gt: InputMaybe<Scalars['string']>;
    readonly scriptName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptName_leq: InputMaybe<Scalars['string']>;
    readonly scriptName_like: InputMaybe<Scalars['string']>;
    readonly scriptName_lt: InputMaybe<Scalars['string']>;
    readonly scriptName_neq: InputMaybe<Scalars['string']>;
    readonly scriptName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptName_notlike: InputMaybe<Scalars['string']>;
    readonly status: InputMaybe<Scalars['string']>;
    readonly status_geq: InputMaybe<Scalars['string']>;
    readonly status_gt: InputMaybe<Scalars['string']>;
    readonly status_in: InputMaybe<readonly Scalars['string'][]>;
    readonly status_leq: InputMaybe<Scalars['string']>;
    readonly status_like: InputMaybe<Scalars['string']>;
    readonly status_lt: InputMaybe<Scalars['string']>;
    readonly status_neq: InputMaybe<Scalars['string']>;
    readonly status_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly status_notlike: InputMaybe<Scalars['string']>;
}

type AccountDurableObjectsInvocationsAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** environmentName ascending */
  | 'environmentName_ASC'
  /** environmentName descending */
  | 'environmentName_DESC'
  /** max(responseBodySize) ascending */
  | 'max_responseBodySize_ASC'
  /** max(responseBodySize) descending */
  | 'max_responseBodySize_DESC'
  /** max(wallTime) ascending */
  | 'max_wallTime_ASC'
  /** max(wallTime) descending */
  | 'max_wallTime_DESC'
  /** min(responseBodySize) ascending */
  | 'min_responseBodySize_ASC'
  /** min(responseBodySize) descending */
  | 'min_responseBodySize_DESC'
  /** min(wallTime) ascending */
  | 'min_wallTime_ASC'
  /** min(wallTime) descending */
  | 'min_wallTime_DESC'
  /** namespaceId ascending */
  | 'namespaceId_ASC'
  /** namespaceId descending */
  | 'namespaceId_DESC'
  /** objectId ascending */
  | 'objectId_ASC'
  /** objectId descending */
  | 'objectId_DESC'
  /** quantiles(responseBodySizeP25) ascending */
  | 'quantiles_responseBodySizeP25_ASC'
  /** quantiles(responseBodySizeP25) descending */
  | 'quantiles_responseBodySizeP25_DESC'
  /** quantiles(responseBodySizeP50) ascending */
  | 'quantiles_responseBodySizeP50_ASC'
  /** quantiles(responseBodySizeP50) descending */
  | 'quantiles_responseBodySizeP50_DESC'
  /** quantiles(responseBodySizeP75) ascending */
  | 'quantiles_responseBodySizeP75_ASC'
  /** quantiles(responseBodySizeP75) descending */
  | 'quantiles_responseBodySizeP75_DESC'
  /** quantiles(responseBodySizeP90) ascending */
  | 'quantiles_responseBodySizeP90_ASC'
  /** quantiles(responseBodySizeP90) descending */
  | 'quantiles_responseBodySizeP90_DESC'
  /** quantiles(responseBodySizeP99) ascending */
  | 'quantiles_responseBodySizeP99_ASC'
  /** quantiles(responseBodySizeP99) descending */
  | 'quantiles_responseBodySizeP99_DESC'
  /** quantiles(responseBodySizeP999) ascending */
  | 'quantiles_responseBodySizeP999_ASC'
  /** quantiles(responseBodySizeP999) descending */
  | 'quantiles_responseBodySizeP999_DESC'
  /** quantiles(wallTimeP25) ascending */
  | 'quantiles_wallTimeP25_ASC'
  /** quantiles(wallTimeP25) descending */
  | 'quantiles_wallTimeP25_DESC'
  /** quantiles(wallTimeP50) ascending */
  | 'quantiles_wallTimeP50_ASC'
  /** quantiles(wallTimeP50) descending */
  | 'quantiles_wallTimeP50_DESC'
  /** quantiles(wallTimeP75) ascending */
  | 'quantiles_wallTimeP75_ASC'
  /** quantiles(wallTimeP75) descending */
  | 'quantiles_wallTimeP75_DESC'
  /** quantiles(wallTimeP90) ascending */
  | 'quantiles_wallTimeP90_ASC'
  /** quantiles(wallTimeP90) descending */
  | 'quantiles_wallTimeP90_DESC'
  /** quantiles(wallTimeP99) ascending */
  | 'quantiles_wallTimeP99_ASC'
  /** quantiles(wallTimeP99) descending */
  | 'quantiles_wallTimeP99_DESC'
  /** quantiles(wallTimeP999) ascending */
  | 'quantiles_wallTimeP999_ASC'
  /** quantiles(wallTimeP999) descending */
  | 'quantiles_wallTimeP999_DESC'
  /** scriptName ascending */
  | 'scriptName_ASC'
  /** scriptName descending */
  | 'scriptName_DESC'
  /** status ascending */
  | 'status_ASC'
  /** status descending */
  | 'status_DESC'
  /** sum(errors) ascending */
  | 'sum_errors_ASC'
  /** sum(errors) descending */
  | 'sum_errors_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(responseBodySize) ascending */
  | 'sum_responseBodySize_ASC'
  /** sum(responseBodySize) descending */
  | 'sum_responseBodySize_DESC'
  /** sum(wallTime) ascending */
  | 'sum_wallTime_ASC'
  /** sum(wallTime) descending */
  | 'sum_wallTime_DESC';

interface AccountDurableObjectsPeriodicGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountDurableObjectsPeriodicGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountDurableObjectsPeriodicGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly namespaceId: InputMaybe<Scalars['string']>;
    readonly namespaceId_geq: InputMaybe<Scalars['string']>;
    readonly namespaceId_gt: InputMaybe<Scalars['string']>;
    readonly namespaceId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly namespaceId_leq: InputMaybe<Scalars['string']>;
    readonly namespaceId_like: InputMaybe<Scalars['string']>;
    readonly namespaceId_lt: InputMaybe<Scalars['string']>;
    readonly namespaceId_neq: InputMaybe<Scalars['string']>;
    readonly namespaceId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly namespaceId_notlike: InputMaybe<Scalars['string']>;
    readonly objectId: InputMaybe<Scalars['string']>;
    readonly objectId_geq: InputMaybe<Scalars['string']>;
    readonly objectId_gt: InputMaybe<Scalars['string']>;
    readonly objectId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly objectId_leq: InputMaybe<Scalars['string']>;
    readonly objectId_like: InputMaybe<Scalars['string']>;
    readonly objectId_lt: InputMaybe<Scalars['string']>;
    readonly objectId_neq: InputMaybe<Scalars['string']>;
    readonly objectId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly objectId_notlike: InputMaybe<Scalars['string']>;
}

type AccountDurableObjectsPeriodicGroupsOrderBy =
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** max(activeWebsocketConnections) ascending */
  | 'max_activeWebsocketConnections_ASC'
  /** max(activeWebsocketConnections) descending */
  | 'max_activeWebsocketConnections_DESC'
  /** namespaceId ascending */
  | 'namespaceId_ASC'
  /** namespaceId descending */
  | 'namespaceId_DESC'
  /** objectId ascending */
  | 'objectId_ASC'
  /** objectId descending */
  | 'objectId_DESC'
  /** sum(activeTime) ascending */
  | 'sum_activeTime_ASC'
  /** sum(activeTime) descending */
  | 'sum_activeTime_DESC'
  /** sum(cpuTime) ascending */
  | 'sum_cpuTime_ASC'
  /** sum(cpuTime) descending */
  | 'sum_cpuTime_DESC'
  /** sum(exceededCpuErrors) ascending */
  | 'sum_exceededCpuErrors_ASC'
  /** sum(exceededCpuErrors) descending */
  | 'sum_exceededCpuErrors_DESC'
  /** sum(exceededMemoryErrors) ascending */
  | 'sum_exceededMemoryErrors_ASC'
  /** sum(exceededMemoryErrors) descending */
  | 'sum_exceededMemoryErrors_DESC'
  /** sum(fatalInternalErrors) ascending */
  | 'sum_fatalInternalErrors_ASC'
  /** sum(fatalInternalErrors) descending */
  | 'sum_fatalInternalErrors_DESC'
  /** sum(inboundWebsocketMsgCount) ascending */
  | 'sum_inboundWebsocketMsgCount_ASC'
  /** sum(inboundWebsocketMsgCount) descending */
  | 'sum_inboundWebsocketMsgCount_DESC'
  /** sum(outboundWebsocketMsgCount) ascending */
  | 'sum_outboundWebsocketMsgCount_ASC'
  /** sum(outboundWebsocketMsgCount) descending */
  | 'sum_outboundWebsocketMsgCount_DESC'
  /** sum(storageDeletes) ascending */
  | 'sum_storageDeletes_ASC'
  /** sum(storageDeletes) descending */
  | 'sum_storageDeletes_DESC'
  /** sum(storageReadUnits) ascending */
  | 'sum_storageReadUnits_ASC'
  /** sum(storageReadUnits) descending */
  | 'sum_storageReadUnits_DESC'
  /** sum(storageWriteUnits) ascending */
  | 'sum_storageWriteUnits_ASC'
  /** sum(storageWriteUnits) descending */
  | 'sum_storageWriteUnits_DESC'
  /** sum(subrequests) ascending */
  | 'sum_subrequests_ASC'
  /** sum(subrequests) descending */
  | 'sum_subrequests_DESC';

interface AccountDurableObjectsStorageGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountDurableObjectsStorageGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountDurableObjectsStorageGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
}

type AccountDurableObjectsStorageGroupsOrderBy =
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** max(storedBytes) ascending */
  | 'max_storedBytes_ASC'
  /** max(storedBytes) descending */
  | 'max_storedBytes_DESC';

interface AccountDurableObjectsSubrequestsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountDurableObjectsSubrequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountDurableObjectsSubrequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly environmentName: InputMaybe<Scalars['string']>;
    readonly environmentName_geq: InputMaybe<Scalars['string']>;
    readonly environmentName_gt: InputMaybe<Scalars['string']>;
    readonly environmentName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly environmentName_leq: InputMaybe<Scalars['string']>;
    readonly environmentName_like: InputMaybe<Scalars['string']>;
    readonly environmentName_lt: InputMaybe<Scalars['string']>;
    readonly environmentName_neq: InputMaybe<Scalars['string']>;
    readonly environmentName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly environmentName_notlike: InputMaybe<Scalars['string']>;
    readonly namespaceId: InputMaybe<Scalars['string']>;
    readonly namespaceId_geq: InputMaybe<Scalars['string']>;
    readonly namespaceId_gt: InputMaybe<Scalars['string']>;
    readonly namespaceId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly namespaceId_leq: InputMaybe<Scalars['string']>;
    readonly namespaceId_like: InputMaybe<Scalars['string']>;
    readonly namespaceId_lt: InputMaybe<Scalars['string']>;
    readonly namespaceId_neq: InputMaybe<Scalars['string']>;
    readonly namespaceId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly namespaceId_notlike: InputMaybe<Scalars['string']>;
    readonly objectId: InputMaybe<Scalars['string']>;
    readonly objectId_geq: InputMaybe<Scalars['string']>;
    readonly objectId_gt: InputMaybe<Scalars['string']>;
    readonly objectId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly objectId_leq: InputMaybe<Scalars['string']>;
    readonly objectId_like: InputMaybe<Scalars['string']>;
    readonly objectId_lt: InputMaybe<Scalars['string']>;
    readonly objectId_neq: InputMaybe<Scalars['string']>;
    readonly objectId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly objectId_notlike: InputMaybe<Scalars['string']>;
    readonly scriptName: InputMaybe<Scalars['string']>;
    readonly scriptName_geq: InputMaybe<Scalars['string']>;
    readonly scriptName_gt: InputMaybe<Scalars['string']>;
    readonly scriptName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptName_leq: InputMaybe<Scalars['string']>;
    readonly scriptName_like: InputMaybe<Scalars['string']>;
    readonly scriptName_lt: InputMaybe<Scalars['string']>;
    readonly scriptName_neq: InputMaybe<Scalars['string']>;
    readonly scriptName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptName_notlike: InputMaybe<Scalars['string']>;
}

type AccountDurableObjectsSubrequestsAdaptiveGroupsOrderBy =
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** environmentName ascending */
  | 'environmentName_ASC'
  /** environmentName descending */
  | 'environmentName_DESC'
  /** namespaceId ascending */
  | 'namespaceId_ASC'
  /** namespaceId descending */
  | 'namespaceId_DESC'
  /** objectId ascending */
  | 'objectId_ASC'
  /** objectId descending */
  | 'objectId_DESC'
  /** scriptName ascending */
  | 'scriptName_ASC'
  /** scriptName descending */
  | 'scriptName_DESC'
  /** sum(requestBodySizeUncached) ascending */
  | 'sum_requestBodySizeUncached_ASC'
  /** sum(requestBodySizeUncached) descending */
  | 'sum_requestBodySizeUncached_DESC';

interface AccountFbmAttackAnalyticsGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountFbmAttackAnalyticsGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountFbmAttackAnalyticsGroupsFilter_InputObject[]>;
    readonly attackId: InputMaybe<Scalars['string']>;
    readonly attackId_geq: InputMaybe<Scalars['string']>;
    readonly attackId_gt: InputMaybe<Scalars['string']>;
    readonly attackId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_leq: InputMaybe<Scalars['string']>;
    readonly attackId_like: InputMaybe<Scalars['string']>;
    readonly attackId_lt: InputMaybe<Scalars['string']>;
    readonly attackId_neq: InputMaybe<Scalars['string']>;
    readonly attackId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_notlike: InputMaybe<Scalars['string']>;
    readonly attackType: InputMaybe<Scalars['string']>;
    readonly attackType_geq: InputMaybe<Scalars['string']>;
    readonly attackType_gt: InputMaybe<Scalars['string']>;
    readonly attackType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackType_leq: InputMaybe<Scalars['string']>;
    readonly attackType_like: InputMaybe<Scalars['string']>;
    readonly attackType_lt: InputMaybe<Scalars['string']>;
    readonly attackType_neq: InputMaybe<Scalars['string']>;
    readonly attackType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackType_notlike: InputMaybe<Scalars['string']>;
    readonly bits: InputMaybe<Scalars['uint64']>;
    readonly bits_geq: InputMaybe<Scalars['uint64']>;
    readonly bits_gt: InputMaybe<Scalars['uint64']>;
    readonly bits_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly bits_leq: InputMaybe<Scalars['uint64']>;
    readonly bits_lt: InputMaybe<Scalars['uint64']>;
    readonly bits_neq: InputMaybe<Scalars['uint64']>;
    readonly bits_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly commonTcpFlags: InputMaybe<Scalars['uint8']>;
    readonly commonTcpFlagsNames: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_geq: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_gt: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_in: InputMaybe<readonly Scalars['string'][]>;
    readonly commonTcpFlagsNames_leq: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_like: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_lt: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_neq: InputMaybe<Scalars['string']>;
    readonly commonTcpFlagsNames_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly commonTcpFlagsNames_notlike: InputMaybe<Scalars['string']>;
    readonly commonTcpFlags_geq: InputMaybe<Scalars['uint8']>;
    readonly commonTcpFlags_gt: InputMaybe<Scalars['uint8']>;
    readonly commonTcpFlags_in: InputMaybe<Scalars['bytes']>;
    readonly commonTcpFlags_leq: InputMaybe<Scalars['uint8']>;
    readonly commonTcpFlags_lt: InputMaybe<Scalars['uint8']>;
    readonly commonTcpFlags_neq: InputMaybe<Scalars['uint8']>;
    readonly commonTcpFlags_notin: InputMaybe<Scalars['bytes']>;
    readonly destinationIp: InputMaybe<Scalars['string']>;
    readonly destinationIp_geq: InputMaybe<Scalars['string']>;
    readonly destinationIp_gt: InputMaybe<Scalars['string']>;
    readonly destinationIp_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIp_leq: InputMaybe<Scalars['string']>;
    readonly destinationIp_like: InputMaybe<Scalars['string']>;
    readonly destinationIp_lt: InputMaybe<Scalars['string']>;
    readonly destinationIp_neq: InputMaybe<Scalars['string']>;
    readonly destinationIp_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIp_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly endDatetime: InputMaybe<Scalars['Time']>;
    readonly endDatetime_geq: InputMaybe<Scalars['Time']>;
    readonly endDatetime_gt: InputMaybe<Scalars['Time']>;
    readonly endDatetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly endDatetime_leq: InputMaybe<Scalars['Time']>;
    readonly endDatetime_lt: InputMaybe<Scalars['Time']>;
    readonly endDatetime_neq: InputMaybe<Scalars['Time']>;
    readonly endDatetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly ipProtocol: InputMaybe<Scalars['uint8']>;
    readonly ipProtocolName: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_geq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_gt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_leq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_like: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_lt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_neq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_notlike: InputMaybe<Scalars['string']>;
    readonly ipProtocol_geq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_gt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_in: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol_leq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_lt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_neq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_notin: InputMaybe<Scalars['bytes']>;
    readonly mitigationReason: InputMaybe<Scalars['string']>;
    readonly mitigationReason_geq: InputMaybe<Scalars['string']>;
    readonly mitigationReason_gt: InputMaybe<Scalars['string']>;
    readonly mitigationReason_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationReason_leq: InputMaybe<Scalars['string']>;
    readonly mitigationReason_like: InputMaybe<Scalars['string']>;
    readonly mitigationReason_lt: InputMaybe<Scalars['string']>;
    readonly mitigationReason_neq: InputMaybe<Scalars['string']>;
    readonly mitigationReason_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationReason_notlike: InputMaybe<Scalars['string']>;
    readonly mitigationScope: InputMaybe<Scalars['string']>;
    readonly mitigationScope_geq: InputMaybe<Scalars['string']>;
    readonly mitigationScope_gt: InputMaybe<Scalars['string']>;
    readonly mitigationScope_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationScope_leq: InputMaybe<Scalars['string']>;
    readonly mitigationScope_like: InputMaybe<Scalars['string']>;
    readonly mitigationScope_lt: InputMaybe<Scalars['string']>;
    readonly mitigationScope_neq: InputMaybe<Scalars['string']>;
    readonly mitigationScope_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationScope_notlike: InputMaybe<Scalars['string']>;
    readonly mitigationType: InputMaybe<Scalars['string']>;
    readonly mitigationType_geq: InputMaybe<Scalars['string']>;
    readonly mitigationType_gt: InputMaybe<Scalars['string']>;
    readonly mitigationType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationType_leq: InputMaybe<Scalars['string']>;
    readonly mitigationType_like: InputMaybe<Scalars['string']>;
    readonly mitigationType_lt: InputMaybe<Scalars['string']>;
    readonly mitigationType_neq: InputMaybe<Scalars['string']>;
    readonly mitigationType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationType_notlike: InputMaybe<Scalars['string']>;
    readonly packets: InputMaybe<Scalars['uint64']>;
    readonly packets_geq: InputMaybe<Scalars['uint64']>;
    readonly packets_gt: InputMaybe<Scalars['uint64']>;
    readonly packets_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly packets_leq: InputMaybe<Scalars['uint64']>;
    readonly packets_lt: InputMaybe<Scalars['uint64']>;
    readonly packets_neq: InputMaybe<Scalars['uint64']>;
    readonly packets_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly sourceIp: InputMaybe<Scalars['string']>;
    readonly sourceIp_geq: InputMaybe<Scalars['string']>;
    readonly sourceIp_gt: InputMaybe<Scalars['string']>;
    readonly sourceIp_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIp_leq: InputMaybe<Scalars['string']>;
    readonly sourceIp_like: InputMaybe<Scalars['string']>;
    readonly sourceIp_lt: InputMaybe<Scalars['string']>;
    readonly sourceIp_neq: InputMaybe<Scalars['string']>;
    readonly sourceIp_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIp_notlike: InputMaybe<Scalars['string']>;
    readonly sourcePort: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly sourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly startDatetime: InputMaybe<Scalars['Time']>;
    readonly startDatetime_geq: InputMaybe<Scalars['Time']>;
    readonly startDatetime_gt: InputMaybe<Scalars['Time']>;
    readonly startDatetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly startDatetime_leq: InputMaybe<Scalars['Time']>;
    readonly startDatetime_lt: InputMaybe<Scalars['Time']>;
    readonly startDatetime_neq: InputMaybe<Scalars['Time']>;
    readonly startDatetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly tcpFlags: InputMaybe<Scalars['uint8']>;
    readonly tcpFlagsNames: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_geq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_gt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsNames_leq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_like: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_lt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_neq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsNames_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsNames_notlike: InputMaybe<Scalars['string']>;
    readonly tcpFlags_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_in: InputMaybe<Scalars['bytes']>;
    readonly tcpFlags_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_notin: InputMaybe<Scalars['bytes']>;
}

type AccountFbmAttackAnalyticsGroupsOrderBy =
  /** attackId ascending */
  | 'attackId_ASC'
  /** attackId descending */
  | 'attackId_DESC'
  /** attackType ascending */
  | 'attackType_ASC'
  /** attackType descending */
  | 'attackType_DESC'
  /** bits ascending */
  | 'bits_ASC'
  /** bits descending */
  | 'bits_DESC'
  /** commonTcpFlagsNames ascending */
  | 'commonTcpFlagsNames_ASC'
  /** commonTcpFlagsNames descending */
  | 'commonTcpFlagsNames_DESC'
  /** commonTcpFlags ascending */
  | 'commonTcpFlags_ASC'
  /** commonTcpFlags descending */
  | 'commonTcpFlags_DESC'
  /** destinationIp ascending */
  | 'destinationIp_ASC'
  /** destinationIp descending */
  | 'destinationIp_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** endDatetime ascending */
  | 'endDatetime_ASC'
  /** endDatetime descending */
  | 'endDatetime_DESC'
  /** ipProtocolName ascending */
  | 'ipProtocolName_ASC'
  /** ipProtocolName descending */
  | 'ipProtocolName_DESC'
  /** ipProtocol ascending */
  | 'ipProtocol_ASC'
  /** ipProtocol descending */
  | 'ipProtocol_DESC'
  /** mitigationReason ascending */
  | 'mitigationReason_ASC'
  /** mitigationReason descending */
  | 'mitigationReason_DESC'
  /** mitigationScope ascending */
  | 'mitigationScope_ASC'
  /** mitigationScope descending */
  | 'mitigationScope_DESC'
  /** mitigationType ascending */
  | 'mitigationType_ASC'
  /** mitigationType descending */
  | 'mitigationType_DESC'
  /** packets ascending */
  | 'packets_ASC'
  /** packets descending */
  | 'packets_DESC'
  /** sourceIp ascending */
  | 'sourceIp_ASC'
  /** sourceIp descending */
  | 'sourceIp_DESC'
  /** sourcePort ascending */
  | 'sourcePort_ASC'
  /** sourcePort descending */
  | 'sourcePort_DESC'
  /** startDatetime ascending */
  | 'startDatetime_ASC'
  /** startDatetime descending */
  | 'startDatetime_DESC'
  /** tcpFlagsNames ascending */
  | 'tcpFlagsNames_ASC'
  /** tcpFlagsNames descending */
  | 'tcpFlagsNames_DESC'
  /** tcpFlags ascending */
  | 'tcpFlags_ASC'
  /** tcpFlags descending */
  | 'tcpFlags_DESC';

interface AccountFilter_InputObject {
    readonly accountTag: Scalars['string'];
}

interface AccountFirewallEventsAdaptiveFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountFirewallEventsAdaptiveFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountFirewallEventsAdaptiveFilter_InputObject[]>;
    readonly action: InputMaybe<Scalars['string']>;
    readonly action_geq: InputMaybe<Scalars['string']>;
    readonly action_gt: InputMaybe<Scalars['string']>;
    readonly action_in: InputMaybe<readonly Scalars['string'][]>;
    readonly action_leq: InputMaybe<Scalars['string']>;
    readonly action_like: InputMaybe<Scalars['string']>;
    readonly action_lt: InputMaybe<Scalars['string']>;
    readonly action_neq: InputMaybe<Scalars['string']>;
    readonly action_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly action_notlike: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_geq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_gt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_in: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_leq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_like: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_lt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_neq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_notlike: InputMaybe<Scalars['string']>;
    readonly botScore: InputMaybe<Scalars['uint8']>;
    readonly botScoreSrcName: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_geq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_gt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_leq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_like: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_lt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_neq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_notlike: InputMaybe<Scalars['string']>;
    readonly botScore_geq: InputMaybe<Scalars['uint8']>;
    readonly botScore_gt: InputMaybe<Scalars['uint8']>;
    readonly botScore_in: InputMaybe<Scalars['bytes']>;
    readonly botScore_leq: InputMaybe<Scalars['uint8']>;
    readonly botScore_lt: InputMaybe<Scalars['uint8']>;
    readonly botScore_neq: InputMaybe<Scalars['uint8']>;
    readonly botScore_notin: InputMaybe<Scalars['bytes']>;
    readonly clientASNDescription: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_like: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly clientAsn: InputMaybe<Scalars['string']>;
    readonly clientAsn_geq: InputMaybe<Scalars['string']>;
    readonly clientAsn_gt: InputMaybe<Scalars['string']>;
    readonly clientAsn_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_leq: InputMaybe<Scalars['string']>;
    readonly clientAsn_like: InputMaybe<Scalars['string']>;
    readonly clientAsn_lt: InputMaybe<Scalars['string']>;
    readonly clientAsn_neq: InputMaybe<Scalars['string']>;
    readonly clientAsn_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_notlike: InputMaybe<Scalars['string']>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly clientIP: InputMaybe<Scalars['string']>;
    readonly clientIPClass: InputMaybe<Scalars['string']>;
    readonly clientIPClass_geq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_gt: InputMaybe<Scalars['string']>;
    readonly clientIPClass_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPClass_leq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_like: InputMaybe<Scalars['string']>;
    readonly clientIPClass_lt: InputMaybe<Scalars['string']>;
    readonly clientIPClass_neq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPClass_notlike: InputMaybe<Scalars['string']>;
    readonly clientIP_geq: InputMaybe<Scalars['string']>;
    readonly clientIP_gt: InputMaybe<Scalars['string']>;
    readonly clientIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_leq: InputMaybe<Scalars['string']>;
    readonly clientIP_like: InputMaybe<Scalars['string']>;
    readonly clientIP_lt: InputMaybe<Scalars['string']>;
    readonly clientIP_neq: InputMaybe<Scalars['string']>;
    readonly clientIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererHost: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_like: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererPath: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererPath_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_like: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererPath_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererQuery_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_like: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererQuery_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererScheme_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_like: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererScheme_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestPath: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_like: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_like: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_like: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_notlike: InputMaybe<Scalars['string']>;
    readonly contentScanHasFailed: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_geq: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_gt: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_in: InputMaybe<Scalars['bytes']>;
    readonly contentScanHasFailed_leq: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_lt: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_neq: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_notin: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumMaliciousObj: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_geq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_gt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_in: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumMaliciousObj_leq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_lt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_neq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_notin: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumObj: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_geq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_gt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_in: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumObj_leq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_lt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_neq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_notin: InputMaybe<Scalars['bytes']>;
    readonly contentScanObjResults: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_geq: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_gt: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_in: InputMaybe<readonly Scalars['string'][]>;
    readonly contentScanObjResults_leq: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_like: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_lt: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_neq: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly contentScanObjResults_notlike: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_geq: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_gt: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_in: InputMaybe<readonly Scalars['string'][]>;
    readonly contentScanObjTypes_leq: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_like: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_lt: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_neq: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly contentScanObjTypes_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly edgeColoName: InputMaybe<Scalars['string']>;
    readonly edgeColoName_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_like: InputMaybe<Scalars['string']>;
    readonly edgeColoName_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_notlike: InputMaybe<Scalars['string']>;
    readonly edgeResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly edgeResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly httpApplication: InputMaybe<Scalars['string']>;
    readonly httpApplicationVersion: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_geq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_gt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplicationVersion_leq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_lt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_neq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplication_geq: InputMaybe<Scalars['string']>;
    readonly httpApplication_gt: InputMaybe<Scalars['string']>;
    readonly httpApplication_in: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_leq: InputMaybe<Scalars['string']>;
    readonly httpApplication_like: InputMaybe<Scalars['string']>;
    readonly httpApplication_lt: InputMaybe<Scalars['string']>;
    readonly httpApplication_neq: InputMaybe<Scalars['string']>;
    readonly httpApplication_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_notlike: InputMaybe<Scalars['string']>;
    readonly ja3Hash: InputMaybe<Scalars['string']>;
    readonly ja3Hash_geq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_gt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_leq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_like: InputMaybe<Scalars['string']>;
    readonly ja3Hash_lt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_neq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_notlike: InputMaybe<Scalars['string']>;
    readonly kind: InputMaybe<Scalars['string']>;
    readonly kind_geq: InputMaybe<Scalars['string']>;
    readonly kind_gt: InputMaybe<Scalars['string']>;
    readonly kind_in: InputMaybe<readonly Scalars['string'][]>;
    readonly kind_leq: InputMaybe<Scalars['string']>;
    readonly kind_like: InputMaybe<Scalars['string']>;
    readonly kind_lt: InputMaybe<Scalars['string']>;
    readonly kind_neq: InputMaybe<Scalars['string']>;
    readonly kind_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly kind_notlike: InputMaybe<Scalars['string']>;
    readonly matchIndex: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_geq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_gt: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly matchIndex_leq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_lt: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_neq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originatorRayName: InputMaybe<Scalars['string']>;
    readonly originatorRayName_geq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_gt: InputMaybe<Scalars['string']>;
    readonly originatorRayName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly originatorRayName_leq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_like: InputMaybe<Scalars['string']>;
    readonly originatorRayName_lt: InputMaybe<Scalars['string']>;
    readonly originatorRayName_neq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly originatorRayName_notlike: InputMaybe<Scalars['string']>;
    readonly rayName: InputMaybe<Scalars['string']>;
    readonly rayName_geq: InputMaybe<Scalars['string']>;
    readonly rayName_gt: InputMaybe<Scalars['string']>;
    readonly rayName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rayName_leq: InputMaybe<Scalars['string']>;
    readonly rayName_like: InputMaybe<Scalars['string']>;
    readonly rayName_lt: InputMaybe<Scalars['string']>;
    readonly rayName_neq: InputMaybe<Scalars['string']>;
    readonly rayName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rayName_notlike: InputMaybe<Scalars['string']>;
    readonly ref: InputMaybe<Scalars['string']>;
    readonly ref_geq: InputMaybe<Scalars['string']>;
    readonly ref_gt: InputMaybe<Scalars['string']>;
    readonly ref_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ref_leq: InputMaybe<Scalars['string']>;
    readonly ref_like: InputMaybe<Scalars['string']>;
    readonly ref_lt: InputMaybe<Scalars['string']>;
    readonly ref_neq: InputMaybe<Scalars['string']>;
    readonly ref_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ref_notlike: InputMaybe<Scalars['string']>;
    readonly ruleId: InputMaybe<Scalars['string']>;
    readonly ruleId_geq: InputMaybe<Scalars['string']>;
    readonly ruleId_gt: InputMaybe<Scalars['string']>;
    readonly ruleId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_leq: InputMaybe<Scalars['string']>;
    readonly ruleId_like: InputMaybe<Scalars['string']>;
    readonly ruleId_lt: InputMaybe<Scalars['string']>;
    readonly ruleId_neq: InputMaybe<Scalars['string']>;
    readonly ruleId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_notlike: InputMaybe<Scalars['string']>;
    readonly rulesetId: InputMaybe<Scalars['string']>;
    readonly rulesetId_geq: InputMaybe<Scalars['string']>;
    readonly rulesetId_gt: InputMaybe<Scalars['string']>;
    readonly rulesetId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_leq: InputMaybe<Scalars['string']>;
    readonly rulesetId_like: InputMaybe<Scalars['string']>;
    readonly rulesetId_lt: InputMaybe<Scalars['string']>;
    readonly rulesetId_neq: InputMaybe<Scalars['string']>;
    readonly rulesetId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly source: InputMaybe<Scalars['string']>;
    readonly source_geq: InputMaybe<Scalars['string']>;
    readonly source_gt: InputMaybe<Scalars['string']>;
    readonly source_in: InputMaybe<readonly Scalars['string'][]>;
    readonly source_leq: InputMaybe<Scalars['string']>;
    readonly source_like: InputMaybe<Scalars['string']>;
    readonly source_lt: InputMaybe<Scalars['string']>;
    readonly source_neq: InputMaybe<Scalars['string']>;
    readonly source_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly source_notlike: InputMaybe<Scalars['string']>;
    readonly userAgent: InputMaybe<Scalars['string']>;
    readonly userAgent_geq: InputMaybe<Scalars['string']>;
    readonly userAgent_gt: InputMaybe<Scalars['string']>;
    readonly userAgent_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_leq: InputMaybe<Scalars['string']>;
    readonly userAgent_like: InputMaybe<Scalars['string']>;
    readonly userAgent_lt: InputMaybe<Scalars['string']>;
    readonly userAgent_neq: InputMaybe<Scalars['string']>;
    readonly userAgent_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_notlike: InputMaybe<Scalars['string']>;
    readonly wafAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlSqliAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlSqliAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlXssAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlXssAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_notin: InputMaybe<Scalars['bytes']>;
}

interface AccountFirewallEventsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountFirewallEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountFirewallEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly action: InputMaybe<Scalars['string']>;
    readonly action_geq: InputMaybe<Scalars['string']>;
    readonly action_gt: InputMaybe<Scalars['string']>;
    readonly action_in: InputMaybe<readonly Scalars['string'][]>;
    readonly action_leq: InputMaybe<Scalars['string']>;
    readonly action_like: InputMaybe<Scalars['string']>;
    readonly action_lt: InputMaybe<Scalars['string']>;
    readonly action_neq: InputMaybe<Scalars['string']>;
    readonly action_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly action_notlike: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_geq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_gt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_in: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_leq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_like: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_lt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_neq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_notlike: InputMaybe<Scalars['string']>;
    readonly botScore: InputMaybe<Scalars['uint8']>;
    readonly botScoreSrcName: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_geq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_gt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_leq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_like: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_lt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_neq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_notlike: InputMaybe<Scalars['string']>;
    readonly botScore_geq: InputMaybe<Scalars['uint8']>;
    readonly botScore_gt: InputMaybe<Scalars['uint8']>;
    readonly botScore_in: InputMaybe<Scalars['bytes']>;
    readonly botScore_leq: InputMaybe<Scalars['uint8']>;
    readonly botScore_lt: InputMaybe<Scalars['uint8']>;
    readonly botScore_neq: InputMaybe<Scalars['uint8']>;
    readonly botScore_notin: InputMaybe<Scalars['bytes']>;
    readonly clientASNDescription: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_like: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly clientAsn: InputMaybe<Scalars['string']>;
    readonly clientAsn_geq: InputMaybe<Scalars['string']>;
    readonly clientAsn_gt: InputMaybe<Scalars['string']>;
    readonly clientAsn_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_leq: InputMaybe<Scalars['string']>;
    readonly clientAsn_like: InputMaybe<Scalars['string']>;
    readonly clientAsn_lt: InputMaybe<Scalars['string']>;
    readonly clientAsn_neq: InputMaybe<Scalars['string']>;
    readonly clientAsn_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_notlike: InputMaybe<Scalars['string']>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly clientIP: InputMaybe<Scalars['string']>;
    readonly clientIPClass: InputMaybe<Scalars['string']>;
    readonly clientIPClass_geq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_gt: InputMaybe<Scalars['string']>;
    readonly clientIPClass_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPClass_leq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_like: InputMaybe<Scalars['string']>;
    readonly clientIPClass_lt: InputMaybe<Scalars['string']>;
    readonly clientIPClass_neq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPClass_notlike: InputMaybe<Scalars['string']>;
    readonly clientIP_geq: InputMaybe<Scalars['string']>;
    readonly clientIP_gt: InputMaybe<Scalars['string']>;
    readonly clientIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_leq: InputMaybe<Scalars['string']>;
    readonly clientIP_like: InputMaybe<Scalars['string']>;
    readonly clientIP_lt: InputMaybe<Scalars['string']>;
    readonly clientIP_neq: InputMaybe<Scalars['string']>;
    readonly clientIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererHost: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_like: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererPath: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererPath_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_like: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererPath_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererQuery_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_like: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererQuery_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererScheme_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_like: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererScheme_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestPath: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_like: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_like: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_like: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly edgeColoName: InputMaybe<Scalars['string']>;
    readonly edgeColoName_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_like: InputMaybe<Scalars['string']>;
    readonly edgeColoName_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_notlike: InputMaybe<Scalars['string']>;
    readonly edgeResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly edgeResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly httpApplication: InputMaybe<Scalars['string']>;
    readonly httpApplicationVersion: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_geq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_gt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplicationVersion_leq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_lt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_neq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplication_geq: InputMaybe<Scalars['string']>;
    readonly httpApplication_gt: InputMaybe<Scalars['string']>;
    readonly httpApplication_in: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_leq: InputMaybe<Scalars['string']>;
    readonly httpApplication_like: InputMaybe<Scalars['string']>;
    readonly httpApplication_lt: InputMaybe<Scalars['string']>;
    readonly httpApplication_neq: InputMaybe<Scalars['string']>;
    readonly httpApplication_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_notlike: InputMaybe<Scalars['string']>;
    readonly ja3Hash: InputMaybe<Scalars['string']>;
    readonly ja3Hash_geq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_gt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_leq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_like: InputMaybe<Scalars['string']>;
    readonly ja3Hash_lt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_neq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_notlike: InputMaybe<Scalars['string']>;
    readonly kind: InputMaybe<Scalars['string']>;
    readonly kind_geq: InputMaybe<Scalars['string']>;
    readonly kind_gt: InputMaybe<Scalars['string']>;
    readonly kind_in: InputMaybe<readonly Scalars['string'][]>;
    readonly kind_leq: InputMaybe<Scalars['string']>;
    readonly kind_like: InputMaybe<Scalars['string']>;
    readonly kind_lt: InputMaybe<Scalars['string']>;
    readonly kind_neq: InputMaybe<Scalars['string']>;
    readonly kind_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly kind_notlike: InputMaybe<Scalars['string']>;
    readonly matchIndex: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_geq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_gt: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly matchIndex_leq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_lt: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_neq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originatorRayName: InputMaybe<Scalars['string']>;
    readonly originatorRayName_geq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_gt: InputMaybe<Scalars['string']>;
    readonly originatorRayName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly originatorRayName_leq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_like: InputMaybe<Scalars['string']>;
    readonly originatorRayName_lt: InputMaybe<Scalars['string']>;
    readonly originatorRayName_neq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly originatorRayName_notlike: InputMaybe<Scalars['string']>;
    readonly rayName: InputMaybe<Scalars['string']>;
    readonly rayName_geq: InputMaybe<Scalars['string']>;
    readonly rayName_gt: InputMaybe<Scalars['string']>;
    readonly rayName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rayName_leq: InputMaybe<Scalars['string']>;
    readonly rayName_like: InputMaybe<Scalars['string']>;
    readonly rayName_lt: InputMaybe<Scalars['string']>;
    readonly rayName_neq: InputMaybe<Scalars['string']>;
    readonly rayName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rayName_notlike: InputMaybe<Scalars['string']>;
    readonly ref: InputMaybe<Scalars['string']>;
    readonly ref_geq: InputMaybe<Scalars['string']>;
    readonly ref_gt: InputMaybe<Scalars['string']>;
    readonly ref_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ref_leq: InputMaybe<Scalars['string']>;
    readonly ref_like: InputMaybe<Scalars['string']>;
    readonly ref_lt: InputMaybe<Scalars['string']>;
    readonly ref_neq: InputMaybe<Scalars['string']>;
    readonly ref_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ref_notlike: InputMaybe<Scalars['string']>;
    readonly ruleId: InputMaybe<Scalars['string']>;
    readonly ruleId_geq: InputMaybe<Scalars['string']>;
    readonly ruleId_gt: InputMaybe<Scalars['string']>;
    readonly ruleId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_leq: InputMaybe<Scalars['string']>;
    readonly ruleId_like: InputMaybe<Scalars['string']>;
    readonly ruleId_lt: InputMaybe<Scalars['string']>;
    readonly ruleId_neq: InputMaybe<Scalars['string']>;
    readonly ruleId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_notlike: InputMaybe<Scalars['string']>;
    readonly rulesetId: InputMaybe<Scalars['string']>;
    readonly rulesetId_geq: InputMaybe<Scalars['string']>;
    readonly rulesetId_gt: InputMaybe<Scalars['string']>;
    readonly rulesetId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_leq: InputMaybe<Scalars['string']>;
    readonly rulesetId_like: InputMaybe<Scalars['string']>;
    readonly rulesetId_lt: InputMaybe<Scalars['string']>;
    readonly rulesetId_neq: InputMaybe<Scalars['string']>;
    readonly rulesetId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly source: InputMaybe<Scalars['string']>;
    readonly source_geq: InputMaybe<Scalars['string']>;
    readonly source_gt: InputMaybe<Scalars['string']>;
    readonly source_in: InputMaybe<readonly Scalars['string'][]>;
    readonly source_leq: InputMaybe<Scalars['string']>;
    readonly source_like: InputMaybe<Scalars['string']>;
    readonly source_lt: InputMaybe<Scalars['string']>;
    readonly source_neq: InputMaybe<Scalars['string']>;
    readonly source_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly source_notlike: InputMaybe<Scalars['string']>;
    readonly userAgent: InputMaybe<Scalars['string']>;
    readonly userAgent_geq: InputMaybe<Scalars['string']>;
    readonly userAgent_gt: InputMaybe<Scalars['string']>;
    readonly userAgent_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_leq: InputMaybe<Scalars['string']>;
    readonly userAgent_like: InputMaybe<Scalars['string']>;
    readonly userAgent_lt: InputMaybe<Scalars['string']>;
    readonly userAgent_neq: InputMaybe<Scalars['string']>;
    readonly userAgent_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_notlike: InputMaybe<Scalars['string']>;
    readonly wafAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlSqliAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlSqliAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlXssAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlXssAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_notin: InputMaybe<Scalars['bytes']>;
}

type AccountFirewallEventsAdaptiveGroupsOrderBy =
  /** action ascending */
  | 'action_ASC'
  /** action descending */
  | 'action_DESC'
  /** apiGatewayMatchedEndpoint ascending */
  | 'apiGatewayMatchedEndpoint_ASC'
  /** apiGatewayMatchedEndpoint descending */
  | 'apiGatewayMatchedEndpoint_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** botScoreSrcName ascending */
  | 'botScoreSrcName_ASC'
  /** botScoreSrcName descending */
  | 'botScoreSrcName_DESC'
  /** botScore ascending */
  | 'botScore_ASC'
  /** botScore descending */
  | 'botScore_DESC'
  /** clientASNDescription ascending */
  | 'clientASNDescription_ASC'
  /** clientASNDescription descending */
  | 'clientASNDescription_DESC'
  /** clientAsn ascending */
  | 'clientAsn_ASC'
  /** clientAsn descending */
  | 'clientAsn_DESC'
  /** clientCountryName ascending */
  | 'clientCountryName_ASC'
  /** clientCountryName descending */
  | 'clientCountryName_DESC'
  /** clientIPClass ascending */
  | 'clientIPClass_ASC'
  /** clientIPClass descending */
  | 'clientIPClass_DESC'
  /** clientIP ascending */
  | 'clientIP_ASC'
  /** clientIP descending */
  | 'clientIP_DESC'
  /** clientRefererHost ascending */
  | 'clientRefererHost_ASC'
  /** clientRefererHost descending */
  | 'clientRefererHost_DESC'
  /** clientRefererPath ascending */
  | 'clientRefererPath_ASC'
  /** clientRefererPath descending */
  | 'clientRefererPath_DESC'
  /** clientRefererQuery ascending */
  | 'clientRefererQuery_ASC'
  /** clientRefererQuery descending */
  | 'clientRefererQuery_DESC'
  /** clientRefererScheme ascending */
  | 'clientRefererScheme_ASC'
  /** clientRefererScheme descending */
  | 'clientRefererScheme_DESC'
  /** clientRequestHTTPHost ascending */
  | 'clientRequestHTTPHost_ASC'
  /** clientRequestHTTPHost descending */
  | 'clientRequestHTTPHost_DESC'
  /** clientRequestHTTPMethodName ascending */
  | 'clientRequestHTTPMethodName_ASC'
  /** clientRequestHTTPMethodName descending */
  | 'clientRequestHTTPMethodName_DESC'
  /** clientRequestHTTPProtocol ascending */
  | 'clientRequestHTTPProtocol_ASC'
  /** clientRequestHTTPProtocol descending */
  | 'clientRequestHTTPProtocol_DESC'
  /** clientRequestPath ascending */
  | 'clientRequestPath_ASC'
  /** clientRequestPath descending */
  | 'clientRequestPath_DESC'
  /** clientRequestQuery ascending */
  | 'clientRequestQuery_ASC'
  /** clientRequestQuery descending */
  | 'clientRequestQuery_DESC'
  /** clientRequestScheme ascending */
  | 'clientRequestScheme_ASC'
  /** clientRequestScheme descending */
  | 'clientRequestScheme_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** edgeColoName ascending */
  | 'edgeColoName_ASC'
  /** edgeColoName descending */
  | 'edgeColoName_DESC'
  /** edgeResponseStatus ascending */
  | 'edgeResponseStatus_ASC'
  /** edgeResponseStatus descending */
  | 'edgeResponseStatus_DESC'
  /** httpApplicationVersion ascending */
  | 'httpApplicationVersion_ASC'
  /** httpApplicationVersion descending */
  | 'httpApplicationVersion_DESC'
  /** httpApplication ascending */
  | 'httpApplication_ASC'
  /** httpApplication descending */
  | 'httpApplication_DESC'
  /** ja3Hash ascending */
  | 'ja3Hash_ASC'
  /** ja3Hash descending */
  | 'ja3Hash_DESC'
  /** kind ascending */
  | 'kind_ASC'
  /** kind descending */
  | 'kind_DESC'
  /** matchIndex ascending */
  | 'matchIndex_ASC'
  /** matchIndex descending */
  | 'matchIndex_DESC'
  /** originResponseStatus ascending */
  | 'originResponseStatus_ASC'
  /** originResponseStatus descending */
  | 'originResponseStatus_DESC'
  /** originatorRayName ascending */
  | 'originatorRayName_ASC'
  /** originatorRayName descending */
  | 'originatorRayName_DESC'
  /** rayName ascending */
  | 'rayName_ASC'
  /** rayName descending */
  | 'rayName_DESC'
  /** ref ascending */
  | 'ref_ASC'
  /** ref descending */
  | 'ref_DESC'
  /** ruleId ascending */
  | 'ruleId_ASC'
  /** ruleId descending */
  | 'ruleId_DESC'
  /** rulesetId ascending */
  | 'rulesetId_ASC'
  /** rulesetId descending */
  | 'rulesetId_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** source ascending */
  | 'source_ASC'
  /** source descending */
  | 'source_DESC'
  /** userAgent ascending */
  | 'userAgent_ASC'
  /** userAgent descending */
  | 'userAgent_DESC'
  /** visibility ascending */
  | 'visibility_ASC'
  /** visibility descending */
  | 'visibility_DESC'
  /** wafAttackScore ascending */
  | 'wafAttackScore_ASC'
  /** wafAttackScore descending */
  | 'wafAttackScore_DESC'
  /** wafMlAttackScore ascending */
  | 'wafMlAttackScore_ASC'
  /** wafMlAttackScore descending */
  | 'wafMlAttackScore_DESC'
  /** wafMlSqliAttackScore ascending */
  | 'wafMlSqliAttackScore_ASC'
  /** wafMlSqliAttackScore descending */
  | 'wafMlSqliAttackScore_DESC'
  /** wafMlXssAttackScore ascending */
  | 'wafMlXssAttackScore_ASC'
  /** wafMlXssAttackScore descending */
  | 'wafMlXssAttackScore_DESC'
  /** wafRceAttackScore ascending */
  | 'wafRceAttackScore_ASC'
  /** wafRceAttackScore descending */
  | 'wafRceAttackScore_DESC'
  /** wafSqliAttackScore ascending */
  | 'wafSqliAttackScore_ASC'
  /** wafSqliAttackScore descending */
  | 'wafSqliAttackScore_DESC'
  /** wafXssAttackScore ascending */
  | 'wafXssAttackScore_ASC'
  /** wafXssAttackScore descending */
  | 'wafXssAttackScore_DESC';

type AccountFirewallEventsAdaptiveOrderBy =
  /** action ascending */
  | 'action_ASC'
  /** action descending */
  | 'action_DESC'
  /** apiGatewayMatchedEndpoint ascending */
  | 'apiGatewayMatchedEndpoint_ASC'
  /** apiGatewayMatchedEndpoint descending */
  | 'apiGatewayMatchedEndpoint_DESC'
  /** botScoreSrcName ascending */
  | 'botScoreSrcName_ASC'
  /** botScoreSrcName descending */
  | 'botScoreSrcName_DESC'
  /** botScore ascending */
  | 'botScore_ASC'
  /** botScore descending */
  | 'botScore_DESC'
  /** clientASNDescription ascending */
  | 'clientASNDescription_ASC'
  /** clientASNDescription descending */
  | 'clientASNDescription_DESC'
  /** clientAsn ascending */
  | 'clientAsn_ASC'
  /** clientAsn descending */
  | 'clientAsn_DESC'
  /** clientCountryName ascending */
  | 'clientCountryName_ASC'
  /** clientCountryName descending */
  | 'clientCountryName_DESC'
  /** clientIPClass ascending */
  | 'clientIPClass_ASC'
  /** clientIPClass descending */
  | 'clientIPClass_DESC'
  /** clientIP ascending */
  | 'clientIP_ASC'
  /** clientIP descending */
  | 'clientIP_DESC'
  /** clientRefererHost ascending */
  | 'clientRefererHost_ASC'
  /** clientRefererHost descending */
  | 'clientRefererHost_DESC'
  /** clientRefererPath ascending */
  | 'clientRefererPath_ASC'
  /** clientRefererPath descending */
  | 'clientRefererPath_DESC'
  /** clientRefererQuery ascending */
  | 'clientRefererQuery_ASC'
  /** clientRefererQuery descending */
  | 'clientRefererQuery_DESC'
  /** clientRefererScheme ascending */
  | 'clientRefererScheme_ASC'
  /** clientRefererScheme descending */
  | 'clientRefererScheme_DESC'
  /** clientRequestHTTPHost ascending */
  | 'clientRequestHTTPHost_ASC'
  /** clientRequestHTTPHost descending */
  | 'clientRequestHTTPHost_DESC'
  /** clientRequestHTTPMethodName ascending */
  | 'clientRequestHTTPMethodName_ASC'
  /** clientRequestHTTPMethodName descending */
  | 'clientRequestHTTPMethodName_DESC'
  /** clientRequestHTTPProtocol ascending */
  | 'clientRequestHTTPProtocol_ASC'
  /** clientRequestHTTPProtocol descending */
  | 'clientRequestHTTPProtocol_DESC'
  /** clientRequestPath ascending */
  | 'clientRequestPath_ASC'
  /** clientRequestPath descending */
  | 'clientRequestPath_DESC'
  /** clientRequestQuery ascending */
  | 'clientRequestQuery_ASC'
  /** clientRequestQuery descending */
  | 'clientRequestQuery_DESC'
  /** clientRequestScheme ascending */
  | 'clientRequestScheme_ASC'
  /** clientRequestScheme descending */
  | 'clientRequestScheme_DESC'
  /** contentScanHasFailed ascending */
  | 'contentScanHasFailed_ASC'
  /** contentScanHasFailed descending */
  | 'contentScanHasFailed_DESC'
  /** contentScanNumMaliciousObj ascending */
  | 'contentScanNumMaliciousObj_ASC'
  /** contentScanNumMaliciousObj descending */
  | 'contentScanNumMaliciousObj_DESC'
  /** contentScanNumObj ascending */
  | 'contentScanNumObj_ASC'
  /** contentScanNumObj descending */
  | 'contentScanNumObj_DESC'
  /** contentScanObjResults ascending */
  | 'contentScanObjResults_ASC'
  /** contentScanObjResults descending */
  | 'contentScanObjResults_DESC'
  /** contentScanObjTypes ascending */
  | 'contentScanObjTypes_ASC'
  /** contentScanObjTypes descending */
  | 'contentScanObjTypes_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** edgeColoName ascending */
  | 'edgeColoName_ASC'
  /** edgeColoName descending */
  | 'edgeColoName_DESC'
  /** edgeResponseStatus ascending */
  | 'edgeResponseStatus_ASC'
  /** edgeResponseStatus descending */
  | 'edgeResponseStatus_DESC'
  /** httpApplicationVersion ascending */
  | 'httpApplicationVersion_ASC'
  /** httpApplicationVersion descending */
  | 'httpApplicationVersion_DESC'
  /** httpApplication ascending */
  | 'httpApplication_ASC'
  /** httpApplication descending */
  | 'httpApplication_DESC'
  /** ja3Hash ascending */
  | 'ja3Hash_ASC'
  /** ja3Hash descending */
  | 'ja3Hash_DESC'
  /** kind ascending */
  | 'kind_ASC'
  /** kind descending */
  | 'kind_DESC'
  /** matchIndex ascending */
  | 'matchIndex_ASC'
  /** matchIndex descending */
  | 'matchIndex_DESC'
  /** originResponseStatus ascending */
  | 'originResponseStatus_ASC'
  /** originResponseStatus descending */
  | 'originResponseStatus_DESC'
  /** originatorRayName ascending */
  | 'originatorRayName_ASC'
  /** originatorRayName descending */
  | 'originatorRayName_DESC'
  /** rayName ascending */
  | 'rayName_ASC'
  /** rayName descending */
  | 'rayName_DESC'
  /** ref ascending */
  | 'ref_ASC'
  /** ref descending */
  | 'ref_DESC'
  /** ruleId ascending */
  | 'ruleId_ASC'
  /** ruleId descending */
  | 'ruleId_DESC'
  /** rulesetId ascending */
  | 'rulesetId_ASC'
  /** rulesetId descending */
  | 'rulesetId_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** source ascending */
  | 'source_ASC'
  /** source descending */
  | 'source_DESC'
  /** userAgent ascending */
  | 'userAgent_ASC'
  /** userAgent descending */
  | 'userAgent_DESC'
  /** visibility ascending */
  | 'visibility_ASC'
  /** visibility descending */
  | 'visibility_DESC'
  /** wafAttackScore ascending */
  | 'wafAttackScore_ASC'
  /** wafAttackScore descending */
  | 'wafAttackScore_DESC'
  /** wafMlAttackScore ascending */
  | 'wafMlAttackScore_ASC'
  /** wafMlAttackScore descending */
  | 'wafMlAttackScore_DESC'
  /** wafMlSqliAttackScore ascending */
  | 'wafMlSqliAttackScore_ASC'
  /** wafMlSqliAttackScore descending */
  | 'wafMlSqliAttackScore_DESC'
  /** wafMlXssAttackScore ascending */
  | 'wafMlXssAttackScore_ASC'
  /** wafMlXssAttackScore descending */
  | 'wafMlXssAttackScore_DESC'
  /** wafRceAttackScore ascending */
  | 'wafRceAttackScore_ASC'
  /** wafRceAttackScore descending */
  | 'wafRceAttackScore_DESC'
  /** wafSqliAttackScore ascending */
  | 'wafSqliAttackScore_ASC'
  /** wafSqliAttackScore descending */
  | 'wafSqliAttackScore_DESC'
  /** wafXssAttackScore ascending */
  | 'wafXssAttackScore_ASC'
  /** wafXssAttackScore descending */
  | 'wafXssAttackScore_DESC';

interface AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly coloCity: InputMaybe<Scalars['string']>;
    readonly coloCity_geq: InputMaybe<Scalars['string']>;
    readonly coloCity_gt: InputMaybe<Scalars['string']>;
    readonly coloCity_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_leq: InputMaybe<Scalars['string']>;
    readonly coloCity_like: InputMaybe<Scalars['string']>;
    readonly coloCity_lt: InputMaybe<Scalars['string']>;
    readonly coloCity_neq: InputMaybe<Scalars['string']>;
    readonly coloCity_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_notlike: InputMaybe<Scalars['string']>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly coloCountry: InputMaybe<Scalars['string']>;
    readonly coloCountry_geq: InputMaybe<Scalars['string']>;
    readonly coloCountry_gt: InputMaybe<Scalars['string']>;
    readonly coloCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_leq: InputMaybe<Scalars['string']>;
    readonly coloCountry_like: InputMaybe<Scalars['string']>;
    readonly coloCountry_lt: InputMaybe<Scalars['string']>;
    readonly coloCountry_neq: InputMaybe<Scalars['string']>;
    readonly coloCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_notlike: InputMaybe<Scalars['string']>;
    readonly coloGeohash: InputMaybe<Scalars['string']>;
    readonly coloGeohash_geq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_gt: InputMaybe<Scalars['string']>;
    readonly coloGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloGeohash_leq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_like: InputMaybe<Scalars['string']>;
    readonly coloGeohash_lt: InputMaybe<Scalars['string']>;
    readonly coloGeohash_neq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly coloName: InputMaybe<Scalars['string']>;
    readonly coloName_geq: InputMaybe<Scalars['string']>;
    readonly coloName_gt: InputMaybe<Scalars['string']>;
    readonly coloName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloName_leq: InputMaybe<Scalars['string']>;
    readonly coloName_like: InputMaybe<Scalars['string']>;
    readonly coloName_lt: InputMaybe<Scalars['string']>;
    readonly coloName_neq: InputMaybe<Scalars['string']>;
    readonly coloName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationAsn: InputMaybe<Scalars['uint32']>;
    readonly destinationAsnName: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_geq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_gt: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAsnName_leq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_like: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_lt: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_neq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAsnName_notlike: InputMaybe<Scalars['string']>;
    readonly destinationAsn_geq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_gt: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly destinationAsn_leq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_lt: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_neq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly destinationCountry: InputMaybe<Scalars['string']>;
    readonly destinationCountry_geq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_gt: InputMaybe<Scalars['string']>;
    readonly destinationCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationCountry_leq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_like: InputMaybe<Scalars['string']>;
    readonly destinationCountry_lt: InputMaybe<Scalars['string']>;
    readonly destinationCountry_neq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationCountry_notlike: InputMaybe<Scalars['string']>;
    readonly destinationGeohash: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_geq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_gt: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationGeohash_leq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_like: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_lt: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_neq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly direction: InputMaybe<Scalars['string']>;
    readonly direction_geq: InputMaybe<Scalars['string']>;
    readonly direction_gt: InputMaybe<Scalars['string']>;
    readonly direction_in: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_leq: InputMaybe<Scalars['string']>;
    readonly direction_like: InputMaybe<Scalars['string']>;
    readonly direction_lt: InputMaybe<Scalars['string']>;
    readonly direction_neq: InputMaybe<Scalars['string']>;
    readonly direction_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_notlike: InputMaybe<Scalars['string']>;
    readonly ethertype: InputMaybe<Scalars['uint16']>;
    readonly ethertype_geq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_gt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ethertype_leq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_lt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_neq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greChecksum: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greEthertype: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_geq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_gt: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greEthertype_leq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_lt: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_neq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greHeaderLength: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_geq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_gt: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greHeaderLength_leq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_lt: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_neq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greKey: InputMaybe<Scalars['uint32']>;
    readonly greKey_geq: InputMaybe<Scalars['uint32']>;
    readonly greKey_gt: InputMaybe<Scalars['uint32']>;
    readonly greKey_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greKey_leq: InputMaybe<Scalars['uint32']>;
    readonly greKey_lt: InputMaybe<Scalars['uint32']>;
    readonly greKey_neq: InputMaybe<Scalars['uint32']>;
    readonly greKey_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greSequenceNumber: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greSequenceNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greVersion: InputMaybe<Scalars['uint8']>;
    readonly greVersion_geq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_gt: InputMaybe<Scalars['uint8']>;
    readonly greVersion_in: InputMaybe<Scalars['bytes']>;
    readonly greVersion_leq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_lt: InputMaybe<Scalars['uint8']>;
    readonly greVersion_neq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_notin: InputMaybe<Scalars['bytes']>;
    readonly icmpChecksum: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly icmpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly icmpCode: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_geq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_gt: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_in: InputMaybe<Scalars['bytes']>;
    readonly icmpCode_leq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_lt: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_neq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_notin: InputMaybe<Scalars['bytes']>;
    readonly icmpType: InputMaybe<Scalars['uint8']>;
    readonly icmpType_geq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_gt: InputMaybe<Scalars['uint8']>;
    readonly icmpType_in: InputMaybe<Scalars['bytes']>;
    readonly icmpType_leq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_lt: InputMaybe<Scalars['uint8']>;
    readonly icmpType_neq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_notin: InputMaybe<Scalars['bytes']>;
    readonly ipDestinationAddress: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_like: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationAddress_notlike: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_geq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_gt: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationSubnet_leq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_like: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_lt: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_neq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationSubnet_notlike: InputMaybe<Scalars['string']>;
    readonly ipFragmentOffset: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_geq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_gt: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipFragmentOffset_leq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_lt: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_neq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipHeaderLength: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_geq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_gt: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipHeaderLength_leq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_lt: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_neq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipMoreFragments: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_geq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_gt: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_in: InputMaybe<Scalars['bytes']>;
    readonly ipMoreFragments_leq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_lt: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_neq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_notin: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol: InputMaybe<Scalars['uint8']>;
    readonly ipProtocolName: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_geq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_gt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_leq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_like: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_lt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_neq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_notlike: InputMaybe<Scalars['string']>;
    readonly ipProtocol_geq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_gt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_in: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol_leq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_lt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_neq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_notin: InputMaybe<Scalars['bytes']>;
    readonly ipSourceAddress: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_like: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceAddress_notlike: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_geq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_gt: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceSubnet_leq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_like: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_lt: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_neq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceSubnet_notlike: InputMaybe<Scalars['string']>;
    readonly ipTotalLength: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_geq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_gt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLengthBuckets_leq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_lt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_neq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLength_geq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_gt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLength_leq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_lt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_neq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTtl: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_geq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_gt: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_in: InputMaybe<Scalars['bytes']>;
    readonly ipTtlBuckets_leq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_lt: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_neq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_notin: InputMaybe<Scalars['bytes']>;
    readonly ipTtl_geq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_gt: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_in: InputMaybe<Scalars['bytes']>;
    readonly ipTtl_leq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_lt: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_neq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Checksum: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_geq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_gt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Checksum_leq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_lt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_neq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4DontFragment: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4DontFragment_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Dscp: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4Dscp_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Ecn: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4Ecn_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Identification: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_geq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_gt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Identification_leq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_lt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_neq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Options: InputMaybe<Scalars['string']>;
    readonly ipv4Options_geq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_gt: InputMaybe<Scalars['string']>;
    readonly ipv4Options_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv4Options_leq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_like: InputMaybe<Scalars['string']>;
    readonly ipv4Options_lt: InputMaybe<Scalars['string']>;
    readonly ipv4Options_neq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv4Options_notlike: InputMaybe<Scalars['string']>;
    readonly ipv6Dscp: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_in: InputMaybe<Scalars['bytes']>;
    readonly ipv6Dscp_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv6Ecn: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_in: InputMaybe<Scalars['bytes']>;
    readonly ipv6Ecn_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv6ExtensionHeaders: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_geq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_gt: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv6ExtensionHeaders_leq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_like: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_lt: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_neq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv6ExtensionHeaders_notlike: InputMaybe<Scalars['string']>;
    readonly ipv6FlowLabel: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_geq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_gt: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6FlowLabel_leq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_lt: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_neq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6Identification: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_geq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_gt: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6Identification_leq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_lt: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_neq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly mitigationReason: InputMaybe<Scalars['string']>;
    readonly mitigationReason_geq: InputMaybe<Scalars['string']>;
    readonly mitigationReason_gt: InputMaybe<Scalars['string']>;
    readonly mitigationReason_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationReason_leq: InputMaybe<Scalars['string']>;
    readonly mitigationReason_like: InputMaybe<Scalars['string']>;
    readonly mitigationReason_lt: InputMaybe<Scalars['string']>;
    readonly mitigationReason_neq: InputMaybe<Scalars['string']>;
    readonly mitigationReason_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationReason_notlike: InputMaybe<Scalars['string']>;
    readonly mitigationScope: InputMaybe<Scalars['string']>;
    readonly mitigationScope_geq: InputMaybe<Scalars['string']>;
    readonly mitigationScope_gt: InputMaybe<Scalars['string']>;
    readonly mitigationScope_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationScope_leq: InputMaybe<Scalars['string']>;
    readonly mitigationScope_like: InputMaybe<Scalars['string']>;
    readonly mitigationScope_lt: InputMaybe<Scalars['string']>;
    readonly mitigationScope_neq: InputMaybe<Scalars['string']>;
    readonly mitigationScope_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationScope_notlike: InputMaybe<Scalars['string']>;
    readonly outcome: InputMaybe<Scalars['string']>;
    readonly outcome_geq: InputMaybe<Scalars['string']>;
    readonly outcome_gt: InputMaybe<Scalars['string']>;
    readonly outcome_in: InputMaybe<readonly Scalars['string'][]>;
    readonly outcome_leq: InputMaybe<Scalars['string']>;
    readonly outcome_like: InputMaybe<Scalars['string']>;
    readonly outcome_lt: InputMaybe<Scalars['string']>;
    readonly outcome_neq: InputMaybe<Scalars['string']>;
    readonly outcome_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly outcome_notlike: InputMaybe<Scalars['string']>;
    readonly protocolState: InputMaybe<Scalars['string']>;
    readonly protocolState_geq: InputMaybe<Scalars['string']>;
    readonly protocolState_gt: InputMaybe<Scalars['string']>;
    readonly protocolState_in: InputMaybe<readonly Scalars['string'][]>;
    readonly protocolState_leq: InputMaybe<Scalars['string']>;
    readonly protocolState_like: InputMaybe<Scalars['string']>;
    readonly protocolState_lt: InputMaybe<Scalars['string']>;
    readonly protocolState_neq: InputMaybe<Scalars['string']>;
    readonly protocolState_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly protocolState_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceAsn: InputMaybe<Scalars['uint32']>;
    readonly sourceAsnName: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_geq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_gt: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAsnName_leq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_like: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_lt: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_neq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAsnName_notlike: InputMaybe<Scalars['string']>;
    readonly sourceAsn_geq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_gt: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceAsn_leq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_lt: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_neq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceCountry: InputMaybe<Scalars['string']>;
    readonly sourceCountry_geq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_gt: InputMaybe<Scalars['string']>;
    readonly sourceCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceCountry_leq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_like: InputMaybe<Scalars['string']>;
    readonly sourceCountry_lt: InputMaybe<Scalars['string']>;
    readonly sourceCountry_neq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceCountry_notlike: InputMaybe<Scalars['string']>;
    readonly sourceGeohash: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_geq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_gt: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceGeohash_leq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_like: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_lt: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_neq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly sourcePort: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly sourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpAcknowledgementNumber: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpAcknowledgementNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpChecksum: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpDataOffset: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpDataOffset_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpFlags: InputMaybe<Scalars['uint8']>;
    readonly tcpFlagsString: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_geq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_gt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_leq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_like: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_lt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_neq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_notlike: InputMaybe<Scalars['string']>;
    readonly tcpFlags_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_in: InputMaybe<Scalars['bytes']>;
    readonly tcpFlags_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_notin: InputMaybe<Scalars['bytes']>;
    readonly tcpMss: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpMss_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpOptions: InputMaybe<Scalars['string']>;
    readonly tcpOptions_geq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_gt: InputMaybe<Scalars['string']>;
    readonly tcpOptions_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpOptions_leq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_like: InputMaybe<Scalars['string']>;
    readonly tcpOptions_lt: InputMaybe<Scalars['string']>;
    readonly tcpOptions_neq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpOptions_notlike: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_geq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_gt: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpSackBlocks_leq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_like: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_lt: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_neq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpSackBlocks_notlike: InputMaybe<Scalars['string']>;
    readonly tcpSackPermitted: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_in: InputMaybe<Scalars['bytes']>;
    readonly tcpSackPermitted_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_notin: InputMaybe<Scalars['bytes']>;
    readonly tcpSequenceNumber: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpSequenceNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampEcr: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampEcr_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampValue: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampValue_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpUrgentPointer: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpUrgentPointer_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowScale: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowScale_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowSize: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowSize_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpChecksum: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpPayloadLength: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_geq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_gt: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpPayloadLength_leq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_lt: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_neq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly verdict: InputMaybe<Scalars['string']>;
    readonly verdict_geq: InputMaybe<Scalars['string']>;
    readonly verdict_gt: InputMaybe<Scalars['string']>;
    readonly verdict_in: InputMaybe<readonly Scalars['string'][]>;
    readonly verdict_leq: InputMaybe<Scalars['string']>;
    readonly verdict_like: InputMaybe<Scalars['string']>;
    readonly verdict_lt: InputMaybe<Scalars['string']>;
    readonly verdict_neq: InputMaybe<Scalars['string']>;
    readonly verdict_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly verdict_notlike: InputMaybe<Scalars['string']>;
}

type AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsOrderBy =
  /** avg(bitRateDay) ascending */
  | 'avg_bitRateDay_ASC'
  /** avg(bitRateDay) descending */
  | 'avg_bitRateDay_DESC'
  /** avg(bitRateFifteenMinutes) ascending */
  | 'avg_bitRateFifteenMinutes_ASC'
  /** avg(bitRateFifteenMinutes) descending */
  | 'avg_bitRateFifteenMinutes_DESC'
  /** avg(bitRateFiveMinutes) ascending */
  | 'avg_bitRateFiveMinutes_ASC'
  /** avg(bitRateFiveMinutes) descending */
  | 'avg_bitRateFiveMinutes_DESC'
  /** avg(bitRateHour) ascending */
  | 'avg_bitRateHour_ASC'
  /** avg(bitRateHour) descending */
  | 'avg_bitRateHour_DESC'
  /** avg(bitRateMinute) ascending */
  | 'avg_bitRateMinute_ASC'
  /** avg(bitRateMinute) descending */
  | 'avg_bitRateMinute_DESC'
  /** avg(bitRateTenSeconds) ascending */
  | 'avg_bitRateTenSeconds_ASC'
  /** avg(bitRateTenSeconds) descending */
  | 'avg_bitRateTenSeconds_DESC'
  /** avg(bitRate) ascending */
  | 'avg_bitRate_ASC'
  /** avg(bitRate) descending */
  | 'avg_bitRate_DESC'
  /** avg(packetRateDay) ascending */
  | 'avg_packetRateDay_ASC'
  /** avg(packetRateDay) descending */
  | 'avg_packetRateDay_DESC'
  /** avg(packetRateFifteenMinutes) ascending */
  | 'avg_packetRateFifteenMinutes_ASC'
  /** avg(packetRateFifteenMinutes) descending */
  | 'avg_packetRateFifteenMinutes_DESC'
  /** avg(packetRateFiveMinutes) ascending */
  | 'avg_packetRateFiveMinutes_ASC'
  /** avg(packetRateFiveMinutes) descending */
  | 'avg_packetRateFiveMinutes_DESC'
  /** avg(packetRateHour) ascending */
  | 'avg_packetRateHour_ASC'
  /** avg(packetRateHour) descending */
  | 'avg_packetRateHour_DESC'
  /** avg(packetRateMinute) ascending */
  | 'avg_packetRateMinute_ASC'
  /** avg(packetRateMinute) descending */
  | 'avg_packetRateMinute_DESC'
  /** avg(packetRateTenSeconds) ascending */
  | 'avg_packetRateTenSeconds_ASC'
  /** avg(packetRateTenSeconds) descending */
  | 'avg_packetRateTenSeconds_DESC'
  /** avg(packetRate) ascending */
  | 'avg_packetRate_ASC'
  /** avg(packetRate) descending */
  | 'avg_packetRate_DESC'
  /** coloCity ascending */
  | 'coloCity_ASC'
  /** coloCity descending */
  | 'coloCity_DESC'
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** coloCountry ascending */
  | 'coloCountry_ASC'
  /** coloCountry descending */
  | 'coloCountry_DESC'
  /** coloGeohash ascending */
  | 'coloGeohash_ASC'
  /** coloGeohash descending */
  | 'coloGeohash_DESC'
  /** coloName ascending */
  | 'coloName_ASC'
  /** coloName descending */
  | 'coloName_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetimeTenSeconds ascending */
  | 'datetimeTenSeconds_ASC'
  /** datetimeTenSeconds descending */
  | 'datetimeTenSeconds_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** destinationAsnName ascending */
  | 'destinationAsnName_ASC'
  /** destinationAsnName descending */
  | 'destinationAsnName_DESC'
  /** destinationAsn ascending */
  | 'destinationAsn_ASC'
  /** destinationAsn descending */
  | 'destinationAsn_DESC'
  /** destinationCountry ascending */
  | 'destinationCountry_ASC'
  /** destinationCountry descending */
  | 'destinationCountry_DESC'
  /** destinationGeohash ascending */
  | 'destinationGeohash_ASC'
  /** destinationGeohash descending */
  | 'destinationGeohash_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** direction ascending */
  | 'direction_ASC'
  /** direction descending */
  | 'direction_DESC'
  /** ethertype ascending */
  | 'ethertype_ASC'
  /** ethertype descending */
  | 'ethertype_DESC'
  /** greChecksum ascending */
  | 'greChecksum_ASC'
  /** greChecksum descending */
  | 'greChecksum_DESC'
  /** greEthertype ascending */
  | 'greEthertype_ASC'
  /** greEthertype descending */
  | 'greEthertype_DESC'
  /** greHeaderLength ascending */
  | 'greHeaderLength_ASC'
  /** greHeaderLength descending */
  | 'greHeaderLength_DESC'
  /** greKey ascending */
  | 'greKey_ASC'
  /** greKey descending */
  | 'greKey_DESC'
  /** greSequenceNumber ascending */
  | 'greSequenceNumber_ASC'
  /** greSequenceNumber descending */
  | 'greSequenceNumber_DESC'
  /** greVersion ascending */
  | 'greVersion_ASC'
  /** greVersion descending */
  | 'greVersion_DESC'
  /** icmpChecksum ascending */
  | 'icmpChecksum_ASC'
  /** icmpChecksum descending */
  | 'icmpChecksum_DESC'
  /** icmpCode ascending */
  | 'icmpCode_ASC'
  /** icmpCode descending */
  | 'icmpCode_DESC'
  /** icmpType ascending */
  | 'icmpType_ASC'
  /** icmpType descending */
  | 'icmpType_DESC'
  /** ipDestinationAddress ascending */
  | 'ipDestinationAddress_ASC'
  /** ipDestinationAddress descending */
  | 'ipDestinationAddress_DESC'
  /** ipDestinationSubnet ascending */
  | 'ipDestinationSubnet_ASC'
  /** ipDestinationSubnet descending */
  | 'ipDestinationSubnet_DESC'
  /** ipFragmentOffset ascending */
  | 'ipFragmentOffset_ASC'
  /** ipFragmentOffset descending */
  | 'ipFragmentOffset_DESC'
  /** ipHeaderLength ascending */
  | 'ipHeaderLength_ASC'
  /** ipHeaderLength descending */
  | 'ipHeaderLength_DESC'
  /** ipMoreFragments ascending */
  | 'ipMoreFragments_ASC'
  /** ipMoreFragments descending */
  | 'ipMoreFragments_DESC'
  /** ipProtocolName ascending */
  | 'ipProtocolName_ASC'
  /** ipProtocolName descending */
  | 'ipProtocolName_DESC'
  /** ipProtocol ascending */
  | 'ipProtocol_ASC'
  /** ipProtocol descending */
  | 'ipProtocol_DESC'
  /** ipSourceAddress ascending */
  | 'ipSourceAddress_ASC'
  /** ipSourceAddress descending */
  | 'ipSourceAddress_DESC'
  /** ipSourceSubnet ascending */
  | 'ipSourceSubnet_ASC'
  /** ipSourceSubnet descending */
  | 'ipSourceSubnet_DESC'
  /** ipTotalLengthBuckets ascending */
  | 'ipTotalLengthBuckets_ASC'
  /** ipTotalLengthBuckets descending */
  | 'ipTotalLengthBuckets_DESC'
  /** ipTotalLength ascending */
  | 'ipTotalLength_ASC'
  /** ipTotalLength descending */
  | 'ipTotalLength_DESC'
  /** ipTtlBuckets ascending */
  | 'ipTtlBuckets_ASC'
  /** ipTtlBuckets descending */
  | 'ipTtlBuckets_DESC'
  /** ipTtl ascending */
  | 'ipTtl_ASC'
  /** ipTtl descending */
  | 'ipTtl_DESC'
  /** ipv4Checksum ascending */
  | 'ipv4Checksum_ASC'
  /** ipv4Checksum descending */
  | 'ipv4Checksum_DESC'
  /** ipv4DontFragment ascending */
  | 'ipv4DontFragment_ASC'
  /** ipv4DontFragment descending */
  | 'ipv4DontFragment_DESC'
  /** ipv4Dscp ascending */
  | 'ipv4Dscp_ASC'
  /** ipv4Dscp descending */
  | 'ipv4Dscp_DESC'
  /** ipv4Ecn ascending */
  | 'ipv4Ecn_ASC'
  /** ipv4Ecn descending */
  | 'ipv4Ecn_DESC'
  /** ipv4Identification ascending */
  | 'ipv4Identification_ASC'
  /** ipv4Identification descending */
  | 'ipv4Identification_DESC'
  /** ipv4Options ascending */
  | 'ipv4Options_ASC'
  /** ipv4Options descending */
  | 'ipv4Options_DESC'
  /** ipv6Dscp ascending */
  | 'ipv6Dscp_ASC'
  /** ipv6Dscp descending */
  | 'ipv6Dscp_DESC'
  /** ipv6Ecn ascending */
  | 'ipv6Ecn_ASC'
  /** ipv6Ecn descending */
  | 'ipv6Ecn_DESC'
  /** ipv6ExtensionHeaders ascending */
  | 'ipv6ExtensionHeaders_ASC'
  /** ipv6ExtensionHeaders descending */
  | 'ipv6ExtensionHeaders_DESC'
  /** ipv6FlowLabel ascending */
  | 'ipv6FlowLabel_ASC'
  /** ipv6FlowLabel descending */
  | 'ipv6FlowLabel_DESC'
  /** ipv6Identification ascending */
  | 'ipv6Identification_ASC'
  /** ipv6Identification descending */
  | 'ipv6Identification_DESC'
  /** mitigationReason ascending */
  | 'mitigationReason_ASC'
  /** mitigationReason descending */
  | 'mitigationReason_DESC'
  /** mitigationScope ascending */
  | 'mitigationScope_ASC'
  /** mitigationScope descending */
  | 'mitigationScope_DESC'
  /** outcome ascending */
  | 'outcome_ASC'
  /** outcome descending */
  | 'outcome_DESC'
  /** protocolState ascending */
  | 'protocolState_ASC'
  /** protocolState descending */
  | 'protocolState_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** sourceAsnName ascending */
  | 'sourceAsnName_ASC'
  /** sourceAsnName descending */
  | 'sourceAsnName_DESC'
  /** sourceAsn ascending */
  | 'sourceAsn_ASC'
  /** sourceAsn descending */
  | 'sourceAsn_DESC'
  /** sourceCountry ascending */
  | 'sourceCountry_ASC'
  /** sourceCountry descending */
  | 'sourceCountry_DESC'
  /** sourceGeohash ascending */
  | 'sourceGeohash_ASC'
  /** sourceGeohash descending */
  | 'sourceGeohash_DESC'
  /** sourcePort ascending */
  | 'sourcePort_ASC'
  /** sourcePort descending */
  | 'sourcePort_DESC'
  /** sum(bits) ascending */
  | 'sum_bits_ASC'
  /** sum(bits) descending */
  | 'sum_bits_DESC'
  /** sum(packets) ascending */
  | 'sum_packets_ASC'
  /** sum(packets) descending */
  | 'sum_packets_DESC'
  /** system ascending */
  | 'system_ASC'
  /** system descending */
  | 'system_DESC'
  /** tcpAcknowledgementNumber ascending */
  | 'tcpAcknowledgementNumber_ASC'
  /** tcpAcknowledgementNumber descending */
  | 'tcpAcknowledgementNumber_DESC'
  /** tcpChecksum ascending */
  | 'tcpChecksum_ASC'
  /** tcpChecksum descending */
  | 'tcpChecksum_DESC'
  /** tcpDataOffset ascending */
  | 'tcpDataOffset_ASC'
  /** tcpDataOffset descending */
  | 'tcpDataOffset_DESC'
  /** tcpFlagsString ascending */
  | 'tcpFlagsString_ASC'
  /** tcpFlagsString descending */
  | 'tcpFlagsString_DESC'
  /** tcpFlags ascending */
  | 'tcpFlags_ASC'
  /** tcpFlags descending */
  | 'tcpFlags_DESC'
  /** tcpMss ascending */
  | 'tcpMss_ASC'
  /** tcpMss descending */
  | 'tcpMss_DESC'
  /** tcpOptions ascending */
  | 'tcpOptions_ASC'
  /** tcpOptions descending */
  | 'tcpOptions_DESC'
  /** tcpSackBlocks ascending */
  | 'tcpSackBlocks_ASC'
  /** tcpSackBlocks descending */
  | 'tcpSackBlocks_DESC'
  /** tcpSackPermitted ascending */
  | 'tcpSackPermitted_ASC'
  /** tcpSackPermitted descending */
  | 'tcpSackPermitted_DESC'
  /** tcpSequenceNumber ascending */
  | 'tcpSequenceNumber_ASC'
  /** tcpSequenceNumber descending */
  | 'tcpSequenceNumber_DESC'
  /** tcpTimestampEcr ascending */
  | 'tcpTimestampEcr_ASC'
  /** tcpTimestampEcr descending */
  | 'tcpTimestampEcr_DESC'
  /** tcpTimestampValue ascending */
  | 'tcpTimestampValue_ASC'
  /** tcpTimestampValue descending */
  | 'tcpTimestampValue_DESC'
  /** tcpUrgentPointer ascending */
  | 'tcpUrgentPointer_ASC'
  /** tcpUrgentPointer descending */
  | 'tcpUrgentPointer_DESC'
  /** tcpWindowScale ascending */
  | 'tcpWindowScale_ASC'
  /** tcpWindowScale descending */
  | 'tcpWindowScale_DESC'
  /** tcpWindowSize ascending */
  | 'tcpWindowSize_ASC'
  /** tcpWindowSize descending */
  | 'tcpWindowSize_DESC'
  /** udpChecksum ascending */
  | 'udpChecksum_ASC'
  /** udpChecksum descending */
  | 'udpChecksum_DESC'
  /** udpPayloadLength ascending */
  | 'udpPayloadLength_ASC'
  /** udpPayloadLength descending */
  | 'udpPayloadLength_DESC'
  /** verdict ascending */
  | 'verdict_ASC'
  /** verdict descending */
  | 'verdict_DESC';

interface AccountGatewayL4DownstreamSessionsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountGatewayL4DownstreamSessionsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountGatewayL4DownstreamSessionsAdaptiveGroupsFilter_InputObject[]>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly coloCountry: InputMaybe<Scalars['string']>;
    readonly coloCountry_geq: InputMaybe<Scalars['string']>;
    readonly coloCountry_gt: InputMaybe<Scalars['string']>;
    readonly coloCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_leq: InputMaybe<Scalars['string']>;
    readonly coloCountry_like: InputMaybe<Scalars['string']>;
    readonly coloCountry_lt: InputMaybe<Scalars['string']>;
    readonly coloCountry_neq: InputMaybe<Scalars['string']>;
    readonly coloCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly quicErrorCode: InputMaybe<Scalars['uint64']>;
    readonly quicErrorCode_geq: InputMaybe<Scalars['uint64']>;
    readonly quicErrorCode_gt: InputMaybe<Scalars['uint64']>;
    readonly quicErrorCode_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly quicErrorCode_leq: InputMaybe<Scalars['uint64']>;
    readonly quicErrorCode_lt: InputMaybe<Scalars['uint64']>;
    readonly quicErrorCode_neq: InputMaybe<Scalars['uint64']>;
    readonly quicErrorCode_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly rttUs: InputMaybe<Scalars['int64']>;
    readonly rttUs_geq: InputMaybe<Scalars['int64']>;
    readonly rttUs_gt: InputMaybe<Scalars['int64']>;
    readonly rttUs_in: InputMaybe<readonly Scalars['int64'][]>;
    readonly rttUs_leq: InputMaybe<Scalars['int64']>;
    readonly rttUs_lt: InputMaybe<Scalars['int64']>;
    readonly rttUs_neq: InputMaybe<Scalars['int64']>;
    readonly rttUs_notin: InputMaybe<readonly Scalars['int64'][]>;
    readonly sessionId: InputMaybe<Scalars['string']>;
    readonly sessionId_geq: InputMaybe<Scalars['string']>;
    readonly sessionId_gt: InputMaybe<Scalars['string']>;
    readonly sessionId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sessionId_leq: InputMaybe<Scalars['string']>;
    readonly sessionId_like: InputMaybe<Scalars['string']>;
    readonly sessionId_lt: InputMaybe<Scalars['string']>;
    readonly sessionId_neq: InputMaybe<Scalars['string']>;
    readonly sessionId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sessionId_notlike: InputMaybe<Scalars['string']>;
    readonly sourceIP: InputMaybe<Scalars['string']>;
    readonly sourceIP_geq: InputMaybe<Scalars['string']>;
    readonly sourceIP_gt: InputMaybe<Scalars['string']>;
    readonly sourceIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIP_leq: InputMaybe<Scalars['string']>;
    readonly sourceIP_like: InputMaybe<Scalars['string']>;
    readonly sourceIP_lt: InputMaybe<Scalars['string']>;
    readonly sourceIP_neq: InputMaybe<Scalars['string']>;
    readonly sourceIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIP_notlike: InputMaybe<Scalars['string']>;
    readonly tokenAuthStatus: InputMaybe<Scalars['string']>;
    readonly tokenAuthStatus_geq: InputMaybe<Scalars['string']>;
    readonly tokenAuthStatus_gt: InputMaybe<Scalars['string']>;
    readonly tokenAuthStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tokenAuthStatus_leq: InputMaybe<Scalars['string']>;
    readonly tokenAuthStatus_like: InputMaybe<Scalars['string']>;
    readonly tokenAuthStatus_lt: InputMaybe<Scalars['string']>;
    readonly tokenAuthStatus_neq: InputMaybe<Scalars['string']>;
    readonly tokenAuthStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tokenAuthStatus_notlike: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_geq: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_gt: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tokenSigningRegion_leq: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_like: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_lt: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_neq: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tokenSigningRegion_notlike: InputMaybe<Scalars['string']>;
    readonly transport: InputMaybe<Scalars['string']>;
    readonly transportHandshakeDurationUs: InputMaybe<Scalars['int64']>;
    readonly transportHandshakeDurationUs_geq: InputMaybe<Scalars['int64']>;
    readonly transportHandshakeDurationUs_gt: InputMaybe<Scalars['int64']>;
    readonly transportHandshakeDurationUs_in: InputMaybe<readonly Scalars['int64'][]>;
    readonly transportHandshakeDurationUs_leq: InputMaybe<Scalars['int64']>;
    readonly transportHandshakeDurationUs_lt: InputMaybe<Scalars['int64']>;
    readonly transportHandshakeDurationUs_neq: InputMaybe<Scalars['int64']>;
    readonly transportHandshakeDurationUs_notin: InputMaybe<readonly Scalars['int64'][]>;
    readonly transportStatus: InputMaybe<Scalars['string']>;
    readonly transportStatus_geq: InputMaybe<Scalars['string']>;
    readonly transportStatus_gt: InputMaybe<Scalars['string']>;
    readonly transportStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly transportStatus_leq: InputMaybe<Scalars['string']>;
    readonly transportStatus_like: InputMaybe<Scalars['string']>;
    readonly transportStatus_lt: InputMaybe<Scalars['string']>;
    readonly transportStatus_neq: InputMaybe<Scalars['string']>;
    readonly transportStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly transportStatus_notlike: InputMaybe<Scalars['string']>;
    readonly transport_geq: InputMaybe<Scalars['string']>;
    readonly transport_gt: InputMaybe<Scalars['string']>;
    readonly transport_in: InputMaybe<readonly Scalars['string'][]>;
    readonly transport_leq: InputMaybe<Scalars['string']>;
    readonly transport_like: InputMaybe<Scalars['string']>;
    readonly transport_lt: InputMaybe<Scalars['string']>;
    readonly transport_neq: InputMaybe<Scalars['string']>;
    readonly transport_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly transport_notlike: InputMaybe<Scalars['string']>;
}

type AccountGatewayL4DownstreamSessionsAdaptiveGroupsOrderBy =
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** coloCountry ascending */
  | 'coloCountry_ASC'
  /** coloCountry descending */
  | 'coloCountry_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** quantiles(tokenAuthDurationUsP50) ascending */
  | 'quantiles_tokenAuthDurationUsP50_ASC'
  /** quantiles(tokenAuthDurationUsP50) descending */
  | 'quantiles_tokenAuthDurationUsP50_DESC'
  /** quantiles(transportHandshakeDurationUsP50) ascending */
  | 'quantiles_transportHandshakeDurationUsP50_ASC'
  /** quantiles(transportHandshakeDurationUsP50) descending */
  | 'quantiles_transportHandshakeDurationUsP50_DESC'
  /** quicErrorCode ascending */
  | 'quicErrorCode_ASC'
  /** quicErrorCode descending */
  | 'quicErrorCode_DESC'
  /** rttUs ascending */
  | 'rttUs_ASC'
  /** rttUs descending */
  | 'rttUs_DESC'
  /** sessionId ascending */
  | 'sessionId_ASC'
  /** sessionId descending */
  | 'sessionId_DESC'
  /** sourceIP ascending */
  | 'sourceIP_ASC'
  /** sourceIP descending */
  | 'sourceIP_DESC'
  /** sum(bytesRecvd) ascending */
  | 'sum_bytesRecvd_ASC'
  /** sum(bytesRecvd) descending */
  | 'sum_bytesRecvd_DESC'
  /** sum(bytesSent) ascending */
  | 'sum_bytesSent_ASC'
  /** sum(bytesSent) descending */
  | 'sum_bytesSent_DESC'
  /** sum(clientBytesRetransmitted) ascending */
  | 'sum_clientBytesRetransmitted_ASC'
  /** sum(clientBytesRetransmitted) descending */
  | 'sum_clientBytesRetransmitted_DESC'
  /** sum(packetsRecvd) ascending */
  | 'sum_packetsRecvd_ASC'
  /** sum(packetsRecvd) descending */
  | 'sum_packetsRecvd_DESC'
  /** sum(packetsSent) ascending */
  | 'sum_packetsSent_ASC'
  /** sum(packetsSent) descending */
  | 'sum_packetsSent_DESC'
  /** sum(tokenAuthDurationUs) ascending */
  | 'sum_tokenAuthDurationUs_ASC'
  /** sum(tokenAuthDurationUs) descending */
  | 'sum_tokenAuthDurationUs_DESC'
  /** tokenAuthStatus ascending */
  | 'tokenAuthStatus_ASC'
  /** tokenAuthStatus descending */
  | 'tokenAuthStatus_DESC'
  /** tokenSigningRegion ascending */
  | 'tokenSigningRegion_ASC'
  /** tokenSigningRegion descending */
  | 'tokenSigningRegion_DESC'
  /** transportHandshakeDurationUs ascending */
  | 'transportHandshakeDurationUs_ASC'
  /** transportHandshakeDurationUs descending */
  | 'transportHandshakeDurationUs_DESC'
  /** transportStatus ascending */
  | 'transportStatus_ASC'
  /** transportStatus descending */
  | 'transportStatus_DESC'
  /** transport ascending */
  | 'transport_ASC'
  /** transport descending */
  | 'transport_DESC';

interface AccountGatewayL4SessionsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountGatewayL4SessionsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountGatewayL4SessionsAdaptiveGroupsFilter_InputObject[]>;
    readonly action: InputMaybe<Scalars['string']>;
    readonly action_geq: InputMaybe<Scalars['string']>;
    readonly action_gt: InputMaybe<Scalars['string']>;
    readonly action_in: InputMaybe<readonly Scalars['string'][]>;
    readonly action_leq: InputMaybe<Scalars['string']>;
    readonly action_like: InputMaybe<Scalars['string']>;
    readonly action_lt: InputMaybe<Scalars['string']>;
    readonly action_neq: InputMaybe<Scalars['string']>;
    readonly action_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly action_notlike: InputMaybe<Scalars['string']>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationIp: InputMaybe<Scalars['string']>;
    readonly destinationIp_geq: InputMaybe<Scalars['string']>;
    readonly destinationIp_gt: InputMaybe<Scalars['string']>;
    readonly destinationIp_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIp_leq: InputMaybe<Scalars['string']>;
    readonly destinationIp_like: InputMaybe<Scalars['string']>;
    readonly destinationIp_lt: InputMaybe<Scalars['string']>;
    readonly destinationIp_neq: InputMaybe<Scalars['string']>;
    readonly destinationIp_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIp_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly deviceId: InputMaybe<Scalars['string']>;
    readonly deviceId_geq: InputMaybe<Scalars['string']>;
    readonly deviceId_gt: InputMaybe<Scalars['string']>;
    readonly deviceId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceId_leq: InputMaybe<Scalars['string']>;
    readonly deviceId_like: InputMaybe<Scalars['string']>;
    readonly deviceId_lt: InputMaybe<Scalars['string']>;
    readonly deviceId_neq: InputMaybe<Scalars['string']>;
    readonly deviceId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceId_notlike: InputMaybe<Scalars['string']>;
    readonly email: InputMaybe<Scalars['string']>;
    readonly email_geq: InputMaybe<Scalars['string']>;
    readonly email_gt: InputMaybe<Scalars['string']>;
    readonly email_in: InputMaybe<readonly Scalars['string'][]>;
    readonly email_leq: InputMaybe<Scalars['string']>;
    readonly email_like: InputMaybe<Scalars['string']>;
    readonly email_lt: InputMaybe<Scalars['string']>;
    readonly email_neq: InputMaybe<Scalars['string']>;
    readonly email_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly email_notlike: InputMaybe<Scalars['string']>;
    readonly sni: InputMaybe<Scalars['string']>;
    readonly sni_geq: InputMaybe<Scalars['string']>;
    readonly sni_gt: InputMaybe<Scalars['string']>;
    readonly sni_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sni_leq: InputMaybe<Scalars['string']>;
    readonly sni_like: InputMaybe<Scalars['string']>;
    readonly sni_lt: InputMaybe<Scalars['string']>;
    readonly sni_neq: InputMaybe<Scalars['string']>;
    readonly sni_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sni_notlike: InputMaybe<Scalars['string']>;
    readonly sourceIp: InputMaybe<Scalars['string']>;
    readonly sourceIp_geq: InputMaybe<Scalars['string']>;
    readonly sourceIp_gt: InputMaybe<Scalars['string']>;
    readonly sourceIp_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIp_leq: InputMaybe<Scalars['string']>;
    readonly sourceIp_like: InputMaybe<Scalars['string']>;
    readonly sourceIp_lt: InputMaybe<Scalars['string']>;
    readonly sourceIp_neq: InputMaybe<Scalars['string']>;
    readonly sourceIp_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIp_notlike: InputMaybe<Scalars['string']>;
    readonly sourcePort: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly sourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly transport: InputMaybe<Scalars['uint16']>;
    readonly transport_geq: InputMaybe<Scalars['uint16']>;
    readonly transport_gt: InputMaybe<Scalars['uint16']>;
    readonly transport_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly transport_leq: InputMaybe<Scalars['uint16']>;
    readonly transport_lt: InputMaybe<Scalars['uint16']>;
    readonly transport_neq: InputMaybe<Scalars['uint16']>;
    readonly transport_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly userId: InputMaybe<Scalars['string']>;
    readonly userId_geq: InputMaybe<Scalars['string']>;
    readonly userId_gt: InputMaybe<Scalars['string']>;
    readonly userId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userId_leq: InputMaybe<Scalars['string']>;
    readonly userId_like: InputMaybe<Scalars['string']>;
    readonly userId_lt: InputMaybe<Scalars['string']>;
    readonly userId_neq: InputMaybe<Scalars['string']>;
    readonly userId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userId_notlike: InputMaybe<Scalars['string']>;
}

type AccountGatewayL4SessionsAdaptiveGroupsOrderBy =
  /** action ascending */
  | 'action_ASC'
  /** action descending */
  | 'action_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** destinationIp ascending */
  | 'destinationIp_ASC'
  /** destinationIp descending */
  | 'destinationIp_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** deviceId ascending */
  | 'deviceId_ASC'
  /** deviceId descending */
  | 'deviceId_DESC'
  /** email ascending */
  | 'email_ASC'
  /** email descending */
  | 'email_DESC'
  /** sni ascending */
  | 'sni_ASC'
  /** sni descending */
  | 'sni_DESC'
  /** sourceIp ascending */
  | 'sourceIp_ASC'
  /** sourceIp descending */
  | 'sourceIp_DESC'
  /** sourcePort ascending */
  | 'sourcePort_ASC'
  /** sourcePort descending */
  | 'sourcePort_DESC'
  /** transport ascending */
  | 'transport_ASC'
  /** transport descending */
  | 'transport_DESC'
  /** userId ascending */
  | 'userId_ASC'
  /** userId descending */
  | 'userId_DESC';

interface AccountGatewayL4UpstreamSessionsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountGatewayL4UpstreamSessionsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountGatewayL4UpstreamSessionsAdaptiveGroupsFilter_InputObject[]>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly coloCountry: InputMaybe<Scalars['string']>;
    readonly coloCountry_geq: InputMaybe<Scalars['string']>;
    readonly coloCountry_gt: InputMaybe<Scalars['string']>;
    readonly coloCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_leq: InputMaybe<Scalars['string']>;
    readonly coloCountry_like: InputMaybe<Scalars['string']>;
    readonly coloCountry_lt: InputMaybe<Scalars['string']>;
    readonly coloCountry_neq: InputMaybe<Scalars['string']>;
    readonly coloCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationIP: InputMaybe<Scalars['string']>;
    readonly destinationIP_geq: InputMaybe<Scalars['string']>;
    readonly destinationIP_gt: InputMaybe<Scalars['string']>;
    readonly destinationIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIP_leq: InputMaybe<Scalars['string']>;
    readonly destinationIP_like: InputMaybe<Scalars['string']>;
    readonly destinationIP_lt: InputMaybe<Scalars['string']>;
    readonly destinationIP_neq: InputMaybe<Scalars['string']>;
    readonly destinationIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIP_notlike: InputMaybe<Scalars['string']>;
    readonly domainName: InputMaybe<Scalars['string']>;
    readonly domainName_geq: InputMaybe<Scalars['string']>;
    readonly domainName_gt: InputMaybe<Scalars['string']>;
    readonly domainName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly domainName_leq: InputMaybe<Scalars['string']>;
    readonly domainName_like: InputMaybe<Scalars['string']>;
    readonly domainName_lt: InputMaybe<Scalars['string']>;
    readonly domainName_neq: InputMaybe<Scalars['string']>;
    readonly domainName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly domainName_notlike: InputMaybe<Scalars['string']>;
    readonly downstreamSessionId: InputMaybe<Scalars['string']>;
    readonly downstreamSessionId_geq: InputMaybe<Scalars['string']>;
    readonly downstreamSessionId_gt: InputMaybe<Scalars['string']>;
    readonly downstreamSessionId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly downstreamSessionId_leq: InputMaybe<Scalars['string']>;
    readonly downstreamSessionId_like: InputMaybe<Scalars['string']>;
    readonly downstreamSessionId_lt: InputMaybe<Scalars['string']>;
    readonly downstreamSessionId_neq: InputMaybe<Scalars['string']>;
    readonly downstreamSessionId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly downstreamSessionId_notlike: InputMaybe<Scalars['string']>;
    readonly httpConnectReqStatus: InputMaybe<Scalars['string']>;
    readonly httpConnectReqStatus_geq: InputMaybe<Scalars['string']>;
    readonly httpConnectReqStatus_gt: InputMaybe<Scalars['string']>;
    readonly httpConnectReqStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly httpConnectReqStatus_leq: InputMaybe<Scalars['string']>;
    readonly httpConnectReqStatus_like: InputMaybe<Scalars['string']>;
    readonly httpConnectReqStatus_lt: InputMaybe<Scalars['string']>;
    readonly httpConnectReqStatus_neq: InputMaybe<Scalars['string']>;
    readonly httpConnectReqStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly httpConnectReqStatus_notlike: InputMaybe<Scalars['string']>;
    readonly quicErrorCode: InputMaybe<Scalars['uint64']>;
    readonly quicErrorCode_geq: InputMaybe<Scalars['uint64']>;
    readonly quicErrorCode_gt: InputMaybe<Scalars['uint64']>;
    readonly quicErrorCode_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly quicErrorCode_leq: InputMaybe<Scalars['uint64']>;
    readonly quicErrorCode_lt: InputMaybe<Scalars['uint64']>;
    readonly quicErrorCode_neq: InputMaybe<Scalars['uint64']>;
    readonly quicErrorCode_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly rttUs: InputMaybe<Scalars['int64']>;
    readonly rttUs_geq: InputMaybe<Scalars['int64']>;
    readonly rttUs_gt: InputMaybe<Scalars['int64']>;
    readonly rttUs_in: InputMaybe<readonly Scalars['int64'][]>;
    readonly rttUs_leq: InputMaybe<Scalars['int64']>;
    readonly rttUs_lt: InputMaybe<Scalars['int64']>;
    readonly rttUs_neq: InputMaybe<Scalars['int64']>;
    readonly rttUs_notin: InputMaybe<readonly Scalars['int64'][]>;
    readonly tokenSigningRegion: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_geq: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_gt: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tokenSigningRegion_leq: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_like: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_lt: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_neq: InputMaybe<Scalars['string']>;
    readonly tokenSigningRegion_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tokenSigningRegion_notlike: InputMaybe<Scalars['string']>;
    readonly totalTunnelSetupDurationUs: InputMaybe<Scalars['int64']>;
    readonly totalTunnelSetupDurationUs_geq: InputMaybe<Scalars['int64']>;
    readonly totalTunnelSetupDurationUs_gt: InputMaybe<Scalars['int64']>;
    readonly totalTunnelSetupDurationUs_in: InputMaybe<readonly Scalars['int64'][]>;
    readonly totalTunnelSetupDurationUs_leq: InputMaybe<Scalars['int64']>;
    readonly totalTunnelSetupDurationUs_lt: InputMaybe<Scalars['int64']>;
    readonly totalTunnelSetupDurationUs_neq: InputMaybe<Scalars['int64']>;
    readonly totalTunnelSetupDurationUs_notin: InputMaybe<readonly Scalars['int64'][]>;
    readonly transport: InputMaybe<Scalars['string']>;
    readonly transportStatus: InputMaybe<Scalars['string']>;
    readonly transportStatus_geq: InputMaybe<Scalars['string']>;
    readonly transportStatus_gt: InputMaybe<Scalars['string']>;
    readonly transportStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly transportStatus_leq: InputMaybe<Scalars['string']>;
    readonly transportStatus_like: InputMaybe<Scalars['string']>;
    readonly transportStatus_lt: InputMaybe<Scalars['string']>;
    readonly transportStatus_neq: InputMaybe<Scalars['string']>;
    readonly transportStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly transportStatus_notlike: InputMaybe<Scalars['string']>;
    readonly transport_geq: InputMaybe<Scalars['string']>;
    readonly transport_gt: InputMaybe<Scalars['string']>;
    readonly transport_in: InputMaybe<readonly Scalars['string'][]>;
    readonly transport_leq: InputMaybe<Scalars['string']>;
    readonly transport_like: InputMaybe<Scalars['string']>;
    readonly transport_lt: InputMaybe<Scalars['string']>;
    readonly transport_neq: InputMaybe<Scalars['string']>;
    readonly transport_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly transport_notlike: InputMaybe<Scalars['string']>;
}

type AccountGatewayL4UpstreamSessionsAdaptiveGroupsOrderBy =
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** coloCountry ascending */
  | 'coloCountry_ASC'
  /** coloCountry descending */
  | 'coloCountry_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** destinationIP ascending */
  | 'destinationIP_ASC'
  /** destinationIP descending */
  | 'destinationIP_DESC'
  /** domainName ascending */
  | 'domainName_ASC'
  /** domainName descending */
  | 'domainName_DESC'
  /** downstreamSessionId ascending */
  | 'downstreamSessionId_ASC'
  /** downstreamSessionId descending */
  | 'downstreamSessionId_DESC'
  /** httpConnectReqStatus ascending */
  | 'httpConnectReqStatus_ASC'
  /** httpConnectReqStatus descending */
  | 'httpConnectReqStatus_DESC'
  /** quantiles(connectReqHandlingDurationUsP50) ascending */
  | 'quantiles_connectReqHandlingDurationUsP50_ASC'
  /** quantiles(connectReqHandlingDurationUsP50) descending */
  | 'quantiles_connectReqHandlingDurationUsP50_DESC'
  /** quantiles(totalTunnelSetupDurationUsP50) ascending */
  | 'quantiles_totalTunnelSetupDurationUsP50_ASC'
  /** quantiles(totalTunnelSetupDurationUsP50) descending */
  | 'quantiles_totalTunnelSetupDurationUsP50_DESC'
  /** quantiles(tunnelSetupDurationUsP50) ascending */
  | 'quantiles_tunnelSetupDurationUsP50_ASC'
  /** quantiles(tunnelSetupDurationUsP50) descending */
  | 'quantiles_tunnelSetupDurationUsP50_DESC'
  /** quicErrorCode ascending */
  | 'quicErrorCode_ASC'
  /** quicErrorCode descending */
  | 'quicErrorCode_DESC'
  /** rttUs ascending */
  | 'rttUs_ASC'
  /** rttUs descending */
  | 'rttUs_DESC'
  /** sum(bytesRecvd) ascending */
  | 'sum_bytesRecvd_ASC'
  /** sum(bytesRecvd) descending */
  | 'sum_bytesRecvd_DESC'
  /** sum(bytesSent) ascending */
  | 'sum_bytesSent_ASC'
  /** sum(bytesSent) descending */
  | 'sum_bytesSent_DESC'
  /** sum(connectReqHandlingDurationUs) ascending */
  | 'sum_connectReqHandlingDurationUs_ASC'
  /** sum(connectReqHandlingDurationUs) descending */
  | 'sum_connectReqHandlingDurationUs_DESC'
  /** sum(originBytesRetransmitted) ascending */
  | 'sum_originBytesRetransmitted_ASC'
  /** sum(originBytesRetransmitted) descending */
  | 'sum_originBytesRetransmitted_DESC'
  /** sum(packetsRecvd) ascending */
  | 'sum_packetsRecvd_ASC'
  /** sum(packetsRecvd) descending */
  | 'sum_packetsRecvd_DESC'
  /** sum(packetsSent) ascending */
  | 'sum_packetsSent_ASC'
  /** sum(packetsSent) descending */
  | 'sum_packetsSent_DESC'
  /** sum(totalTunnelSetupDurationUs) ascending */
  | 'sum_totalTunnelSetupDurationUs_ASC'
  /** sum(totalTunnelSetupDurationUs) descending */
  | 'sum_totalTunnelSetupDurationUs_DESC'
  /** sum(tunnelSetupDurationUs) ascending */
  | 'sum_tunnelSetupDurationUs_ASC'
  /** sum(tunnelSetupDurationUs) descending */
  | 'sum_tunnelSetupDurationUs_DESC'
  /** tokenSigningRegion ascending */
  | 'tokenSigningRegion_ASC'
  /** tokenSigningRegion descending */
  | 'tokenSigningRegion_DESC'
  /** totalTunnelSetupDurationUs ascending */
  | 'totalTunnelSetupDurationUs_ASC'
  /** totalTunnelSetupDurationUs descending */
  | 'totalTunnelSetupDurationUs_DESC'
  /** transportStatus ascending */
  | 'transportStatus_ASC'
  /** transportStatus descending */
  | 'transportStatus_DESC'
  /** transport ascending */
  | 'transport_ASC'
  /** transport descending */
  | 'transport_DESC';

interface AccountGatewayL7RequestsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountGatewayL7RequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountGatewayL7RequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly action: InputMaybe<Scalars['string']>;
    readonly action_geq: InputMaybe<Scalars['string']>;
    readonly action_gt: InputMaybe<Scalars['string']>;
    readonly action_in: InputMaybe<readonly Scalars['string'][]>;
    readonly action_leq: InputMaybe<Scalars['string']>;
    readonly action_like: InputMaybe<Scalars['string']>;
    readonly action_lt: InputMaybe<Scalars['string']>;
    readonly action_neq: InputMaybe<Scalars['string']>;
    readonly action_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly action_notlike: InputMaybe<Scalars['string']>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly deviceId: InputMaybe<Scalars['string']>;
    readonly deviceId_geq: InputMaybe<Scalars['string']>;
    readonly deviceId_gt: InputMaybe<Scalars['string']>;
    readonly deviceId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceId_leq: InputMaybe<Scalars['string']>;
    readonly deviceId_like: InputMaybe<Scalars['string']>;
    readonly deviceId_lt: InputMaybe<Scalars['string']>;
    readonly deviceId_neq: InputMaybe<Scalars['string']>;
    readonly deviceId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceId_notlike: InputMaybe<Scalars['string']>;
    readonly email: InputMaybe<Scalars['string']>;
    readonly email_geq: InputMaybe<Scalars['string']>;
    readonly email_gt: InputMaybe<Scalars['string']>;
    readonly email_in: InputMaybe<readonly Scalars['string'][]>;
    readonly email_leq: InputMaybe<Scalars['string']>;
    readonly email_like: InputMaybe<Scalars['string']>;
    readonly email_lt: InputMaybe<Scalars['string']>;
    readonly email_neq: InputMaybe<Scalars['string']>;
    readonly email_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly email_notlike: InputMaybe<Scalars['string']>;
    readonly httpHost: InputMaybe<Scalars['string']>;
    readonly httpHost_geq: InputMaybe<Scalars['string']>;
    readonly httpHost_gt: InputMaybe<Scalars['string']>;
    readonly httpHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly httpHost_leq: InputMaybe<Scalars['string']>;
    readonly httpHost_like: InputMaybe<Scalars['string']>;
    readonly httpHost_lt: InputMaybe<Scalars['string']>;
    readonly httpHost_neq: InputMaybe<Scalars['string']>;
    readonly httpHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly httpHost_notlike: InputMaybe<Scalars['string']>;
    readonly isIsolated: InputMaybe<Scalars['uint16']>;
    readonly isIsolated_geq: InputMaybe<Scalars['uint16']>;
    readonly isIsolated_gt: InputMaybe<Scalars['uint16']>;
    readonly isIsolated_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly isIsolated_leq: InputMaybe<Scalars['uint16']>;
    readonly isIsolated_lt: InputMaybe<Scalars['uint16']>;
    readonly isIsolated_neq: InputMaybe<Scalars['uint16']>;
    readonly isIsolated_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly userId: InputMaybe<Scalars['string']>;
    readonly userId_geq: InputMaybe<Scalars['string']>;
    readonly userId_gt: InputMaybe<Scalars['string']>;
    readonly userId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userId_leq: InputMaybe<Scalars['string']>;
    readonly userId_like: InputMaybe<Scalars['string']>;
    readonly userId_lt: InputMaybe<Scalars['string']>;
    readonly userId_neq: InputMaybe<Scalars['string']>;
    readonly userId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userId_notlike: InputMaybe<Scalars['string']>;
}

type AccountGatewayL7RequestsAdaptiveGroupsOrderBy =
  /** action ascending */
  | 'action_ASC'
  /** action descending */
  | 'action_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** deviceId ascending */
  | 'deviceId_ASC'
  /** deviceId descending */
  | 'deviceId_DESC'
  /** email ascending */
  | 'email_ASC'
  /** email descending */
  | 'email_DESC'
  /** httpHost ascending */
  | 'httpHost_ASC'
  /** httpHost descending */
  | 'httpHost_DESC'
  /** isIsolated ascending */
  | 'isIsolated_ASC'
  /** isIsolated descending */
  | 'isIsolated_DESC'
  /** userId ascending */
  | 'userId_ASC'
  /** userId descending */
  | 'userId_DESC';

interface AccountGatewayResolverByCategoryAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountGatewayResolverByCategoryAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountGatewayResolverByCategoryAdaptiveGroupsFilter_InputObject[]>;
    readonly categoryId: InputMaybe<Scalars['uint16']>;
    readonly categoryId_geq: InputMaybe<Scalars['uint16']>;
    readonly categoryId_gt: InputMaybe<Scalars['uint16']>;
    readonly categoryId_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly categoryId_leq: InputMaybe<Scalars['uint16']>;
    readonly categoryId_lt: InputMaybe<Scalars['uint16']>;
    readonly categoryId_neq: InputMaybe<Scalars['uint16']>;
    readonly categoryId_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly locationId: InputMaybe<Scalars['string']>;
    readonly locationId_geq: InputMaybe<Scalars['string']>;
    readonly locationId_gt: InputMaybe<Scalars['string']>;
    readonly locationId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly locationId_leq: InputMaybe<Scalars['string']>;
    readonly locationId_like: InputMaybe<Scalars['string']>;
    readonly locationId_lt: InputMaybe<Scalars['string']>;
    readonly locationId_neq: InputMaybe<Scalars['string']>;
    readonly locationId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly locationId_notlike: InputMaybe<Scalars['string']>;
    readonly resolverDecision: InputMaybe<Scalars['uint16']>;
    readonly resolverDecision_geq: InputMaybe<Scalars['uint16']>;
    readonly resolverDecision_gt: InputMaybe<Scalars['uint16']>;
    readonly resolverDecision_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly resolverDecision_leq: InputMaybe<Scalars['uint16']>;
    readonly resolverDecision_lt: InputMaybe<Scalars['uint16']>;
    readonly resolverDecision_neq: InputMaybe<Scalars['uint16']>;
    readonly resolverDecision_notin: InputMaybe<readonly Scalars['uint16'][]>;
}

type AccountGatewayResolverByCategoryAdaptiveGroupsOrderBy =
  /** categoryId ascending */
  | 'categoryId_ASC'
  /** categoryId descending */
  | 'categoryId_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** locationId ascending */
  | 'locationId_ASC'
  /** locationId descending */
  | 'locationId_DESC'
  /** resolverDecision ascending */
  | 'resolverDecision_ASC'
  /** resolverDecision descending */
  | 'resolverDecision_DESC';

interface AccountGatewayResolverQueriesAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountGatewayResolverQueriesAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountGatewayResolverQueriesAdaptiveGroupsFilter_InputObject[]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly locationId: InputMaybe<Scalars['string']>;
    readonly locationId_geq: InputMaybe<Scalars['string']>;
    readonly locationId_gt: InputMaybe<Scalars['string']>;
    readonly locationId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly locationId_leq: InputMaybe<Scalars['string']>;
    readonly locationId_like: InputMaybe<Scalars['string']>;
    readonly locationId_lt: InputMaybe<Scalars['string']>;
    readonly locationId_neq: InputMaybe<Scalars['string']>;
    readonly locationId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly locationId_notlike: InputMaybe<Scalars['string']>;
    readonly queryNameReversed: InputMaybe<Scalars['string']>;
    readonly queryNameReversed_geq: InputMaybe<Scalars['string']>;
    readonly queryNameReversed_gt: InputMaybe<Scalars['string']>;
    readonly queryNameReversed_in: InputMaybe<readonly Scalars['string'][]>;
    readonly queryNameReversed_leq: InputMaybe<Scalars['string']>;
    readonly queryNameReversed_like: InputMaybe<Scalars['string']>;
    readonly queryNameReversed_lt: InputMaybe<Scalars['string']>;
    readonly queryNameReversed_neq: InputMaybe<Scalars['string']>;
    readonly queryNameReversed_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly queryNameReversed_notlike: InputMaybe<Scalars['string']>;
    readonly resolverDecision: InputMaybe<Scalars['uint16']>;
    readonly resolverDecision_geq: InputMaybe<Scalars['uint16']>;
    readonly resolverDecision_gt: InputMaybe<Scalars['uint16']>;
    readonly resolverDecision_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly resolverDecision_leq: InputMaybe<Scalars['uint16']>;
    readonly resolverDecision_lt: InputMaybe<Scalars['uint16']>;
    readonly resolverDecision_neq: InputMaybe<Scalars['uint16']>;
    readonly resolverDecision_notin: InputMaybe<readonly Scalars['uint16'][]>;
}

type AccountGatewayResolverQueriesAdaptiveGroupsOrderBy =
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** locationId ascending */
  | 'locationId_ASC'
  /** locationId descending */
  | 'locationId_DESC'
  /** queryNameReversed ascending */
  | 'queryNameReversed_ASC'
  /** queryNameReversed descending */
  | 'queryNameReversed_DESC'
  /** resolverDecision ascending */
  | 'resolverDecision_ASC'
  /** resolverDecision descending */
  | 'resolverDecision_DESC';

interface AccountHttpRequests1dGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountHttpRequests1dGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountHttpRequests1dGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
}

type AccountHttpRequests1dGroupsOrderBy =
  /** avg(bytes) ascending */
  | 'avg_bytes_ASC'
  /** avg(bytes) descending */
  | 'avg_bytes_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** sum(bytes) ascending */
  | 'sum_bytes_ASC'
  /** sum(bytes) descending */
  | 'sum_bytes_DESC'
  /** sum(cachedBytes) ascending */
  | 'sum_cachedBytes_ASC'
  /** sum(cachedBytes) descending */
  | 'sum_cachedBytes_DESC'
  /** sum(cachedRequests) ascending */
  | 'sum_cachedRequests_ASC'
  /** sum(cachedRequests) descending */
  | 'sum_cachedRequests_DESC'
  /** sum(encryptedBytes) ascending */
  | 'sum_encryptedBytes_ASC'
  /** sum(encryptedBytes) descending */
  | 'sum_encryptedBytes_DESC'
  /** sum(encryptedRequests) ascending */
  | 'sum_encryptedRequests_ASC'
  /** sum(encryptedRequests) descending */
  | 'sum_encryptedRequests_DESC'
  /** sum(pageViews) ascending */
  | 'sum_pageViews_ASC'
  /** sum(pageViews) descending */
  | 'sum_pageViews_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(threats) ascending */
  | 'sum_threats_ASC'
  /** sum(threats) descending */
  | 'sum_threats_DESC'
  /** uniq(uniques) ascending */
  | 'uniq_uniques_ASC'
  /** uniq(uniques) descending */
  | 'uniq_uniques_DESC';

interface AccountHttpRequests1hGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountHttpRequests1hGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountHttpRequests1hGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
}

type AccountHttpRequests1hGroupsOrderBy =
  /** avg(bytes) ascending */
  | 'avg_bytes_ASC'
  /** avg(bytes) descending */
  | 'avg_bytes_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** sum(bytes) ascending */
  | 'sum_bytes_ASC'
  /** sum(bytes) descending */
  | 'sum_bytes_DESC'
  /** sum(cachedBytes) ascending */
  | 'sum_cachedBytes_ASC'
  /** sum(cachedBytes) descending */
  | 'sum_cachedBytes_DESC'
  /** sum(cachedRequests) ascending */
  | 'sum_cachedRequests_ASC'
  /** sum(cachedRequests) descending */
  | 'sum_cachedRequests_DESC'
  /** sum(encryptedBytes) ascending */
  | 'sum_encryptedBytes_ASC'
  /** sum(encryptedBytes) descending */
  | 'sum_encryptedBytes_DESC'
  /** sum(encryptedRequests) ascending */
  | 'sum_encryptedRequests_ASC'
  /** sum(encryptedRequests) descending */
  | 'sum_encryptedRequests_DESC'
  /** sum(pageViews) ascending */
  | 'sum_pageViews_ASC'
  /** sum(pageViews) descending */
  | 'sum_pageViews_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(threats) ascending */
  | 'sum_threats_ASC'
  /** sum(threats) descending */
  | 'sum_threats_DESC'
  /** uniq(uniques) ascending */
  | 'uniq_uniques_ASC'
  /** uniq(uniques) descending */
  | 'uniq_uniques_DESC';

interface AccountHttpRequests1mGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountHttpRequests1mGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountHttpRequests1mGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeDay: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeDay_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
}

type AccountHttpRequests1mGroupsOrderBy =
  /** avg(bytes) ascending */
  | 'avg_bytes_ASC'
  /** avg(bytes) descending */
  | 'avg_bytes_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeDay ascending */
  | 'datetimeDay_ASC'
  /** datetimeDay descending */
  | 'datetimeDay_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** sum(bytes) ascending */
  | 'sum_bytes_ASC'
  /** sum(bytes) descending */
  | 'sum_bytes_DESC'
  /** sum(cachedBytes) ascending */
  | 'sum_cachedBytes_ASC'
  /** sum(cachedBytes) descending */
  | 'sum_cachedBytes_DESC'
  /** sum(cachedRequests) ascending */
  | 'sum_cachedRequests_ASC'
  /** sum(cachedRequests) descending */
  | 'sum_cachedRequests_DESC'
  /** sum(encryptedBytes) ascending */
  | 'sum_encryptedBytes_ASC'
  /** sum(encryptedBytes) descending */
  | 'sum_encryptedBytes_DESC'
  /** sum(encryptedRequests) ascending */
  | 'sum_encryptedRequests_ASC'
  /** sum(encryptedRequests) descending */
  | 'sum_encryptedRequests_DESC'
  /** sum(pageViews) ascending */
  | 'sum_pageViews_ASC'
  /** sum(pageViews) descending */
  | 'sum_pageViews_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(threats) ascending */
  | 'sum_threats_ASC'
  /** sum(threats) descending */
  | 'sum_threats_DESC'
  /** uniq(uniques) ascending */
  | 'uniq_uniques_ASC'
  /** uniq(uniques) descending */
  | 'uniq_uniques_DESC';

interface AccountHttpRequestsOverviewAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountHttpRequestsOverviewAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountHttpRequestsOverviewAdaptiveGroupsFilter_InputObject[]>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientSSLProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientSSLProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly edgeResponseContentTypeName: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_geq: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_gt: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeResponseContentTypeName_leq: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_like: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_lt: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_neq: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeResponseContentTypeName_notlike: InputMaybe<Scalars['string']>;
    readonly edgeResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly edgeResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly httpApplication: InputMaybe<Scalars['string']>;
    readonly httpApplicationVersion: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_geq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_gt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplicationVersion_leq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_lt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_neq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplication_geq: InputMaybe<Scalars['string']>;
    readonly httpApplication_gt: InputMaybe<Scalars['string']>;
    readonly httpApplication_in: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_leq: InputMaybe<Scalars['string']>;
    readonly httpApplication_like: InputMaybe<Scalars['string']>;
    readonly httpApplication_lt: InputMaybe<Scalars['string']>;
    readonly httpApplication_neq: InputMaybe<Scalars['string']>;
    readonly httpApplication_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_notlike: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_geq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_gt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_leq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_like: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_lt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_neq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_notlike: InputMaybe<Scalars['string']>;
}

type AccountHttpRequestsOverviewAdaptiveGroupsOrderBy =
  /** avg(originResponseDurationMs) ascending */
  | 'avg_originResponseDurationMs_ASC'
  /** avg(originResponseDurationMs) descending */
  | 'avg_originResponseDurationMs_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** clientCountryName ascending */
  | 'clientCountryName_ASC'
  /** clientCountryName descending */
  | 'clientCountryName_DESC'
  /** clientRequestHTTPProtocol ascending */
  | 'clientRequestHTTPProtocol_ASC'
  /** clientRequestHTTPProtocol descending */
  | 'clientRequestHTTPProtocol_DESC'
  /** clientSSLProtocol ascending */
  | 'clientSSLProtocol_ASC'
  /** clientSSLProtocol descending */
  | 'clientSSLProtocol_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** edgeResponseContentTypeName ascending */
  | 'edgeResponseContentTypeName_ASC'
  /** edgeResponseContentTypeName descending */
  | 'edgeResponseContentTypeName_DESC'
  /** edgeResponseStatus ascending */
  | 'edgeResponseStatus_ASC'
  /** edgeResponseStatus descending */
  | 'edgeResponseStatus_DESC'
  /** httpApplicationVersion ascending */
  | 'httpApplicationVersion_ASC'
  /** httpApplicationVersion descending */
  | 'httpApplicationVersion_DESC'
  /** httpApplication ascending */
  | 'httpApplication_ASC'
  /** httpApplication descending */
  | 'httpApplication_DESC'
  /** ratio(status4xx) ascending */
  | 'ratio_status4xx_ASC'
  /** ratio(status4xx) descending */
  | 'ratio_status4xx_DESC'
  /** ratio(status5xx) ascending */
  | 'ratio_status5xx_ASC'
  /** ratio(status5xx) descending */
  | 'ratio_status5xx_DESC'
  /** requestSource ascending */
  | 'requestSource_ASC'
  /** requestSource descending */
  | 'requestSource_DESC'
  /** sum(bytes) ascending */
  | 'sum_bytes_ASC'
  /** sum(bytes) descending */
  | 'sum_bytes_DESC'
  /** sum(cachedBytes) ascending */
  | 'sum_cachedBytes_ASC'
  /** sum(cachedBytes) descending */
  | 'sum_cachedBytes_DESC'
  /** sum(cachedRequests) ascending */
  | 'sum_cachedRequests_ASC'
  /** sum(cachedRequests) descending */
  | 'sum_cachedRequests_DESC'
  /** sum(pageViews) ascending */
  | 'sum_pageViews_ASC'
  /** sum(pageViews) descending */
  | 'sum_pageViews_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(visits) ascending */
  | 'sum_visits_ASC'
  /** sum(visits) descending */
  | 'sum_visits_DESC'
  /** userAgentBrowser ascending */
  | 'userAgentBrowser_ASC'
  /** userAgentBrowser descending */
  | 'userAgentBrowser_DESC';

interface AccountImagesRequestsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountImagesRequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountImagesRequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
}

type AccountImagesRequestsAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** edgeResponseStatus ascending */
  | 'edgeResponseStatus_ASC'
  /** edgeResponseStatus descending */
  | 'edgeResponseStatus_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC';

interface AccountIpFlows1dGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountIpFlows1dGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountIpFlows1dGroupsFilter_InputObject[]>;
    readonly attackDestinationIP: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_geq: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_gt: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackDestinationIP_leq: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_like: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_lt: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_neq: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackDestinationIP_notlike: InputMaybe<Scalars['string']>;
    readonly attackDestinationPort: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackDestinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackId: InputMaybe<Scalars['string']>;
    readonly attackId_geq: InputMaybe<Scalars['string']>;
    readonly attackId_gt: InputMaybe<Scalars['string']>;
    readonly attackId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_leq: InputMaybe<Scalars['string']>;
    readonly attackId_like: InputMaybe<Scalars['string']>;
    readonly attackId_lt: InputMaybe<Scalars['string']>;
    readonly attackId_neq: InputMaybe<Scalars['string']>;
    readonly attackId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_notlike: InputMaybe<Scalars['string']>;
    readonly attackMitigationType: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_geq: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_gt: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackMitigationType_leq: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_like: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_lt: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_neq: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackMitigationType_notlike: InputMaybe<Scalars['string']>;
    readonly attackProtocol: InputMaybe<Scalars['string']>;
    readonly attackProtocol_geq: InputMaybe<Scalars['string']>;
    readonly attackProtocol_gt: InputMaybe<Scalars['string']>;
    readonly attackProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackProtocol_leq: InputMaybe<Scalars['string']>;
    readonly attackProtocol_like: InputMaybe<Scalars['string']>;
    readonly attackProtocol_lt: InputMaybe<Scalars['string']>;
    readonly attackProtocol_neq: InputMaybe<Scalars['string']>;
    readonly attackProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly attackSourcePort: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackSourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackTcpFlags: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_geq: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_gt: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackTcpFlags_leq: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_like: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_lt: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_neq: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackTcpFlags_notlike: InputMaybe<Scalars['string']>;
    readonly attackType: InputMaybe<Scalars['string']>;
    readonly attackType_geq: InputMaybe<Scalars['string']>;
    readonly attackType_gt: InputMaybe<Scalars['string']>;
    readonly attackType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackType_leq: InputMaybe<Scalars['string']>;
    readonly attackType_like: InputMaybe<Scalars['string']>;
    readonly attackType_lt: InputMaybe<Scalars['string']>;
    readonly attackType_neq: InputMaybe<Scalars['string']>;
    readonly attackType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackType_notlike: InputMaybe<Scalars['string']>;
    readonly coloCity: InputMaybe<Scalars['string']>;
    readonly coloCity_geq: InputMaybe<Scalars['string']>;
    readonly coloCity_gt: InputMaybe<Scalars['string']>;
    readonly coloCity_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_leq: InputMaybe<Scalars['string']>;
    readonly coloCity_like: InputMaybe<Scalars['string']>;
    readonly coloCity_lt: InputMaybe<Scalars['string']>;
    readonly coloCity_neq: InputMaybe<Scalars['string']>;
    readonly coloCity_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_notlike: InputMaybe<Scalars['string']>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly coloCountry: InputMaybe<Scalars['string']>;
    readonly coloCountry_geq: InputMaybe<Scalars['string']>;
    readonly coloCountry_gt: InputMaybe<Scalars['string']>;
    readonly coloCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_leq: InputMaybe<Scalars['string']>;
    readonly coloCountry_like: InputMaybe<Scalars['string']>;
    readonly coloCountry_lt: InputMaybe<Scalars['string']>;
    readonly coloCountry_neq: InputMaybe<Scalars['string']>;
    readonly coloCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_notlike: InputMaybe<Scalars['string']>;
    readonly coloRegion: InputMaybe<Scalars['string']>;
    readonly coloRegion_geq: InputMaybe<Scalars['string']>;
    readonly coloRegion_gt: InputMaybe<Scalars['string']>;
    readonly coloRegion_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloRegion_leq: InputMaybe<Scalars['string']>;
    readonly coloRegion_like: InputMaybe<Scalars['string']>;
    readonly coloRegion_lt: InputMaybe<Scalars['string']>;
    readonly coloRegion_neq: InputMaybe<Scalars['string']>;
    readonly coloRegion_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloRegion_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly destinationIP: InputMaybe<Scalars['string']>;
    readonly destinationIP_geq: InputMaybe<Scalars['string']>;
    readonly destinationIP_gt: InputMaybe<Scalars['string']>;
    readonly destinationIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIP_leq: InputMaybe<Scalars['string']>;
    readonly destinationIP_like: InputMaybe<Scalars['string']>;
    readonly destinationIP_lt: InputMaybe<Scalars['string']>;
    readonly destinationIP_neq: InputMaybe<Scalars['string']>;
    readonly destinationIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIP_notlike: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_geq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_gt: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIPv4Range23_leq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_like: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_lt: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_neq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIPv4Range23_notlike: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_geq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_gt: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIPv4Range24_leq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_like: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_lt: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_neq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIPv4Range24_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipProtocol: InputMaybe<Scalars['string']>;
    readonly ipProtocol_geq: InputMaybe<Scalars['string']>;
    readonly ipProtocol_gt: InputMaybe<Scalars['string']>;
    readonly ipProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocol_leq: InputMaybe<Scalars['string']>;
    readonly ipProtocol_like: InputMaybe<Scalars['string']>;
    readonly ipProtocol_lt: InputMaybe<Scalars['string']>;
    readonly ipProtocol_neq: InputMaybe<Scalars['string']>;
    readonly ipProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly ipVersion: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_geq: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_gt: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_in: InputMaybe<Scalars['bytes']>;
    readonly ipVersion_leq: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_lt: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_neq: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_notin: InputMaybe<Scalars['bytes']>;
}

type AccountIpFlows1dGroupsOrderBy =
  /** attackDestinationIP ascending */
  | 'attackDestinationIP_ASC'
  /** attackDestinationIP descending */
  | 'attackDestinationIP_DESC'
  /** attackDestinationPort ascending */
  | 'attackDestinationPort_ASC'
  /** attackDestinationPort descending */
  | 'attackDestinationPort_DESC'
  /** attackId ascending */
  | 'attackId_ASC'
  /** attackId descending */
  | 'attackId_DESC'
  /** attackMitigationType ascending */
  | 'attackMitigationType_ASC'
  /** attackMitigationType descending */
  | 'attackMitigationType_DESC'
  /** attackProtocol ascending */
  | 'attackProtocol_ASC'
  /** attackProtocol descending */
  | 'attackProtocol_DESC'
  /** attackSourcePort ascending */
  | 'attackSourcePort_ASC'
  /** attackSourcePort descending */
  | 'attackSourcePort_DESC'
  /** attackTcpFlags ascending */
  | 'attackTcpFlags_ASC'
  /** attackTcpFlags descending */
  | 'attackTcpFlags_DESC'
  /** attackType ascending */
  | 'attackType_ASC'
  /** attackType descending */
  | 'attackType_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** coloCity ascending */
  | 'coloCity_ASC'
  /** coloCity descending */
  | 'coloCity_DESC'
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** coloCountry ascending */
  | 'coloCountry_ASC'
  /** coloCountry descending */
  | 'coloCountry_DESC'
  /** coloRegion ascending */
  | 'coloRegion_ASC'
  /** coloRegion descending */
  | 'coloRegion_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** destinationIP ascending */
  | 'destinationIP_ASC'
  /** destinationIP descending */
  | 'destinationIP_DESC'
  /** destinationIPv4Range23 ascending */
  | 'destinationIPv4Range23_ASC'
  /** destinationIPv4Range23 descending */
  | 'destinationIPv4Range23_DESC'
  /** destinationIPv4Range24 ascending */
  | 'destinationIPv4Range24_ASC'
  /** destinationIPv4Range24 descending */
  | 'destinationIPv4Range24_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** ipProtocol ascending */
  | 'ipProtocol_ASC'
  /** ipProtocol descending */
  | 'ipProtocol_DESC'
  /** ipVersion ascending */
  | 'ipVersion_ASC'
  /** ipVersion descending */
  | 'ipVersion_DESC'
  /** sum(bits) ascending */
  | 'sum_bits_ASC'
  /** sum(bits) descending */
  | 'sum_bits_DESC'
  /** sum(packets) ascending */
  | 'sum_packets_ASC'
  /** sum(packets) descending */
  | 'sum_packets_DESC';

interface AccountIpFlows1hGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountIpFlows1hGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountIpFlows1hGroupsFilter_InputObject[]>;
    readonly attackDestinationIP: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_geq: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_gt: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackDestinationIP_leq: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_like: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_lt: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_neq: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackDestinationIP_notlike: InputMaybe<Scalars['string']>;
    readonly attackDestinationPort: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackDestinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackId: InputMaybe<Scalars['string']>;
    readonly attackId_geq: InputMaybe<Scalars['string']>;
    readonly attackId_gt: InputMaybe<Scalars['string']>;
    readonly attackId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_leq: InputMaybe<Scalars['string']>;
    readonly attackId_like: InputMaybe<Scalars['string']>;
    readonly attackId_lt: InputMaybe<Scalars['string']>;
    readonly attackId_neq: InputMaybe<Scalars['string']>;
    readonly attackId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_notlike: InputMaybe<Scalars['string']>;
    readonly attackMitigationType: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_geq: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_gt: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackMitigationType_leq: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_like: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_lt: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_neq: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackMitigationType_notlike: InputMaybe<Scalars['string']>;
    readonly attackProtocol: InputMaybe<Scalars['string']>;
    readonly attackProtocol_geq: InputMaybe<Scalars['string']>;
    readonly attackProtocol_gt: InputMaybe<Scalars['string']>;
    readonly attackProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackProtocol_leq: InputMaybe<Scalars['string']>;
    readonly attackProtocol_like: InputMaybe<Scalars['string']>;
    readonly attackProtocol_lt: InputMaybe<Scalars['string']>;
    readonly attackProtocol_neq: InputMaybe<Scalars['string']>;
    readonly attackProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly attackSourcePort: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackSourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackTcpFlags: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_geq: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_gt: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackTcpFlags_leq: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_like: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_lt: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_neq: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackTcpFlags_notlike: InputMaybe<Scalars['string']>;
    readonly attackType: InputMaybe<Scalars['string']>;
    readonly attackType_geq: InputMaybe<Scalars['string']>;
    readonly attackType_gt: InputMaybe<Scalars['string']>;
    readonly attackType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackType_leq: InputMaybe<Scalars['string']>;
    readonly attackType_like: InputMaybe<Scalars['string']>;
    readonly attackType_lt: InputMaybe<Scalars['string']>;
    readonly attackType_neq: InputMaybe<Scalars['string']>;
    readonly attackType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackType_notlike: InputMaybe<Scalars['string']>;
    readonly coloCity: InputMaybe<Scalars['string']>;
    readonly coloCity_geq: InputMaybe<Scalars['string']>;
    readonly coloCity_gt: InputMaybe<Scalars['string']>;
    readonly coloCity_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_leq: InputMaybe<Scalars['string']>;
    readonly coloCity_like: InputMaybe<Scalars['string']>;
    readonly coloCity_lt: InputMaybe<Scalars['string']>;
    readonly coloCity_neq: InputMaybe<Scalars['string']>;
    readonly coloCity_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_notlike: InputMaybe<Scalars['string']>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly coloCountry: InputMaybe<Scalars['string']>;
    readonly coloCountry_geq: InputMaybe<Scalars['string']>;
    readonly coloCountry_gt: InputMaybe<Scalars['string']>;
    readonly coloCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_leq: InputMaybe<Scalars['string']>;
    readonly coloCountry_like: InputMaybe<Scalars['string']>;
    readonly coloCountry_lt: InputMaybe<Scalars['string']>;
    readonly coloCountry_neq: InputMaybe<Scalars['string']>;
    readonly coloCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_notlike: InputMaybe<Scalars['string']>;
    readonly coloRegion: InputMaybe<Scalars['string']>;
    readonly coloRegion_geq: InputMaybe<Scalars['string']>;
    readonly coloRegion_gt: InputMaybe<Scalars['string']>;
    readonly coloRegion_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloRegion_leq: InputMaybe<Scalars['string']>;
    readonly coloRegion_like: InputMaybe<Scalars['string']>;
    readonly coloRegion_lt: InputMaybe<Scalars['string']>;
    readonly coloRegion_neq: InputMaybe<Scalars['string']>;
    readonly coloRegion_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloRegion_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationIP: InputMaybe<Scalars['string']>;
    readonly destinationIP_geq: InputMaybe<Scalars['string']>;
    readonly destinationIP_gt: InputMaybe<Scalars['string']>;
    readonly destinationIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIP_leq: InputMaybe<Scalars['string']>;
    readonly destinationIP_like: InputMaybe<Scalars['string']>;
    readonly destinationIP_lt: InputMaybe<Scalars['string']>;
    readonly destinationIP_neq: InputMaybe<Scalars['string']>;
    readonly destinationIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIP_notlike: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_geq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_gt: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIPv4Range23_leq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_like: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_lt: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_neq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIPv4Range23_notlike: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_geq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_gt: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIPv4Range24_leq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_like: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_lt: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_neq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIPv4Range24_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipProtocol: InputMaybe<Scalars['string']>;
    readonly ipProtocol_geq: InputMaybe<Scalars['string']>;
    readonly ipProtocol_gt: InputMaybe<Scalars['string']>;
    readonly ipProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocol_leq: InputMaybe<Scalars['string']>;
    readonly ipProtocol_like: InputMaybe<Scalars['string']>;
    readonly ipProtocol_lt: InputMaybe<Scalars['string']>;
    readonly ipProtocol_neq: InputMaybe<Scalars['string']>;
    readonly ipProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly ipVersion: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_geq: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_gt: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_in: InputMaybe<Scalars['bytes']>;
    readonly ipVersion_leq: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_lt: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_neq: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_notin: InputMaybe<Scalars['bytes']>;
    readonly sourceIPASNDescription: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIPASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_like: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIPASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_geq: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_gt: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIPAsn_leq: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_like: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_lt: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_neq: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIPAsn_notlike: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_geq: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_gt: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIPCountry_leq: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_like: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_lt: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_neq: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIPCountry_notlike: InputMaybe<Scalars['string']>;
    readonly sourcePort: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly sourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpFlags: InputMaybe<Scalars['string']>;
    readonly tcpFlags_geq: InputMaybe<Scalars['string']>;
    readonly tcpFlags_gt: InputMaybe<Scalars['string']>;
    readonly tcpFlags_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlags_leq: InputMaybe<Scalars['string']>;
    readonly tcpFlags_like: InputMaybe<Scalars['string']>;
    readonly tcpFlags_lt: InputMaybe<Scalars['string']>;
    readonly tcpFlags_neq: InputMaybe<Scalars['string']>;
    readonly tcpFlags_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlags_notlike: InputMaybe<Scalars['string']>;
}

type AccountIpFlows1hGroupsOrderBy =
  /** attackDestinationIP ascending */
  | 'attackDestinationIP_ASC'
  /** attackDestinationIP descending */
  | 'attackDestinationIP_DESC'
  /** attackDestinationPort ascending */
  | 'attackDestinationPort_ASC'
  /** attackDestinationPort descending */
  | 'attackDestinationPort_DESC'
  /** attackId ascending */
  | 'attackId_ASC'
  /** attackId descending */
  | 'attackId_DESC'
  /** attackMitigationType ascending */
  | 'attackMitigationType_ASC'
  /** attackMitigationType descending */
  | 'attackMitigationType_DESC'
  /** attackProtocol ascending */
  | 'attackProtocol_ASC'
  /** attackProtocol descending */
  | 'attackProtocol_DESC'
  /** attackSourcePort ascending */
  | 'attackSourcePort_ASC'
  /** attackSourcePort descending */
  | 'attackSourcePort_DESC'
  /** attackTcpFlags ascending */
  | 'attackTcpFlags_ASC'
  /** attackTcpFlags descending */
  | 'attackTcpFlags_DESC'
  /** attackType ascending */
  | 'attackType_ASC'
  /** attackType descending */
  | 'attackType_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** coloCity ascending */
  | 'coloCity_ASC'
  /** coloCity descending */
  | 'coloCity_DESC'
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** coloCountry ascending */
  | 'coloCountry_ASC'
  /** coloCountry descending */
  | 'coloCountry_DESC'
  /** coloRegion ascending */
  | 'coloRegion_ASC'
  /** coloRegion descending */
  | 'coloRegion_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** destinationIP ascending */
  | 'destinationIP_ASC'
  /** destinationIP descending */
  | 'destinationIP_DESC'
  /** destinationIPv4Range23 ascending */
  | 'destinationIPv4Range23_ASC'
  /** destinationIPv4Range23 descending */
  | 'destinationIPv4Range23_DESC'
  /** destinationIPv4Range24 ascending */
  | 'destinationIPv4Range24_ASC'
  /** destinationIPv4Range24 descending */
  | 'destinationIPv4Range24_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** ipProtocol ascending */
  | 'ipProtocol_ASC'
  /** ipProtocol descending */
  | 'ipProtocol_DESC'
  /** ipVersion ascending */
  | 'ipVersion_ASC'
  /** ipVersion descending */
  | 'ipVersion_DESC'
  /** sourceIPASNDescription ascending */
  | 'sourceIPASNDescription_ASC'
  /** sourceIPASNDescription descending */
  | 'sourceIPASNDescription_DESC'
  /** sourceIPAsn ascending */
  | 'sourceIPAsn_ASC'
  /** sourceIPAsn descending */
  | 'sourceIPAsn_DESC'
  /** sourceIPCountry ascending */
  | 'sourceIPCountry_ASC'
  /** sourceIPCountry descending */
  | 'sourceIPCountry_DESC'
  /** sourcePort ascending */
  | 'sourcePort_ASC'
  /** sourcePort descending */
  | 'sourcePort_DESC'
  /** sum(bits) ascending */
  | 'sum_bits_ASC'
  /** sum(bits) descending */
  | 'sum_bits_DESC'
  /** sum(packets) ascending */
  | 'sum_packets_ASC'
  /** sum(packets) descending */
  | 'sum_packets_DESC'
  /** tcpFlags ascending */
  | 'tcpFlags_ASC'
  /** tcpFlags descending */
  | 'tcpFlags_DESC';

interface AccountIpFlows1mAttacksGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountIpFlows1mAttacksGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountIpFlows1mAttacksGroupsFilter_InputObject[]>;
    readonly attackDestinationIP: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_geq: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_gt: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackDestinationIP_leq: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_like: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_lt: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_neq: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackDestinationIP_notlike: InputMaybe<Scalars['string']>;
    readonly attackDestinationPort: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackDestinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackId: InputMaybe<Scalars['string']>;
    readonly attackId_geq: InputMaybe<Scalars['string']>;
    readonly attackId_gt: InputMaybe<Scalars['string']>;
    readonly attackId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_leq: InputMaybe<Scalars['string']>;
    readonly attackId_like: InputMaybe<Scalars['string']>;
    readonly attackId_lt: InputMaybe<Scalars['string']>;
    readonly attackId_neq: InputMaybe<Scalars['string']>;
    readonly attackId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_notlike: InputMaybe<Scalars['string']>;
    readonly attackMitigationType: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_geq: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_gt: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackMitigationType_leq: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_like: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_lt: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_neq: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackMitigationType_notlike: InputMaybe<Scalars['string']>;
    readonly attackProtocol: InputMaybe<Scalars['string']>;
    readonly attackProtocol_geq: InputMaybe<Scalars['string']>;
    readonly attackProtocol_gt: InputMaybe<Scalars['string']>;
    readonly attackProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackProtocol_leq: InputMaybe<Scalars['string']>;
    readonly attackProtocol_like: InputMaybe<Scalars['string']>;
    readonly attackProtocol_lt: InputMaybe<Scalars['string']>;
    readonly attackProtocol_neq: InputMaybe<Scalars['string']>;
    readonly attackProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly attackSourcePort: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackSourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackTcpFlags: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_geq: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_gt: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackTcpFlags_leq: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_like: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_lt: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_neq: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackTcpFlags_notlike: InputMaybe<Scalars['string']>;
    readonly attackType: InputMaybe<Scalars['string']>;
    readonly attackType_geq: InputMaybe<Scalars['string']>;
    readonly attackType_gt: InputMaybe<Scalars['string']>;
    readonly attackType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackType_leq: InputMaybe<Scalars['string']>;
    readonly attackType_like: InputMaybe<Scalars['string']>;
    readonly attackType_lt: InputMaybe<Scalars['string']>;
    readonly attackType_neq: InputMaybe<Scalars['string']>;
    readonly attackType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackType_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly destinationIP: InputMaybe<Scalars['string']>;
    readonly destinationIP_geq: InputMaybe<Scalars['string']>;
    readonly destinationIP_gt: InputMaybe<Scalars['string']>;
    readonly destinationIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIP_leq: InputMaybe<Scalars['string']>;
    readonly destinationIP_like: InputMaybe<Scalars['string']>;
    readonly destinationIP_lt: InputMaybe<Scalars['string']>;
    readonly destinationIP_neq: InputMaybe<Scalars['string']>;
    readonly destinationIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIP_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
}

type AccountIpFlows1mAttacksGroupsOrderBy =
  /** attackDestinationIP ascending */
  | 'attackDestinationIP_ASC'
  /** attackDestinationIP descending */
  | 'attackDestinationIP_DESC'
  /** attackDestinationPort ascending */
  | 'attackDestinationPort_ASC'
  /** attackDestinationPort descending */
  | 'attackDestinationPort_DESC'
  /** attackId ascending */
  | 'attackId_ASC'
  /** attackId descending */
  | 'attackId_DESC'
  /** attackMitigationType ascending */
  | 'attackMitigationType_ASC'
  /** attackMitigationType descending */
  | 'attackMitigationType_DESC'
  /** attackProtocol ascending */
  | 'attackProtocol_ASC'
  /** attackProtocol descending */
  | 'attackProtocol_DESC'
  /** attackSourcePort ascending */
  | 'attackSourcePort_ASC'
  /** attackSourcePort descending */
  | 'attackSourcePort_DESC'
  /** attackTcpFlags ascending */
  | 'attackTcpFlags_ASC'
  /** attackTcpFlags descending */
  | 'attackTcpFlags_DESC'
  /** attackType ascending */
  | 'attackType_ASC'
  /** attackType descending */
  | 'attackType_DESC'
  /** avg(bitsPerSecond) ascending */
  | 'avg_bitsPerSecond_ASC'
  /** avg(bitsPerSecond) descending */
  | 'avg_bitsPerSecond_DESC'
  /** avg(packetsPerSecond) ascending */
  | 'avg_packetsPerSecond_ASC'
  /** avg(packetsPerSecond) descending */
  | 'avg_packetsPerSecond_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** destinationIP ascending */
  | 'destinationIP_ASC'
  /** destinationIP descending */
  | 'destinationIP_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** max(bitsPerSecond) ascending */
  | 'max_bitsPerSecond_ASC'
  /** max(bitsPerSecond) descending */
  | 'max_bitsPerSecond_DESC'
  /** max(datetimeMinute) ascending */
  | 'max_datetimeMinute_ASC'
  /** max(datetimeMinute) descending */
  | 'max_datetimeMinute_DESC'
  /** max(packetsPerSecond) ascending */
  | 'max_packetsPerSecond_ASC'
  /** max(packetsPerSecond) descending */
  | 'max_packetsPerSecond_DESC'
  /** min(bitsPerSecond) ascending */
  | 'min_bitsPerSecond_ASC'
  /** min(bitsPerSecond) descending */
  | 'min_bitsPerSecond_DESC'
  /** min(datetimeMinute) ascending */
  | 'min_datetimeMinute_ASC'
  /** min(datetimeMinute) descending */
  | 'min_datetimeMinute_DESC'
  /** min(packetsPerSecond) ascending */
  | 'min_packetsPerSecond_ASC'
  /** min(packetsPerSecond) descending */
  | 'min_packetsPerSecond_DESC'
  /** sum(bits) ascending */
  | 'sum_bits_ASC'
  /** sum(bits) descending */
  | 'sum_bits_DESC'
  /** sum(packets) ascending */
  | 'sum_packets_ASC'
  /** sum(packets) descending */
  | 'sum_packets_DESC';

interface AccountIpFlows1mGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountIpFlows1mGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountIpFlows1mGroupsFilter_InputObject[]>;
    readonly attackDestinationIP: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_geq: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_gt: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackDestinationIP_leq: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_like: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_lt: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_neq: InputMaybe<Scalars['string']>;
    readonly attackDestinationIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackDestinationIP_notlike: InputMaybe<Scalars['string']>;
    readonly attackDestinationPort: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackDestinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly attackDestinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackId: InputMaybe<Scalars['string']>;
    readonly attackId_geq: InputMaybe<Scalars['string']>;
    readonly attackId_gt: InputMaybe<Scalars['string']>;
    readonly attackId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_leq: InputMaybe<Scalars['string']>;
    readonly attackId_like: InputMaybe<Scalars['string']>;
    readonly attackId_lt: InputMaybe<Scalars['string']>;
    readonly attackId_neq: InputMaybe<Scalars['string']>;
    readonly attackId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackId_notlike: InputMaybe<Scalars['string']>;
    readonly attackMitigationType: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_geq: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_gt: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackMitigationType_leq: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_like: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_lt: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_neq: InputMaybe<Scalars['string']>;
    readonly attackMitigationType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackMitigationType_notlike: InputMaybe<Scalars['string']>;
    readonly attackProtocol: InputMaybe<Scalars['string']>;
    readonly attackProtocol_geq: InputMaybe<Scalars['string']>;
    readonly attackProtocol_gt: InputMaybe<Scalars['string']>;
    readonly attackProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackProtocol_leq: InputMaybe<Scalars['string']>;
    readonly attackProtocol_like: InputMaybe<Scalars['string']>;
    readonly attackProtocol_lt: InputMaybe<Scalars['string']>;
    readonly attackProtocol_neq: InputMaybe<Scalars['string']>;
    readonly attackProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly attackSourcePort: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackSourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly attackSourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly attackTcpFlags: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_geq: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_gt: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackTcpFlags_leq: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_like: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_lt: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_neq: InputMaybe<Scalars['string']>;
    readonly attackTcpFlags_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackTcpFlags_notlike: InputMaybe<Scalars['string']>;
    readonly attackType: InputMaybe<Scalars['string']>;
    readonly attackType_geq: InputMaybe<Scalars['string']>;
    readonly attackType_gt: InputMaybe<Scalars['string']>;
    readonly attackType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly attackType_leq: InputMaybe<Scalars['string']>;
    readonly attackType_like: InputMaybe<Scalars['string']>;
    readonly attackType_lt: InputMaybe<Scalars['string']>;
    readonly attackType_neq: InputMaybe<Scalars['string']>;
    readonly attackType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly attackType_notlike: InputMaybe<Scalars['string']>;
    readonly coloCity: InputMaybe<Scalars['string']>;
    readonly coloCity_geq: InputMaybe<Scalars['string']>;
    readonly coloCity_gt: InputMaybe<Scalars['string']>;
    readonly coloCity_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_leq: InputMaybe<Scalars['string']>;
    readonly coloCity_like: InputMaybe<Scalars['string']>;
    readonly coloCity_lt: InputMaybe<Scalars['string']>;
    readonly coloCity_neq: InputMaybe<Scalars['string']>;
    readonly coloCity_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_notlike: InputMaybe<Scalars['string']>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly coloCountry: InputMaybe<Scalars['string']>;
    readonly coloCountry_geq: InputMaybe<Scalars['string']>;
    readonly coloCountry_gt: InputMaybe<Scalars['string']>;
    readonly coloCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_leq: InputMaybe<Scalars['string']>;
    readonly coloCountry_like: InputMaybe<Scalars['string']>;
    readonly coloCountry_lt: InputMaybe<Scalars['string']>;
    readonly coloCountry_neq: InputMaybe<Scalars['string']>;
    readonly coloCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_notlike: InputMaybe<Scalars['string']>;
    readonly coloRegion: InputMaybe<Scalars['string']>;
    readonly coloRegion_geq: InputMaybe<Scalars['string']>;
    readonly coloRegion_gt: InputMaybe<Scalars['string']>;
    readonly coloRegion_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloRegion_leq: InputMaybe<Scalars['string']>;
    readonly coloRegion_like: InputMaybe<Scalars['string']>;
    readonly coloRegion_lt: InputMaybe<Scalars['string']>;
    readonly coloRegion_neq: InputMaybe<Scalars['string']>;
    readonly coloRegion_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloRegion_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationIP: InputMaybe<Scalars['string']>;
    readonly destinationIP_geq: InputMaybe<Scalars['string']>;
    readonly destinationIP_gt: InputMaybe<Scalars['string']>;
    readonly destinationIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIP_leq: InputMaybe<Scalars['string']>;
    readonly destinationIP_like: InputMaybe<Scalars['string']>;
    readonly destinationIP_lt: InputMaybe<Scalars['string']>;
    readonly destinationIP_neq: InputMaybe<Scalars['string']>;
    readonly destinationIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIP_notlike: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_geq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_gt: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIPv4Range23_leq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_like: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_lt: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_neq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range23_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIPv4Range23_notlike: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_geq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_gt: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIPv4Range24_leq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_like: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_lt: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_neq: InputMaybe<Scalars['string']>;
    readonly destinationIPv4Range24_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIPv4Range24_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipProtocol: InputMaybe<Scalars['string']>;
    readonly ipProtocol_geq: InputMaybe<Scalars['string']>;
    readonly ipProtocol_gt: InputMaybe<Scalars['string']>;
    readonly ipProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocol_leq: InputMaybe<Scalars['string']>;
    readonly ipProtocol_like: InputMaybe<Scalars['string']>;
    readonly ipProtocol_lt: InputMaybe<Scalars['string']>;
    readonly ipProtocol_neq: InputMaybe<Scalars['string']>;
    readonly ipProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly ipVersion: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_geq: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_gt: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_in: InputMaybe<Scalars['bytes']>;
    readonly ipVersion_leq: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_lt: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_neq: InputMaybe<Scalars['uint8']>;
    readonly ipVersion_notin: InputMaybe<Scalars['bytes']>;
    readonly sourceIP: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIPASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_like: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly sourceIPASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIPASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_geq: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_gt: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIPAsn_leq: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_like: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_lt: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_neq: InputMaybe<Scalars['string']>;
    readonly sourceIPAsn_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIPAsn_notlike: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_geq: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_gt: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIPCountry_leq: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_like: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_lt: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_neq: InputMaybe<Scalars['string']>;
    readonly sourceIPCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIPCountry_notlike: InputMaybe<Scalars['string']>;
    readonly sourceIP_geq: InputMaybe<Scalars['string']>;
    readonly sourceIP_gt: InputMaybe<Scalars['string']>;
    readonly sourceIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIP_leq: InputMaybe<Scalars['string']>;
    readonly sourceIP_like: InputMaybe<Scalars['string']>;
    readonly sourceIP_lt: InputMaybe<Scalars['string']>;
    readonly sourceIP_neq: InputMaybe<Scalars['string']>;
    readonly sourceIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceIP_notlike: InputMaybe<Scalars['string']>;
    readonly sourcePort: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly sourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpFlags: InputMaybe<Scalars['string']>;
    readonly tcpFlags_geq: InputMaybe<Scalars['string']>;
    readonly tcpFlags_gt: InputMaybe<Scalars['string']>;
    readonly tcpFlags_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlags_leq: InputMaybe<Scalars['string']>;
    readonly tcpFlags_like: InputMaybe<Scalars['string']>;
    readonly tcpFlags_lt: InputMaybe<Scalars['string']>;
    readonly tcpFlags_neq: InputMaybe<Scalars['string']>;
    readonly tcpFlags_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlags_notlike: InputMaybe<Scalars['string']>;
}

type AccountIpFlows1mGroupsOrderBy =
  /** attackDestinationIP ascending */
  | 'attackDestinationIP_ASC'
  /** attackDestinationIP descending */
  | 'attackDestinationIP_DESC'
  /** attackDestinationPort ascending */
  | 'attackDestinationPort_ASC'
  /** attackDestinationPort descending */
  | 'attackDestinationPort_DESC'
  /** attackId ascending */
  | 'attackId_ASC'
  /** attackId descending */
  | 'attackId_DESC'
  /** attackMitigationType ascending */
  | 'attackMitigationType_ASC'
  /** attackMitigationType descending */
  | 'attackMitigationType_DESC'
  /** attackProtocol ascending */
  | 'attackProtocol_ASC'
  /** attackProtocol descending */
  | 'attackProtocol_DESC'
  /** attackSourcePort ascending */
  | 'attackSourcePort_ASC'
  /** attackSourcePort descending */
  | 'attackSourcePort_DESC'
  /** attackTcpFlags ascending */
  | 'attackTcpFlags_ASC'
  /** attackTcpFlags descending */
  | 'attackTcpFlags_DESC'
  /** attackType ascending */
  | 'attackType_ASC'
  /** attackType descending */
  | 'attackType_DESC'
  /** avg(bitsPerSecond) ascending */
  | 'avg_bitsPerSecond_ASC'
  /** avg(bitsPerSecond) descending */
  | 'avg_bitsPerSecond_DESC'
  /** avg(packetsPerSecond) ascending */
  | 'avg_packetsPerSecond_ASC'
  /** avg(packetsPerSecond) descending */
  | 'avg_packetsPerSecond_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** coloCity ascending */
  | 'coloCity_ASC'
  /** coloCity descending */
  | 'coloCity_DESC'
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** coloCountry ascending */
  | 'coloCountry_ASC'
  /** coloCountry descending */
  | 'coloCountry_DESC'
  /** coloRegion ascending */
  | 'coloRegion_ASC'
  /** coloRegion descending */
  | 'coloRegion_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** destinationIP ascending */
  | 'destinationIP_ASC'
  /** destinationIP descending */
  | 'destinationIP_DESC'
  /** destinationIPv4Range23 ascending */
  | 'destinationIPv4Range23_ASC'
  /** destinationIPv4Range23 descending */
  | 'destinationIPv4Range23_DESC'
  /** destinationIPv4Range24 ascending */
  | 'destinationIPv4Range24_ASC'
  /** destinationIPv4Range24 descending */
  | 'destinationIPv4Range24_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** ipProtocol ascending */
  | 'ipProtocol_ASC'
  /** ipProtocol descending */
  | 'ipProtocol_DESC'
  /** ipVersion ascending */
  | 'ipVersion_ASC'
  /** ipVersion descending */
  | 'ipVersion_DESC'
  /** max(bitsPerSecond) ascending */
  | 'max_bitsPerSecond_ASC'
  /** max(bitsPerSecond) descending */
  | 'max_bitsPerSecond_DESC'
  /** max(datetimeMinute) ascending */
  | 'max_datetimeMinute_ASC'
  /** max(datetimeMinute) descending */
  | 'max_datetimeMinute_DESC'
  /** max(packetsPerSecond) ascending */
  | 'max_packetsPerSecond_ASC'
  /** max(packetsPerSecond) descending */
  | 'max_packetsPerSecond_DESC'
  /** min(bitsPerSecond) ascending */
  | 'min_bitsPerSecond_ASC'
  /** min(bitsPerSecond) descending */
  | 'min_bitsPerSecond_DESC'
  /** min(datetimeMinute) ascending */
  | 'min_datetimeMinute_ASC'
  /** min(datetimeMinute) descending */
  | 'min_datetimeMinute_DESC'
  /** min(packetsPerSecond) ascending */
  | 'min_packetsPerSecond_ASC'
  /** min(packetsPerSecond) descending */
  | 'min_packetsPerSecond_DESC'
  /** sourceIPASNDescription ascending */
  | 'sourceIPASNDescription_ASC'
  /** sourceIPASNDescription descending */
  | 'sourceIPASNDescription_DESC'
  /** sourceIPAsn ascending */
  | 'sourceIPAsn_ASC'
  /** sourceIPAsn descending */
  | 'sourceIPAsn_DESC'
  /** sourceIPCountry ascending */
  | 'sourceIPCountry_ASC'
  /** sourceIPCountry descending */
  | 'sourceIPCountry_DESC'
  /** sourceIP ascending */
  | 'sourceIP_ASC'
  /** sourceIP descending */
  | 'sourceIP_DESC'
  /** sourcePort ascending */
  | 'sourcePort_ASC'
  /** sourcePort descending */
  | 'sourcePort_DESC'
  /** sum(bits) ascending */
  | 'sum_bits_ASC'
  /** sum(bits) descending */
  | 'sum_bits_DESC'
  /** sum(packets) ascending */
  | 'sum_packets_ASC'
  /** sum(packets) descending */
  | 'sum_packets_DESC'
  /** tcpFlags ascending */
  | 'tcpFlags_ASC'
  /** tcpFlags descending */
  | 'tcpFlags_DESC';

interface AccountLogpushHealthAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountLogpushHealthAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountLogpushHealthAdaptiveGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationType: InputMaybe<Scalars['string']>;
    readonly destinationType_geq: InputMaybe<Scalars['string']>;
    readonly destinationType_gt: InputMaybe<Scalars['string']>;
    readonly destinationType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationType_leq: InputMaybe<Scalars['string']>;
    readonly destinationType_like: InputMaybe<Scalars['string']>;
    readonly destinationType_lt: InputMaybe<Scalars['string']>;
    readonly destinationType_neq: InputMaybe<Scalars['string']>;
    readonly destinationType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationType_notlike: InputMaybe<Scalars['string']>;
    readonly final: InputMaybe<Scalars['uint8']>;
    readonly final_geq: InputMaybe<Scalars['uint8']>;
    readonly final_gt: InputMaybe<Scalars['uint8']>;
    readonly final_in: InputMaybe<Scalars['bytes']>;
    readonly final_leq: InputMaybe<Scalars['uint8']>;
    readonly final_lt: InputMaybe<Scalars['uint8']>;
    readonly final_neq: InputMaybe<Scalars['uint8']>;
    readonly final_notin: InputMaybe<Scalars['bytes']>;
    readonly jobId: InputMaybe<Scalars['uint64']>;
    readonly jobId_geq: InputMaybe<Scalars['uint64']>;
    readonly jobId_gt: InputMaybe<Scalars['uint64']>;
    readonly jobId_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly jobId_leq: InputMaybe<Scalars['uint64']>;
    readonly jobId_lt: InputMaybe<Scalars['uint64']>;
    readonly jobId_neq: InputMaybe<Scalars['uint64']>;
    readonly jobId_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly status: InputMaybe<Scalars['uint16']>;
    readonly status_geq: InputMaybe<Scalars['uint16']>;
    readonly status_gt: InputMaybe<Scalars['uint16']>;
    readonly status_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly status_leq: InputMaybe<Scalars['uint16']>;
    readonly status_lt: InputMaybe<Scalars['uint16']>;
    readonly status_neq: InputMaybe<Scalars['uint16']>;
    readonly status_notin: InputMaybe<readonly Scalars['uint16'][]>;
}

type AccountLogpushHealthAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** destinationType ascending */
  | 'destinationType_ASC'
  /** destinationType descending */
  | 'destinationType_DESC'
  /** final ascending */
  | 'final_ASC'
  /** final descending */
  | 'final_DESC'
  /** jobId ascending */
  | 'jobId_ASC'
  /** jobId descending */
  | 'jobId_DESC'
  /** status ascending */
  | 'status_ASC'
  /** status descending */
  | 'status_DESC'
  /** sum(bytesCompressed) ascending */
  | 'sum_bytesCompressed_ASC'
  /** sum(bytesCompressed) descending */
  | 'sum_bytesCompressed_DESC'
  /** sum(bytes) ascending */
  | 'sum_bytes_ASC'
  /** sum(bytes) descending */
  | 'sum_bytes_DESC'
  /** sum(records) ascending */
  | 'sum_records_ASC'
  /** sum(records) descending */
  | 'sum_records_DESC';

interface AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly coloCity: InputMaybe<Scalars['string']>;
    readonly coloCity_geq: InputMaybe<Scalars['string']>;
    readonly coloCity_gt: InputMaybe<Scalars['string']>;
    readonly coloCity_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_leq: InputMaybe<Scalars['string']>;
    readonly coloCity_like: InputMaybe<Scalars['string']>;
    readonly coloCity_lt: InputMaybe<Scalars['string']>;
    readonly coloCity_neq: InputMaybe<Scalars['string']>;
    readonly coloCity_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_notlike: InputMaybe<Scalars['string']>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly coloCountry: InputMaybe<Scalars['string']>;
    readonly coloCountry_geq: InputMaybe<Scalars['string']>;
    readonly coloCountry_gt: InputMaybe<Scalars['string']>;
    readonly coloCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_leq: InputMaybe<Scalars['string']>;
    readonly coloCountry_like: InputMaybe<Scalars['string']>;
    readonly coloCountry_lt: InputMaybe<Scalars['string']>;
    readonly coloCountry_neq: InputMaybe<Scalars['string']>;
    readonly coloCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_notlike: InputMaybe<Scalars['string']>;
    readonly coloGeohash: InputMaybe<Scalars['string']>;
    readonly coloGeohash_geq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_gt: InputMaybe<Scalars['string']>;
    readonly coloGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloGeohash_leq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_like: InputMaybe<Scalars['string']>;
    readonly coloGeohash_lt: InputMaybe<Scalars['string']>;
    readonly coloGeohash_neq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly coloName: InputMaybe<Scalars['string']>;
    readonly coloName_geq: InputMaybe<Scalars['string']>;
    readonly coloName_gt: InputMaybe<Scalars['string']>;
    readonly coloName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloName_leq: InputMaybe<Scalars['string']>;
    readonly coloName_like: InputMaybe<Scalars['string']>;
    readonly coloName_lt: InputMaybe<Scalars['string']>;
    readonly coloName_neq: InputMaybe<Scalars['string']>;
    readonly coloName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationAsn: InputMaybe<Scalars['uint32']>;
    readonly destinationAsnName: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_geq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_gt: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAsnName_leq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_like: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_lt: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_neq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAsnName_notlike: InputMaybe<Scalars['string']>;
    readonly destinationAsn_geq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_gt: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly destinationAsn_leq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_lt: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_neq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly destinationCountry: InputMaybe<Scalars['string']>;
    readonly destinationCountry_geq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_gt: InputMaybe<Scalars['string']>;
    readonly destinationCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationCountry_leq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_like: InputMaybe<Scalars['string']>;
    readonly destinationCountry_lt: InputMaybe<Scalars['string']>;
    readonly destinationCountry_neq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationCountry_notlike: InputMaybe<Scalars['string']>;
    readonly destinationGeohash: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_geq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_gt: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationGeohash_leq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_like: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_lt: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_neq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly direction: InputMaybe<Scalars['string']>;
    readonly direction_geq: InputMaybe<Scalars['string']>;
    readonly direction_gt: InputMaybe<Scalars['string']>;
    readonly direction_in: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_leq: InputMaybe<Scalars['string']>;
    readonly direction_like: InputMaybe<Scalars['string']>;
    readonly direction_lt: InputMaybe<Scalars['string']>;
    readonly direction_neq: InputMaybe<Scalars['string']>;
    readonly direction_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_notlike: InputMaybe<Scalars['string']>;
    readonly ethertype: InputMaybe<Scalars['uint16']>;
    readonly ethertype_geq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_gt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ethertype_leq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_lt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_neq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greChecksum: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greEthertype: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_geq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_gt: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greEthertype_leq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_lt: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_neq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greHeaderLength: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_geq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_gt: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greHeaderLength_leq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_lt: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_neq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greKey: InputMaybe<Scalars['uint32']>;
    readonly greKey_geq: InputMaybe<Scalars['uint32']>;
    readonly greKey_gt: InputMaybe<Scalars['uint32']>;
    readonly greKey_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greKey_leq: InputMaybe<Scalars['uint32']>;
    readonly greKey_lt: InputMaybe<Scalars['uint32']>;
    readonly greKey_neq: InputMaybe<Scalars['uint32']>;
    readonly greKey_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greSequenceNumber: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greSequenceNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greVersion: InputMaybe<Scalars['uint8']>;
    readonly greVersion_geq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_gt: InputMaybe<Scalars['uint8']>;
    readonly greVersion_in: InputMaybe<Scalars['bytes']>;
    readonly greVersion_leq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_lt: InputMaybe<Scalars['uint8']>;
    readonly greVersion_neq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_notin: InputMaybe<Scalars['bytes']>;
    readonly icmpChecksum: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly icmpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly icmpCode: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_geq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_gt: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_in: InputMaybe<Scalars['bytes']>;
    readonly icmpCode_leq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_lt: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_neq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_notin: InputMaybe<Scalars['bytes']>;
    readonly icmpType: InputMaybe<Scalars['uint8']>;
    readonly icmpType_geq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_gt: InputMaybe<Scalars['uint8']>;
    readonly icmpType_in: InputMaybe<Scalars['bytes']>;
    readonly icmpType_leq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_lt: InputMaybe<Scalars['uint8']>;
    readonly icmpType_neq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_notin: InputMaybe<Scalars['bytes']>;
    readonly ipDestinationAddress: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_like: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationAddress_notlike: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_geq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_gt: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationSubnet_leq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_like: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_lt: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_neq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationSubnet_notlike: InputMaybe<Scalars['string']>;
    readonly ipFragmentOffset: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_geq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_gt: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipFragmentOffset_leq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_lt: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_neq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipHeaderLength: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_geq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_gt: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipHeaderLength_leq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_lt: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_neq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipMoreFragments: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_geq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_gt: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_in: InputMaybe<Scalars['bytes']>;
    readonly ipMoreFragments_leq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_lt: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_neq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_notin: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol: InputMaybe<Scalars['uint8']>;
    readonly ipProtocolName: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_geq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_gt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_leq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_like: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_lt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_neq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_notlike: InputMaybe<Scalars['string']>;
    readonly ipProtocol_geq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_gt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_in: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol_leq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_lt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_neq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_notin: InputMaybe<Scalars['bytes']>;
    readonly ipSourceAddress: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_like: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceAddress_notlike: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_geq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_gt: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceSubnet_leq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_like: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_lt: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_neq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceSubnet_notlike: InputMaybe<Scalars['string']>;
    readonly ipTotalLength: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_geq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_gt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLengthBuckets_leq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_lt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_neq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLength_geq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_gt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLength_leq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_lt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_neq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTtl: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_geq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_gt: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_in: InputMaybe<Scalars['bytes']>;
    readonly ipTtlBuckets_leq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_lt: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_neq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_notin: InputMaybe<Scalars['bytes']>;
    readonly ipTtl_geq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_gt: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_in: InputMaybe<Scalars['bytes']>;
    readonly ipTtl_leq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_lt: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_neq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Checksum: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_geq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_gt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Checksum_leq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_lt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_neq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4DontFragment: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4DontFragment_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Dscp: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4Dscp_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Ecn: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4Ecn_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Identification: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_geq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_gt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Identification_leq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_lt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_neq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Options: InputMaybe<Scalars['string']>;
    readonly ipv4Options_geq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_gt: InputMaybe<Scalars['string']>;
    readonly ipv4Options_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv4Options_leq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_like: InputMaybe<Scalars['string']>;
    readonly ipv4Options_lt: InputMaybe<Scalars['string']>;
    readonly ipv4Options_neq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv4Options_notlike: InputMaybe<Scalars['string']>;
    readonly ipv6Dscp: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_in: InputMaybe<Scalars['bytes']>;
    readonly ipv6Dscp_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv6Ecn: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_in: InputMaybe<Scalars['bytes']>;
    readonly ipv6Ecn_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv6ExtensionHeaders: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_geq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_gt: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv6ExtensionHeaders_leq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_like: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_lt: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_neq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv6ExtensionHeaders_notlike: InputMaybe<Scalars['string']>;
    readonly ipv6FlowLabel: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_geq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_gt: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6FlowLabel_leq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_lt: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_neq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6Identification: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_geq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_gt: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6Identification_leq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_lt: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_neq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly outcome: InputMaybe<Scalars['string']>;
    readonly outcome_geq: InputMaybe<Scalars['string']>;
    readonly outcome_gt: InputMaybe<Scalars['string']>;
    readonly outcome_in: InputMaybe<readonly Scalars['string'][]>;
    readonly outcome_leq: InputMaybe<Scalars['string']>;
    readonly outcome_like: InputMaybe<Scalars['string']>;
    readonly outcome_lt: InputMaybe<Scalars['string']>;
    readonly outcome_neq: InputMaybe<Scalars['string']>;
    readonly outcome_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly outcome_notlike: InputMaybe<Scalars['string']>;
    readonly ruleId: InputMaybe<Scalars['string']>;
    readonly ruleId_geq: InputMaybe<Scalars['string']>;
    readonly ruleId_gt: InputMaybe<Scalars['string']>;
    readonly ruleId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_leq: InputMaybe<Scalars['string']>;
    readonly ruleId_like: InputMaybe<Scalars['string']>;
    readonly ruleId_lt: InputMaybe<Scalars['string']>;
    readonly ruleId_neq: InputMaybe<Scalars['string']>;
    readonly ruleId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_notlike: InputMaybe<Scalars['string']>;
    readonly rulesetId: InputMaybe<Scalars['string']>;
    readonly rulesetId_geq: InputMaybe<Scalars['string']>;
    readonly rulesetId_gt: InputMaybe<Scalars['string']>;
    readonly rulesetId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_leq: InputMaybe<Scalars['string']>;
    readonly rulesetId_like: InputMaybe<Scalars['string']>;
    readonly rulesetId_lt: InputMaybe<Scalars['string']>;
    readonly rulesetId_neq: InputMaybe<Scalars['string']>;
    readonly rulesetId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceAsn: InputMaybe<Scalars['uint32']>;
    readonly sourceAsnName: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_geq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_gt: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAsnName_leq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_like: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_lt: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_neq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAsnName_notlike: InputMaybe<Scalars['string']>;
    readonly sourceAsn_geq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_gt: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceAsn_leq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_lt: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_neq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceCountry: InputMaybe<Scalars['string']>;
    readonly sourceCountry_geq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_gt: InputMaybe<Scalars['string']>;
    readonly sourceCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceCountry_leq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_like: InputMaybe<Scalars['string']>;
    readonly sourceCountry_lt: InputMaybe<Scalars['string']>;
    readonly sourceCountry_neq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceCountry_notlike: InputMaybe<Scalars['string']>;
    readonly sourceGeohash: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_geq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_gt: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceGeohash_leq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_like: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_lt: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_neq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly sourcePort: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly sourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpAcknowledgementNumber: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpAcknowledgementNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpChecksum: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpDataOffset: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpDataOffset_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpFlags: InputMaybe<Scalars['uint8']>;
    readonly tcpFlagsString: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_geq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_gt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_leq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_like: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_lt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_neq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_notlike: InputMaybe<Scalars['string']>;
    readonly tcpFlags_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_in: InputMaybe<Scalars['bytes']>;
    readonly tcpFlags_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_notin: InputMaybe<Scalars['bytes']>;
    readonly tcpMss: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpMss_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpOptions: InputMaybe<Scalars['string']>;
    readonly tcpOptions_geq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_gt: InputMaybe<Scalars['string']>;
    readonly tcpOptions_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpOptions_leq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_like: InputMaybe<Scalars['string']>;
    readonly tcpOptions_lt: InputMaybe<Scalars['string']>;
    readonly tcpOptions_neq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpOptions_notlike: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_geq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_gt: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpSackBlocks_leq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_like: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_lt: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_neq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpSackBlocks_notlike: InputMaybe<Scalars['string']>;
    readonly tcpSackPermitted: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_in: InputMaybe<Scalars['bytes']>;
    readonly tcpSackPermitted_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_notin: InputMaybe<Scalars['bytes']>;
    readonly tcpSequenceNumber: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpSequenceNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampEcr: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampEcr_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampValue: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampValue_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpUrgentPointer: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpUrgentPointer_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowScale: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowScale_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowSize: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowSize_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpChecksum: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpPayloadLength: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_geq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_gt: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpPayloadLength_leq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_lt: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_neq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly verdict: InputMaybe<Scalars['string']>;
    readonly verdict_geq: InputMaybe<Scalars['string']>;
    readonly verdict_gt: InputMaybe<Scalars['string']>;
    readonly verdict_in: InputMaybe<readonly Scalars['string'][]>;
    readonly verdict_leq: InputMaybe<Scalars['string']>;
    readonly verdict_like: InputMaybe<Scalars['string']>;
    readonly verdict_lt: InputMaybe<Scalars['string']>;
    readonly verdict_neq: InputMaybe<Scalars['string']>;
    readonly verdict_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly verdict_notlike: InputMaybe<Scalars['string']>;
}

type AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsOrderBy =
  /** avg(bitRateDay) ascending */
  | 'avg_bitRateDay_ASC'
  /** avg(bitRateDay) descending */
  | 'avg_bitRateDay_DESC'
  /** avg(bitRateFifteenMinutes) ascending */
  | 'avg_bitRateFifteenMinutes_ASC'
  /** avg(bitRateFifteenMinutes) descending */
  | 'avg_bitRateFifteenMinutes_DESC'
  /** avg(bitRateFiveMinutes) ascending */
  | 'avg_bitRateFiveMinutes_ASC'
  /** avg(bitRateFiveMinutes) descending */
  | 'avg_bitRateFiveMinutes_DESC'
  /** avg(bitRateHour) ascending */
  | 'avg_bitRateHour_ASC'
  /** avg(bitRateHour) descending */
  | 'avg_bitRateHour_DESC'
  /** avg(bitRateMinute) ascending */
  | 'avg_bitRateMinute_ASC'
  /** avg(bitRateMinute) descending */
  | 'avg_bitRateMinute_DESC'
  /** avg(bitRateTenSeconds) ascending */
  | 'avg_bitRateTenSeconds_ASC'
  /** avg(bitRateTenSeconds) descending */
  | 'avg_bitRateTenSeconds_DESC'
  /** avg(bitRate) ascending */
  | 'avg_bitRate_ASC'
  /** avg(bitRate) descending */
  | 'avg_bitRate_DESC'
  /** avg(packetRateDay) ascending */
  | 'avg_packetRateDay_ASC'
  /** avg(packetRateDay) descending */
  | 'avg_packetRateDay_DESC'
  /** avg(packetRateFifteenMinutes) ascending */
  | 'avg_packetRateFifteenMinutes_ASC'
  /** avg(packetRateFifteenMinutes) descending */
  | 'avg_packetRateFifteenMinutes_DESC'
  /** avg(packetRateFiveMinutes) ascending */
  | 'avg_packetRateFiveMinutes_ASC'
  /** avg(packetRateFiveMinutes) descending */
  | 'avg_packetRateFiveMinutes_DESC'
  /** avg(packetRateHour) ascending */
  | 'avg_packetRateHour_ASC'
  /** avg(packetRateHour) descending */
  | 'avg_packetRateHour_DESC'
  /** avg(packetRateMinute) ascending */
  | 'avg_packetRateMinute_ASC'
  /** avg(packetRateMinute) descending */
  | 'avg_packetRateMinute_DESC'
  /** avg(packetRateTenSeconds) ascending */
  | 'avg_packetRateTenSeconds_ASC'
  /** avg(packetRateTenSeconds) descending */
  | 'avg_packetRateTenSeconds_DESC'
  /** avg(packetRate) ascending */
  | 'avg_packetRate_ASC'
  /** avg(packetRate) descending */
  | 'avg_packetRate_DESC'
  /** coloCity ascending */
  | 'coloCity_ASC'
  /** coloCity descending */
  | 'coloCity_DESC'
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** coloCountry ascending */
  | 'coloCountry_ASC'
  /** coloCountry descending */
  | 'coloCountry_DESC'
  /** coloGeohash ascending */
  | 'coloGeohash_ASC'
  /** coloGeohash descending */
  | 'coloGeohash_DESC'
  /** coloName ascending */
  | 'coloName_ASC'
  /** coloName descending */
  | 'coloName_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetimeTenSeconds ascending */
  | 'datetimeTenSeconds_ASC'
  /** datetimeTenSeconds descending */
  | 'datetimeTenSeconds_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** destinationAsnName ascending */
  | 'destinationAsnName_ASC'
  /** destinationAsnName descending */
  | 'destinationAsnName_DESC'
  /** destinationAsn ascending */
  | 'destinationAsn_ASC'
  /** destinationAsn descending */
  | 'destinationAsn_DESC'
  /** destinationCountry ascending */
  | 'destinationCountry_ASC'
  /** destinationCountry descending */
  | 'destinationCountry_DESC'
  /** destinationGeohash ascending */
  | 'destinationGeohash_ASC'
  /** destinationGeohash descending */
  | 'destinationGeohash_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** direction ascending */
  | 'direction_ASC'
  /** direction descending */
  | 'direction_DESC'
  /** ethertype ascending */
  | 'ethertype_ASC'
  /** ethertype descending */
  | 'ethertype_DESC'
  /** greChecksum ascending */
  | 'greChecksum_ASC'
  /** greChecksum descending */
  | 'greChecksum_DESC'
  /** greEthertype ascending */
  | 'greEthertype_ASC'
  /** greEthertype descending */
  | 'greEthertype_DESC'
  /** greHeaderLength ascending */
  | 'greHeaderLength_ASC'
  /** greHeaderLength descending */
  | 'greHeaderLength_DESC'
  /** greKey ascending */
  | 'greKey_ASC'
  /** greKey descending */
  | 'greKey_DESC'
  /** greSequenceNumber ascending */
  | 'greSequenceNumber_ASC'
  /** greSequenceNumber descending */
  | 'greSequenceNumber_DESC'
  /** greVersion ascending */
  | 'greVersion_ASC'
  /** greVersion descending */
  | 'greVersion_DESC'
  /** icmpChecksum ascending */
  | 'icmpChecksum_ASC'
  /** icmpChecksum descending */
  | 'icmpChecksum_DESC'
  /** icmpCode ascending */
  | 'icmpCode_ASC'
  /** icmpCode descending */
  | 'icmpCode_DESC'
  /** icmpType ascending */
  | 'icmpType_ASC'
  /** icmpType descending */
  | 'icmpType_DESC'
  /** ipDestinationAddress ascending */
  | 'ipDestinationAddress_ASC'
  /** ipDestinationAddress descending */
  | 'ipDestinationAddress_DESC'
  /** ipDestinationSubnet ascending */
  | 'ipDestinationSubnet_ASC'
  /** ipDestinationSubnet descending */
  | 'ipDestinationSubnet_DESC'
  /** ipFragmentOffset ascending */
  | 'ipFragmentOffset_ASC'
  /** ipFragmentOffset descending */
  | 'ipFragmentOffset_DESC'
  /** ipHeaderLength ascending */
  | 'ipHeaderLength_ASC'
  /** ipHeaderLength descending */
  | 'ipHeaderLength_DESC'
  /** ipMoreFragments ascending */
  | 'ipMoreFragments_ASC'
  /** ipMoreFragments descending */
  | 'ipMoreFragments_DESC'
  /** ipProtocolName ascending */
  | 'ipProtocolName_ASC'
  /** ipProtocolName descending */
  | 'ipProtocolName_DESC'
  /** ipProtocol ascending */
  | 'ipProtocol_ASC'
  /** ipProtocol descending */
  | 'ipProtocol_DESC'
  /** ipSourceAddress ascending */
  | 'ipSourceAddress_ASC'
  /** ipSourceAddress descending */
  | 'ipSourceAddress_DESC'
  /** ipSourceSubnet ascending */
  | 'ipSourceSubnet_ASC'
  /** ipSourceSubnet descending */
  | 'ipSourceSubnet_DESC'
  /** ipTotalLengthBuckets ascending */
  | 'ipTotalLengthBuckets_ASC'
  /** ipTotalLengthBuckets descending */
  | 'ipTotalLengthBuckets_DESC'
  /** ipTotalLength ascending */
  | 'ipTotalLength_ASC'
  /** ipTotalLength descending */
  | 'ipTotalLength_DESC'
  /** ipTtlBuckets ascending */
  | 'ipTtlBuckets_ASC'
  /** ipTtlBuckets descending */
  | 'ipTtlBuckets_DESC'
  /** ipTtl ascending */
  | 'ipTtl_ASC'
  /** ipTtl descending */
  | 'ipTtl_DESC'
  /** ipv4Checksum ascending */
  | 'ipv4Checksum_ASC'
  /** ipv4Checksum descending */
  | 'ipv4Checksum_DESC'
  /** ipv4DontFragment ascending */
  | 'ipv4DontFragment_ASC'
  /** ipv4DontFragment descending */
  | 'ipv4DontFragment_DESC'
  /** ipv4Dscp ascending */
  | 'ipv4Dscp_ASC'
  /** ipv4Dscp descending */
  | 'ipv4Dscp_DESC'
  /** ipv4Ecn ascending */
  | 'ipv4Ecn_ASC'
  /** ipv4Ecn descending */
  | 'ipv4Ecn_DESC'
  /** ipv4Identification ascending */
  | 'ipv4Identification_ASC'
  /** ipv4Identification descending */
  | 'ipv4Identification_DESC'
  /** ipv4Options ascending */
  | 'ipv4Options_ASC'
  /** ipv4Options descending */
  | 'ipv4Options_DESC'
  /** ipv6Dscp ascending */
  | 'ipv6Dscp_ASC'
  /** ipv6Dscp descending */
  | 'ipv6Dscp_DESC'
  /** ipv6Ecn ascending */
  | 'ipv6Ecn_ASC'
  /** ipv6Ecn descending */
  | 'ipv6Ecn_DESC'
  /** ipv6ExtensionHeaders ascending */
  | 'ipv6ExtensionHeaders_ASC'
  /** ipv6ExtensionHeaders descending */
  | 'ipv6ExtensionHeaders_DESC'
  /** ipv6FlowLabel ascending */
  | 'ipv6FlowLabel_ASC'
  /** ipv6FlowLabel descending */
  | 'ipv6FlowLabel_DESC'
  /** ipv6Identification ascending */
  | 'ipv6Identification_ASC'
  /** ipv6Identification descending */
  | 'ipv6Identification_DESC'
  /** outcome ascending */
  | 'outcome_ASC'
  /** outcome descending */
  | 'outcome_DESC'
  /** ruleId ascending */
  | 'ruleId_ASC'
  /** ruleId descending */
  | 'ruleId_DESC'
  /** rulesetId ascending */
  | 'rulesetId_ASC'
  /** rulesetId descending */
  | 'rulesetId_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** sourceAsnName ascending */
  | 'sourceAsnName_ASC'
  /** sourceAsnName descending */
  | 'sourceAsnName_DESC'
  /** sourceAsn ascending */
  | 'sourceAsn_ASC'
  /** sourceAsn descending */
  | 'sourceAsn_DESC'
  /** sourceCountry ascending */
  | 'sourceCountry_ASC'
  /** sourceCountry descending */
  | 'sourceCountry_DESC'
  /** sourceGeohash ascending */
  | 'sourceGeohash_ASC'
  /** sourceGeohash descending */
  | 'sourceGeohash_DESC'
  /** sourcePort ascending */
  | 'sourcePort_ASC'
  /** sourcePort descending */
  | 'sourcePort_DESC'
  /** sum(bits) ascending */
  | 'sum_bits_ASC'
  /** sum(bits) descending */
  | 'sum_bits_DESC'
  /** sum(packets) ascending */
  | 'sum_packets_ASC'
  /** sum(packets) descending */
  | 'sum_packets_DESC'
  /** system ascending */
  | 'system_ASC'
  /** system descending */
  | 'system_DESC'
  /** tcpAcknowledgementNumber ascending */
  | 'tcpAcknowledgementNumber_ASC'
  /** tcpAcknowledgementNumber descending */
  | 'tcpAcknowledgementNumber_DESC'
  /** tcpChecksum ascending */
  | 'tcpChecksum_ASC'
  /** tcpChecksum descending */
  | 'tcpChecksum_DESC'
  /** tcpDataOffset ascending */
  | 'tcpDataOffset_ASC'
  /** tcpDataOffset descending */
  | 'tcpDataOffset_DESC'
  /** tcpFlagsString ascending */
  | 'tcpFlagsString_ASC'
  /** tcpFlagsString descending */
  | 'tcpFlagsString_DESC'
  /** tcpFlags ascending */
  | 'tcpFlags_ASC'
  /** tcpFlags descending */
  | 'tcpFlags_DESC'
  /** tcpMss ascending */
  | 'tcpMss_ASC'
  /** tcpMss descending */
  | 'tcpMss_DESC'
  /** tcpOptions ascending */
  | 'tcpOptions_ASC'
  /** tcpOptions descending */
  | 'tcpOptions_DESC'
  /** tcpSackBlocks ascending */
  | 'tcpSackBlocks_ASC'
  /** tcpSackBlocks descending */
  | 'tcpSackBlocks_DESC'
  /** tcpSackPermitted ascending */
  | 'tcpSackPermitted_ASC'
  /** tcpSackPermitted descending */
  | 'tcpSackPermitted_DESC'
  /** tcpSequenceNumber ascending */
  | 'tcpSequenceNumber_ASC'
  /** tcpSequenceNumber descending */
  | 'tcpSequenceNumber_DESC'
  /** tcpTimestampEcr ascending */
  | 'tcpTimestampEcr_ASC'
  /** tcpTimestampEcr descending */
  | 'tcpTimestampEcr_DESC'
  /** tcpTimestampValue ascending */
  | 'tcpTimestampValue_ASC'
  /** tcpTimestampValue descending */
  | 'tcpTimestampValue_DESC'
  /** tcpUrgentPointer ascending */
  | 'tcpUrgentPointer_ASC'
  /** tcpUrgentPointer descending */
  | 'tcpUrgentPointer_DESC'
  /** tcpWindowScale ascending */
  | 'tcpWindowScale_ASC'
  /** tcpWindowScale descending */
  | 'tcpWindowScale_DESC'
  /** tcpWindowSize ascending */
  | 'tcpWindowSize_ASC'
  /** tcpWindowSize descending */
  | 'tcpWindowSize_DESC'
  /** udpChecksum ascending */
  | 'udpChecksum_ASC'
  /** udpChecksum descending */
  | 'udpChecksum_DESC'
  /** udpPayloadLength ascending */
  | 'udpPayloadLength_ASC'
  /** udpPayloadLength descending */
  | 'udpPayloadLength_DESC'
  /** verdict ascending */
  | 'verdict_ASC'
  /** verdict descending */
  | 'verdict_DESC';

interface AccountMagicFirewallSamplesAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountMagicFirewallSamplesAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountMagicFirewallSamplesAdaptiveGroupsFilter_InputObject[]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly ruleId: InputMaybe<Scalars['string']>;
    readonly ruleId_geq: InputMaybe<Scalars['string']>;
    readonly ruleId_gt: InputMaybe<Scalars['string']>;
    readonly ruleId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_leq: InputMaybe<Scalars['string']>;
    readonly ruleId_like: InputMaybe<Scalars['string']>;
    readonly ruleId_lt: InputMaybe<Scalars['string']>;
    readonly ruleId_neq: InputMaybe<Scalars['string']>;
    readonly ruleId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_notlike: InputMaybe<Scalars['string']>;
}

type AccountMagicFirewallSamplesAdaptiveGroupsOrderBy =
  /** datetimeFiveMinute ascending */
  | 'datetimeFiveMinute_ASC'
  /** datetimeFiveMinute descending */
  | 'datetimeFiveMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** ruleId ascending */
  | 'ruleId_ASC'
  /** ruleId descending */
  | 'ruleId_DESC'
  /** sum(bits) ascending */
  | 'sum_bits_ASC'
  /** sum(bits) descending */
  | 'sum_bits_DESC'
  /** sum(packets) ascending */
  | 'sum_packets_ASC'
  /** sum(packets) descending */
  | 'sum_packets_DESC'
  /** system ascending */
  | 'system_ASC'
  /** system descending */
  | 'system_DESC';

interface AccountMagicTransitNetworkAnalyticsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountMagicTransitNetworkAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountMagicTransitNetworkAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly coloCity: InputMaybe<Scalars['string']>;
    readonly coloCity_geq: InputMaybe<Scalars['string']>;
    readonly coloCity_gt: InputMaybe<Scalars['string']>;
    readonly coloCity_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_leq: InputMaybe<Scalars['string']>;
    readonly coloCity_like: InputMaybe<Scalars['string']>;
    readonly coloCity_lt: InputMaybe<Scalars['string']>;
    readonly coloCity_neq: InputMaybe<Scalars['string']>;
    readonly coloCity_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_notlike: InputMaybe<Scalars['string']>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly coloCountry: InputMaybe<Scalars['string']>;
    readonly coloCountry_geq: InputMaybe<Scalars['string']>;
    readonly coloCountry_gt: InputMaybe<Scalars['string']>;
    readonly coloCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_leq: InputMaybe<Scalars['string']>;
    readonly coloCountry_like: InputMaybe<Scalars['string']>;
    readonly coloCountry_lt: InputMaybe<Scalars['string']>;
    readonly coloCountry_neq: InputMaybe<Scalars['string']>;
    readonly coloCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_notlike: InputMaybe<Scalars['string']>;
    readonly coloGeohash: InputMaybe<Scalars['string']>;
    readonly coloGeohash_geq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_gt: InputMaybe<Scalars['string']>;
    readonly coloGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloGeohash_leq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_like: InputMaybe<Scalars['string']>;
    readonly coloGeohash_lt: InputMaybe<Scalars['string']>;
    readonly coloGeohash_neq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly coloName: InputMaybe<Scalars['string']>;
    readonly coloName_geq: InputMaybe<Scalars['string']>;
    readonly coloName_gt: InputMaybe<Scalars['string']>;
    readonly coloName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloName_leq: InputMaybe<Scalars['string']>;
    readonly coloName_like: InputMaybe<Scalars['string']>;
    readonly coloName_lt: InputMaybe<Scalars['string']>;
    readonly coloName_neq: InputMaybe<Scalars['string']>;
    readonly coloName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationAsn: InputMaybe<Scalars['uint32']>;
    readonly destinationAsnName: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_geq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_gt: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAsnName_leq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_like: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_lt: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_neq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAsnName_notlike: InputMaybe<Scalars['string']>;
    readonly destinationAsn_geq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_gt: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly destinationAsn_leq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_lt: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_neq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly destinationCountry: InputMaybe<Scalars['string']>;
    readonly destinationCountry_geq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_gt: InputMaybe<Scalars['string']>;
    readonly destinationCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationCountry_leq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_like: InputMaybe<Scalars['string']>;
    readonly destinationCountry_lt: InputMaybe<Scalars['string']>;
    readonly destinationCountry_neq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationCountry_notlike: InputMaybe<Scalars['string']>;
    readonly destinationGeohash: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_geq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_gt: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationGeohash_leq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_like: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_lt: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_neq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly direction: InputMaybe<Scalars['string']>;
    readonly direction_geq: InputMaybe<Scalars['string']>;
    readonly direction_gt: InputMaybe<Scalars['string']>;
    readonly direction_in: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_leq: InputMaybe<Scalars['string']>;
    readonly direction_like: InputMaybe<Scalars['string']>;
    readonly direction_lt: InputMaybe<Scalars['string']>;
    readonly direction_neq: InputMaybe<Scalars['string']>;
    readonly direction_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_notlike: InputMaybe<Scalars['string']>;
    readonly ethertype: InputMaybe<Scalars['uint16']>;
    readonly ethertype_geq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_gt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ethertype_leq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_lt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_neq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greChecksum: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greEthertype: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_geq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_gt: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greEthertype_leq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_lt: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_neq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greHeaderLength: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_geq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_gt: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greHeaderLength_leq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_lt: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_neq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greKey: InputMaybe<Scalars['uint32']>;
    readonly greKey_geq: InputMaybe<Scalars['uint32']>;
    readonly greKey_gt: InputMaybe<Scalars['uint32']>;
    readonly greKey_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greKey_leq: InputMaybe<Scalars['uint32']>;
    readonly greKey_lt: InputMaybe<Scalars['uint32']>;
    readonly greKey_neq: InputMaybe<Scalars['uint32']>;
    readonly greKey_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greSequenceNumber: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greSequenceNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greVersion: InputMaybe<Scalars['uint8']>;
    readonly greVersion_geq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_gt: InputMaybe<Scalars['uint8']>;
    readonly greVersion_in: InputMaybe<Scalars['bytes']>;
    readonly greVersion_leq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_lt: InputMaybe<Scalars['uint8']>;
    readonly greVersion_neq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_notin: InputMaybe<Scalars['bytes']>;
    readonly icmpChecksum: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly icmpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly icmpCode: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_geq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_gt: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_in: InputMaybe<Scalars['bytes']>;
    readonly icmpCode_leq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_lt: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_neq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_notin: InputMaybe<Scalars['bytes']>;
    readonly icmpType: InputMaybe<Scalars['uint8']>;
    readonly icmpType_geq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_gt: InputMaybe<Scalars['uint8']>;
    readonly icmpType_in: InputMaybe<Scalars['bytes']>;
    readonly icmpType_leq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_lt: InputMaybe<Scalars['uint8']>;
    readonly icmpType_neq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_notin: InputMaybe<Scalars['bytes']>;
    readonly ipDestinationAddress: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_like: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationAddress_notlike: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_geq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_gt: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationSubnet_leq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_like: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_lt: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_neq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationSubnet_notlike: InputMaybe<Scalars['string']>;
    readonly ipFragmentOffset: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_geq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_gt: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipFragmentOffset_leq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_lt: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_neq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipHeaderLength: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_geq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_gt: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipHeaderLength_leq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_lt: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_neq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipMoreFragments: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_geq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_gt: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_in: InputMaybe<Scalars['bytes']>;
    readonly ipMoreFragments_leq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_lt: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_neq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_notin: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol: InputMaybe<Scalars['uint8']>;
    readonly ipProtocolName: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_geq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_gt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_leq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_like: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_lt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_neq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_notlike: InputMaybe<Scalars['string']>;
    readonly ipProtocol_geq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_gt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_in: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol_leq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_lt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_neq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_notin: InputMaybe<Scalars['bytes']>;
    readonly ipSourceAddress: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_like: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceAddress_notlike: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_geq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_gt: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceSubnet_leq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_like: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_lt: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_neq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceSubnet_notlike: InputMaybe<Scalars['string']>;
    readonly ipTotalLength: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_geq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_gt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLengthBuckets_leq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_lt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_neq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLength_geq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_gt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLength_leq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_lt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_neq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTtl: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_geq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_gt: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_in: InputMaybe<Scalars['bytes']>;
    readonly ipTtlBuckets_leq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_lt: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_neq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_notin: InputMaybe<Scalars['bytes']>;
    readonly ipTtl_geq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_gt: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_in: InputMaybe<Scalars['bytes']>;
    readonly ipTtl_leq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_lt: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_neq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Checksum: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_geq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_gt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Checksum_leq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_lt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_neq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4DontFragment: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4DontFragment_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Dscp: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4Dscp_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Ecn: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4Ecn_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Identification: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_geq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_gt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Identification_leq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_lt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_neq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Options: InputMaybe<Scalars['string']>;
    readonly ipv4Options_geq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_gt: InputMaybe<Scalars['string']>;
    readonly ipv4Options_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv4Options_leq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_like: InputMaybe<Scalars['string']>;
    readonly ipv4Options_lt: InputMaybe<Scalars['string']>;
    readonly ipv4Options_neq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv4Options_notlike: InputMaybe<Scalars['string']>;
    readonly ipv6Dscp: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_in: InputMaybe<Scalars['bytes']>;
    readonly ipv6Dscp_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv6Ecn: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_in: InputMaybe<Scalars['bytes']>;
    readonly ipv6Ecn_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv6ExtensionHeaders: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_geq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_gt: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv6ExtensionHeaders_leq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_like: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_lt: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_neq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv6ExtensionHeaders_notlike: InputMaybe<Scalars['string']>;
    readonly ipv6FlowLabel: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_geq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_gt: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6FlowLabel_leq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_lt: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_neq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6Identification: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_geq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_gt: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6Identification_leq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_lt: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_neq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly mitigationSystem: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_geq: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_gt: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationSystem_leq: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_like: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_lt: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_neq: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationSystem_notlike: InputMaybe<Scalars['string']>;
    readonly outcome: InputMaybe<Scalars['string']>;
    readonly outcome_geq: InputMaybe<Scalars['string']>;
    readonly outcome_gt: InputMaybe<Scalars['string']>;
    readonly outcome_in: InputMaybe<readonly Scalars['string'][]>;
    readonly outcome_leq: InputMaybe<Scalars['string']>;
    readonly outcome_like: InputMaybe<Scalars['string']>;
    readonly outcome_lt: InputMaybe<Scalars['string']>;
    readonly outcome_neq: InputMaybe<Scalars['string']>;
    readonly outcome_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly outcome_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceAsn: InputMaybe<Scalars['uint32']>;
    readonly sourceAsnName: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_geq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_gt: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAsnName_leq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_like: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_lt: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_neq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAsnName_notlike: InputMaybe<Scalars['string']>;
    readonly sourceAsn_geq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_gt: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceAsn_leq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_lt: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_neq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceCountry: InputMaybe<Scalars['string']>;
    readonly sourceCountry_geq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_gt: InputMaybe<Scalars['string']>;
    readonly sourceCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceCountry_leq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_like: InputMaybe<Scalars['string']>;
    readonly sourceCountry_lt: InputMaybe<Scalars['string']>;
    readonly sourceCountry_neq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceCountry_notlike: InputMaybe<Scalars['string']>;
    readonly sourceGeohash: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_geq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_gt: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceGeohash_leq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_like: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_lt: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_neq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly sourcePort: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly sourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpAcknowledgementNumber: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpAcknowledgementNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpChecksum: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpDataOffset: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpDataOffset_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpFlags: InputMaybe<Scalars['uint8']>;
    readonly tcpFlagsString: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_geq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_gt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_leq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_like: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_lt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_neq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_notlike: InputMaybe<Scalars['string']>;
    readonly tcpFlags_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_in: InputMaybe<Scalars['bytes']>;
    readonly tcpFlags_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_notin: InputMaybe<Scalars['bytes']>;
    readonly tcpMss: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpMss_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpOptions: InputMaybe<Scalars['string']>;
    readonly tcpOptions_geq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_gt: InputMaybe<Scalars['string']>;
    readonly tcpOptions_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpOptions_leq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_like: InputMaybe<Scalars['string']>;
    readonly tcpOptions_lt: InputMaybe<Scalars['string']>;
    readonly tcpOptions_neq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpOptions_notlike: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_geq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_gt: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpSackBlocks_leq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_like: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_lt: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_neq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpSackBlocks_notlike: InputMaybe<Scalars['string']>;
    readonly tcpSackPermitted: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_in: InputMaybe<Scalars['bytes']>;
    readonly tcpSackPermitted_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_notin: InputMaybe<Scalars['bytes']>;
    readonly tcpSequenceNumber: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpSequenceNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampEcr: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampEcr_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampValue: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampValue_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpUrgentPointer: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpUrgentPointer_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowScale: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowScale_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowSize: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowSize_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpChecksum: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpPayloadLength: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_geq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_gt: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpPayloadLength_leq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_lt: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_neq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
}

type AccountMagicTransitNetworkAnalyticsAdaptiveGroupsOrderBy =
  /** avg(bitRateDay) ascending */
  | 'avg_bitRateDay_ASC'
  /** avg(bitRateDay) descending */
  | 'avg_bitRateDay_DESC'
  /** avg(bitRateFifteenMinutes) ascending */
  | 'avg_bitRateFifteenMinutes_ASC'
  /** avg(bitRateFifteenMinutes) descending */
  | 'avg_bitRateFifteenMinutes_DESC'
  /** avg(bitRateFiveMinutes) ascending */
  | 'avg_bitRateFiveMinutes_ASC'
  /** avg(bitRateFiveMinutes) descending */
  | 'avg_bitRateFiveMinutes_DESC'
  /** avg(bitRateHour) ascending */
  | 'avg_bitRateHour_ASC'
  /** avg(bitRateHour) descending */
  | 'avg_bitRateHour_DESC'
  /** avg(bitRateMinute) ascending */
  | 'avg_bitRateMinute_ASC'
  /** avg(bitRateMinute) descending */
  | 'avg_bitRateMinute_DESC'
  /** avg(bitRateTenSeconds) ascending */
  | 'avg_bitRateTenSeconds_ASC'
  /** avg(bitRateTenSeconds) descending */
  | 'avg_bitRateTenSeconds_DESC'
  /** avg(bitRate) ascending */
  | 'avg_bitRate_ASC'
  /** avg(bitRate) descending */
  | 'avg_bitRate_DESC'
  /** avg(packetRateDay) ascending */
  | 'avg_packetRateDay_ASC'
  /** avg(packetRateDay) descending */
  | 'avg_packetRateDay_DESC'
  /** avg(packetRateFifteenMinutes) ascending */
  | 'avg_packetRateFifteenMinutes_ASC'
  /** avg(packetRateFifteenMinutes) descending */
  | 'avg_packetRateFifteenMinutes_DESC'
  /** avg(packetRateFiveMinutes) ascending */
  | 'avg_packetRateFiveMinutes_ASC'
  /** avg(packetRateFiveMinutes) descending */
  | 'avg_packetRateFiveMinutes_DESC'
  /** avg(packetRateHour) ascending */
  | 'avg_packetRateHour_ASC'
  /** avg(packetRateHour) descending */
  | 'avg_packetRateHour_DESC'
  /** avg(packetRateMinute) ascending */
  | 'avg_packetRateMinute_ASC'
  /** avg(packetRateMinute) descending */
  | 'avg_packetRateMinute_DESC'
  /** avg(packetRateTenSeconds) ascending */
  | 'avg_packetRateTenSeconds_ASC'
  /** avg(packetRateTenSeconds) descending */
  | 'avg_packetRateTenSeconds_DESC'
  /** avg(packetRate) ascending */
  | 'avg_packetRate_ASC'
  /** avg(packetRate) descending */
  | 'avg_packetRate_DESC'
  /** coloCity ascending */
  | 'coloCity_ASC'
  /** coloCity descending */
  | 'coloCity_DESC'
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** coloCountry ascending */
  | 'coloCountry_ASC'
  /** coloCountry descending */
  | 'coloCountry_DESC'
  /** coloGeohash ascending */
  | 'coloGeohash_ASC'
  /** coloGeohash descending */
  | 'coloGeohash_DESC'
  /** coloName ascending */
  | 'coloName_ASC'
  /** coloName descending */
  | 'coloName_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetimeTenSeconds ascending */
  | 'datetimeTenSeconds_ASC'
  /** datetimeTenSeconds descending */
  | 'datetimeTenSeconds_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** destinationAsnName ascending */
  | 'destinationAsnName_ASC'
  /** destinationAsnName descending */
  | 'destinationAsnName_DESC'
  /** destinationAsn ascending */
  | 'destinationAsn_ASC'
  /** destinationAsn descending */
  | 'destinationAsn_DESC'
  /** destinationCountry ascending */
  | 'destinationCountry_ASC'
  /** destinationCountry descending */
  | 'destinationCountry_DESC'
  /** destinationGeohash ascending */
  | 'destinationGeohash_ASC'
  /** destinationGeohash descending */
  | 'destinationGeohash_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** direction ascending */
  | 'direction_ASC'
  /** direction descending */
  | 'direction_DESC'
  /** ethertype ascending */
  | 'ethertype_ASC'
  /** ethertype descending */
  | 'ethertype_DESC'
  /** greChecksum ascending */
  | 'greChecksum_ASC'
  /** greChecksum descending */
  | 'greChecksum_DESC'
  /** greEthertype ascending */
  | 'greEthertype_ASC'
  /** greEthertype descending */
  | 'greEthertype_DESC'
  /** greHeaderLength ascending */
  | 'greHeaderLength_ASC'
  /** greHeaderLength descending */
  | 'greHeaderLength_DESC'
  /** greKey ascending */
  | 'greKey_ASC'
  /** greKey descending */
  | 'greKey_DESC'
  /** greSequenceNumber ascending */
  | 'greSequenceNumber_ASC'
  /** greSequenceNumber descending */
  | 'greSequenceNumber_DESC'
  /** greVersion ascending */
  | 'greVersion_ASC'
  /** greVersion descending */
  | 'greVersion_DESC'
  /** icmpChecksum ascending */
  | 'icmpChecksum_ASC'
  /** icmpChecksum descending */
  | 'icmpChecksum_DESC'
  /** icmpCode ascending */
  | 'icmpCode_ASC'
  /** icmpCode descending */
  | 'icmpCode_DESC'
  /** icmpType ascending */
  | 'icmpType_ASC'
  /** icmpType descending */
  | 'icmpType_DESC'
  /** ipDestinationAddress ascending */
  | 'ipDestinationAddress_ASC'
  /** ipDestinationAddress descending */
  | 'ipDestinationAddress_DESC'
  /** ipDestinationSubnet ascending */
  | 'ipDestinationSubnet_ASC'
  /** ipDestinationSubnet descending */
  | 'ipDestinationSubnet_DESC'
  /** ipFragmentOffset ascending */
  | 'ipFragmentOffset_ASC'
  /** ipFragmentOffset descending */
  | 'ipFragmentOffset_DESC'
  /** ipHeaderLength ascending */
  | 'ipHeaderLength_ASC'
  /** ipHeaderLength descending */
  | 'ipHeaderLength_DESC'
  /** ipMoreFragments ascending */
  | 'ipMoreFragments_ASC'
  /** ipMoreFragments descending */
  | 'ipMoreFragments_DESC'
  /** ipProtocolName ascending */
  | 'ipProtocolName_ASC'
  /** ipProtocolName descending */
  | 'ipProtocolName_DESC'
  /** ipProtocol ascending */
  | 'ipProtocol_ASC'
  /** ipProtocol descending */
  | 'ipProtocol_DESC'
  /** ipSourceAddress ascending */
  | 'ipSourceAddress_ASC'
  /** ipSourceAddress descending */
  | 'ipSourceAddress_DESC'
  /** ipSourceSubnet ascending */
  | 'ipSourceSubnet_ASC'
  /** ipSourceSubnet descending */
  | 'ipSourceSubnet_DESC'
  /** ipTotalLengthBuckets ascending */
  | 'ipTotalLengthBuckets_ASC'
  /** ipTotalLengthBuckets descending */
  | 'ipTotalLengthBuckets_DESC'
  /** ipTotalLength ascending */
  | 'ipTotalLength_ASC'
  /** ipTotalLength descending */
  | 'ipTotalLength_DESC'
  /** ipTtlBuckets ascending */
  | 'ipTtlBuckets_ASC'
  /** ipTtlBuckets descending */
  | 'ipTtlBuckets_DESC'
  /** ipTtl ascending */
  | 'ipTtl_ASC'
  /** ipTtl descending */
  | 'ipTtl_DESC'
  /** ipv4Checksum ascending */
  | 'ipv4Checksum_ASC'
  /** ipv4Checksum descending */
  | 'ipv4Checksum_DESC'
  /** ipv4DontFragment ascending */
  | 'ipv4DontFragment_ASC'
  /** ipv4DontFragment descending */
  | 'ipv4DontFragment_DESC'
  /** ipv4Dscp ascending */
  | 'ipv4Dscp_ASC'
  /** ipv4Dscp descending */
  | 'ipv4Dscp_DESC'
  /** ipv4Ecn ascending */
  | 'ipv4Ecn_ASC'
  /** ipv4Ecn descending */
  | 'ipv4Ecn_DESC'
  /** ipv4Identification ascending */
  | 'ipv4Identification_ASC'
  /** ipv4Identification descending */
  | 'ipv4Identification_DESC'
  /** ipv4Options ascending */
  | 'ipv4Options_ASC'
  /** ipv4Options descending */
  | 'ipv4Options_DESC'
  /** ipv6Dscp ascending */
  | 'ipv6Dscp_ASC'
  /** ipv6Dscp descending */
  | 'ipv6Dscp_DESC'
  /** ipv6Ecn ascending */
  | 'ipv6Ecn_ASC'
  /** ipv6Ecn descending */
  | 'ipv6Ecn_DESC'
  /** ipv6ExtensionHeaders ascending */
  | 'ipv6ExtensionHeaders_ASC'
  /** ipv6ExtensionHeaders descending */
  | 'ipv6ExtensionHeaders_DESC'
  /** ipv6FlowLabel ascending */
  | 'ipv6FlowLabel_ASC'
  /** ipv6FlowLabel descending */
  | 'ipv6FlowLabel_DESC'
  /** ipv6Identification ascending */
  | 'ipv6Identification_ASC'
  /** ipv6Identification descending */
  | 'ipv6Identification_DESC'
  /** mitigationSystem ascending */
  | 'mitigationSystem_ASC'
  /** mitigationSystem descending */
  | 'mitigationSystem_DESC'
  /** outcome ascending */
  | 'outcome_ASC'
  /** outcome descending */
  | 'outcome_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** sourceAsnName ascending */
  | 'sourceAsnName_ASC'
  /** sourceAsnName descending */
  | 'sourceAsnName_DESC'
  /** sourceAsn ascending */
  | 'sourceAsn_ASC'
  /** sourceAsn descending */
  | 'sourceAsn_DESC'
  /** sourceCountry ascending */
  | 'sourceCountry_ASC'
  /** sourceCountry descending */
  | 'sourceCountry_DESC'
  /** sourceGeohash ascending */
  | 'sourceGeohash_ASC'
  /** sourceGeohash descending */
  | 'sourceGeohash_DESC'
  /** sourcePort ascending */
  | 'sourcePort_ASC'
  /** sourcePort descending */
  | 'sourcePort_DESC'
  /** sum(bits) ascending */
  | 'sum_bits_ASC'
  /** sum(bits) descending */
  | 'sum_bits_DESC'
  /** sum(packets) ascending */
  | 'sum_packets_ASC'
  /** sum(packets) descending */
  | 'sum_packets_DESC'
  /** system ascending */
  | 'system_ASC'
  /** system descending */
  | 'system_DESC'
  /** tcpAcknowledgementNumber ascending */
  | 'tcpAcknowledgementNumber_ASC'
  /** tcpAcknowledgementNumber descending */
  | 'tcpAcknowledgementNumber_DESC'
  /** tcpChecksum ascending */
  | 'tcpChecksum_ASC'
  /** tcpChecksum descending */
  | 'tcpChecksum_DESC'
  /** tcpDataOffset ascending */
  | 'tcpDataOffset_ASC'
  /** tcpDataOffset descending */
  | 'tcpDataOffset_DESC'
  /** tcpFlagsString ascending */
  | 'tcpFlagsString_ASC'
  /** tcpFlagsString descending */
  | 'tcpFlagsString_DESC'
  /** tcpFlags ascending */
  | 'tcpFlags_ASC'
  /** tcpFlags descending */
  | 'tcpFlags_DESC'
  /** tcpMss ascending */
  | 'tcpMss_ASC'
  /** tcpMss descending */
  | 'tcpMss_DESC'
  /** tcpOptions ascending */
  | 'tcpOptions_ASC'
  /** tcpOptions descending */
  | 'tcpOptions_DESC'
  /** tcpSackBlocks ascending */
  | 'tcpSackBlocks_ASC'
  /** tcpSackBlocks descending */
  | 'tcpSackBlocks_DESC'
  /** tcpSackPermitted ascending */
  | 'tcpSackPermitted_ASC'
  /** tcpSackPermitted descending */
  | 'tcpSackPermitted_DESC'
  /** tcpSequenceNumber ascending */
  | 'tcpSequenceNumber_ASC'
  /** tcpSequenceNumber descending */
  | 'tcpSequenceNumber_DESC'
  /** tcpTimestampEcr ascending */
  | 'tcpTimestampEcr_ASC'
  /** tcpTimestampEcr descending */
  | 'tcpTimestampEcr_DESC'
  /** tcpTimestampValue ascending */
  | 'tcpTimestampValue_ASC'
  /** tcpTimestampValue descending */
  | 'tcpTimestampValue_DESC'
  /** tcpUrgentPointer ascending */
  | 'tcpUrgentPointer_ASC'
  /** tcpUrgentPointer descending */
  | 'tcpUrgentPointer_DESC'
  /** tcpWindowScale ascending */
  | 'tcpWindowScale_ASC'
  /** tcpWindowScale descending */
  | 'tcpWindowScale_DESC'
  /** tcpWindowSize ascending */
  | 'tcpWindowSize_ASC'
  /** tcpWindowSize descending */
  | 'tcpWindowSize_DESC'
  /** udpChecksum ascending */
  | 'udpChecksum_ASC'
  /** udpChecksum descending */
  | 'udpChecksum_DESC'
  /** udpPayloadLength ascending */
  | 'udpPayloadLength_ASC'
  /** udpPayloadLength descending */
  | 'udpPayloadLength_DESC'
  /** verdict ascending */
  | 'verdict_ASC'
  /** verdict descending */
  | 'verdict_DESC';

interface AccountMagicTransitTunnelHealthChecksAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountMagicTransitTunnelHealthChecksAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountMagicTransitTunnelHealthChecksAdaptiveGroupsFilter_InputObject[]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly edgeColoCity: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoCity_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_like: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoCity_notlike: InputMaybe<Scalars['string']>;
    readonly edgeColoCode: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoCode_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_like: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoCode_notlike: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoCountry_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_like: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoCountry_notlike: InputMaybe<Scalars['string']>;
    readonly edgeColoName: InputMaybe<Scalars['string']>;
    readonly edgeColoName_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_like: InputMaybe<Scalars['string']>;
    readonly edgeColoName_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_notlike: InputMaybe<Scalars['string']>;
    readonly edgeColoRegion: InputMaybe<Scalars['string']>;
    readonly edgeColoRegion_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoRegion_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoRegion_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoRegion_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoRegion_like: InputMaybe<Scalars['string']>;
    readonly edgeColoRegion_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoRegion_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoRegion_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoRegion_notlike: InputMaybe<Scalars['string']>;
    readonly remoteTunnelIPv4: InputMaybe<Scalars['string']>;
    readonly remoteTunnelIPv4_geq: InputMaybe<Scalars['string']>;
    readonly remoteTunnelIPv4_gt: InputMaybe<Scalars['string']>;
    readonly remoteTunnelIPv4_in: InputMaybe<readonly Scalars['string'][]>;
    readonly remoteTunnelIPv4_leq: InputMaybe<Scalars['string']>;
    readonly remoteTunnelIPv4_like: InputMaybe<Scalars['string']>;
    readonly remoteTunnelIPv4_lt: InputMaybe<Scalars['string']>;
    readonly remoteTunnelIPv4_neq: InputMaybe<Scalars['string']>;
    readonly remoteTunnelIPv4_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly remoteTunnelIPv4_notlike: InputMaybe<Scalars['string']>;
    readonly resultStatus: InputMaybe<Scalars['string']>;
    readonly resultStatus_geq: InputMaybe<Scalars['string']>;
    readonly resultStatus_gt: InputMaybe<Scalars['string']>;
    readonly resultStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly resultStatus_leq: InputMaybe<Scalars['string']>;
    readonly resultStatus_like: InputMaybe<Scalars['string']>;
    readonly resultStatus_lt: InputMaybe<Scalars['string']>;
    readonly resultStatus_neq: InputMaybe<Scalars['string']>;
    readonly resultStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly resultStatus_notlike: InputMaybe<Scalars['string']>;
    readonly tunnelName: InputMaybe<Scalars['string']>;
    readonly tunnelName_geq: InputMaybe<Scalars['string']>;
    readonly tunnelName_gt: InputMaybe<Scalars['string']>;
    readonly tunnelName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tunnelName_leq: InputMaybe<Scalars['string']>;
    readonly tunnelName_like: InputMaybe<Scalars['string']>;
    readonly tunnelName_lt: InputMaybe<Scalars['string']>;
    readonly tunnelName_neq: InputMaybe<Scalars['string']>;
    readonly tunnelName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tunnelName_notlike: InputMaybe<Scalars['string']>;
}

type AccountMagicTransitTunnelHealthChecksAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** avg(tunnelState) ascending */
  | 'avg_tunnelState_ASC'
  /** avg(tunnelState) descending */
  | 'avg_tunnelState_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** edgeColoCity ascending */
  | 'edgeColoCity_ASC'
  /** edgeColoCity descending */
  | 'edgeColoCity_DESC'
  /** edgeColoCode ascending */
  | 'edgeColoCode_ASC'
  /** edgeColoCode descending */
  | 'edgeColoCode_DESC'
  /** edgeColoCountry ascending */
  | 'edgeColoCountry_ASC'
  /** edgeColoCountry descending */
  | 'edgeColoCountry_DESC'
  /** edgeColoName ascending */
  | 'edgeColoName_ASC'
  /** edgeColoName descending */
  | 'edgeColoName_DESC'
  /** edgeColoRegion ascending */
  | 'edgeColoRegion_ASC'
  /** edgeColoRegion descending */
  | 'edgeColoRegion_DESC'
  /** remoteTunnelIPv4 ascending */
  | 'remoteTunnelIPv4_ASC'
  /** remoteTunnelIPv4 descending */
  | 'remoteTunnelIPv4_DESC'
  /** resultStatus ascending */
  | 'resultStatus_ASC'
  /** resultStatus descending */
  | 'resultStatus_DESC'
  /** tunnelName ascending */
  | 'tunnelName_ASC'
  /** tunnelName descending */
  | 'tunnelName_DESC';

interface AccountMagicTransitTunnelTrafficAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountMagicTransitTunnelTrafficAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountMagicTransitTunnelTrafficAdaptiveGroupsFilter_InputObject[]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly direction: InputMaybe<Scalars['string']>;
    readonly direction_geq: InputMaybe<Scalars['string']>;
    readonly direction_gt: InputMaybe<Scalars['string']>;
    readonly direction_in: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_leq: InputMaybe<Scalars['string']>;
    readonly direction_like: InputMaybe<Scalars['string']>;
    readonly direction_lt: InputMaybe<Scalars['string']>;
    readonly direction_neq: InputMaybe<Scalars['string']>;
    readonly direction_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_notlike: InputMaybe<Scalars['string']>;
    readonly edgeColoCity: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoCity_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_like: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoCity_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoCity_notlike: InputMaybe<Scalars['string']>;
    readonly edgeColoCode: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoCode_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_like: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoCode_notlike: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoCountry_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_like: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoCountry_notlike: InputMaybe<Scalars['string']>;
    readonly edgeColoGeohash: InputMaybe<Scalars['string']>;
    readonly edgeColoGeohash_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoGeohash_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoGeohash_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoGeohash_like: InputMaybe<Scalars['string']>;
    readonly edgeColoGeohash_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoGeohash_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly edgeColoName: InputMaybe<Scalars['string']>;
    readonly edgeColoName_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_like: InputMaybe<Scalars['string']>;
    readonly edgeColoName_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_notlike: InputMaybe<Scalars['string']>;
    readonly system: InputMaybe<Scalars['string']>;
    readonly system_geq: InputMaybe<Scalars['string']>;
    readonly system_gt: InputMaybe<Scalars['string']>;
    readonly system_in: InputMaybe<readonly Scalars['string'][]>;
    readonly system_leq: InputMaybe<Scalars['string']>;
    readonly system_like: InputMaybe<Scalars['string']>;
    readonly system_lt: InputMaybe<Scalars['string']>;
    readonly system_neq: InputMaybe<Scalars['string']>;
    readonly system_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly system_notlike: InputMaybe<Scalars['string']>;
    readonly tunnelName: InputMaybe<Scalars['string']>;
    readonly tunnelName_geq: InputMaybe<Scalars['string']>;
    readonly tunnelName_gt: InputMaybe<Scalars['string']>;
    readonly tunnelName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tunnelName_leq: InputMaybe<Scalars['string']>;
    readonly tunnelName_like: InputMaybe<Scalars['string']>;
    readonly tunnelName_lt: InputMaybe<Scalars['string']>;
    readonly tunnelName_neq: InputMaybe<Scalars['string']>;
    readonly tunnelName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tunnelName_notlike: InputMaybe<Scalars['string']>;
}

type AccountMagicTransitTunnelTrafficAdaptiveGroupsOrderBy =
  /** avg(bitRateFifteenMinutes) ascending */
  | 'avg_bitRateFifteenMinutes_ASC'
  /** avg(bitRateFifteenMinutes) descending */
  | 'avg_bitRateFifteenMinutes_DESC'
  /** avg(bitRateFiveMinutes) ascending */
  | 'avg_bitRateFiveMinutes_ASC'
  /** avg(bitRateFiveMinutes) descending */
  | 'avg_bitRateFiveMinutes_DESC'
  /** avg(bitRateHour) ascending */
  | 'avg_bitRateHour_ASC'
  /** avg(bitRateHour) descending */
  | 'avg_bitRateHour_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** direction ascending */
  | 'direction_ASC'
  /** direction descending */
  | 'direction_DESC'
  /** edgeColoCity ascending */
  | 'edgeColoCity_ASC'
  /** edgeColoCity descending */
  | 'edgeColoCity_DESC'
  /** edgeColoCode ascending */
  | 'edgeColoCode_ASC'
  /** edgeColoCode descending */
  | 'edgeColoCode_DESC'
  /** edgeColoCountry ascending */
  | 'edgeColoCountry_ASC'
  /** edgeColoCountry descending */
  | 'edgeColoCountry_DESC'
  /** edgeColoGeohash ascending */
  | 'edgeColoGeohash_ASC'
  /** edgeColoGeohash descending */
  | 'edgeColoGeohash_DESC'
  /** edgeColoName ascending */
  | 'edgeColoName_ASC'
  /** edgeColoName descending */
  | 'edgeColoName_DESC'
  /** notCfIps ascending */
  | 'notCfIps_ASC'
  /** notCfIps descending */
  | 'notCfIps_DESC'
  /** system ascending */
  | 'system_ASC'
  /** system descending */
  | 'system_DESC'
  /** tunnelName ascending */
  | 'tunnelName_ASC'
  /** tunnelName descending */
  | 'tunnelName_DESC';

interface AccountMnmFlowDataAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountMnmFlowDataAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountMnmFlowDataAdaptiveGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationAddress: InputMaybe<Scalars['string']>;
    readonly destinationAddress_geq: InputMaybe<Scalars['string']>;
    readonly destinationAddress_gt: InputMaybe<Scalars['string']>;
    readonly destinationAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAddress_leq: InputMaybe<Scalars['string']>;
    readonly destinationAddress_like: InputMaybe<Scalars['string']>;
    readonly destinationAddress_lt: InputMaybe<Scalars['string']>;
    readonly destinationAddress_neq: InputMaybe<Scalars['string']>;
    readonly destinationAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAddress_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ethertype: InputMaybe<Scalars['uint16']>;
    readonly ethertype_geq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_gt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ethertype_leq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_lt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_neq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly protocol: InputMaybe<Scalars['uint16']>;
    readonly protocolString: InputMaybe<Scalars['string']>;
    readonly protocolString_geq: InputMaybe<Scalars['string']>;
    readonly protocolString_gt: InputMaybe<Scalars['string']>;
    readonly protocolString_in: InputMaybe<readonly Scalars['string'][]>;
    readonly protocolString_leq: InputMaybe<Scalars['string']>;
    readonly protocolString_like: InputMaybe<Scalars['string']>;
    readonly protocolString_lt: InputMaybe<Scalars['string']>;
    readonly protocolString_neq: InputMaybe<Scalars['string']>;
    readonly protocolString_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly protocolString_notlike: InputMaybe<Scalars['string']>;
    readonly protocol_geq: InputMaybe<Scalars['uint16']>;
    readonly protocol_gt: InputMaybe<Scalars['uint16']>;
    readonly protocol_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly protocol_leq: InputMaybe<Scalars['uint16']>;
    readonly protocol_lt: InputMaybe<Scalars['uint16']>;
    readonly protocol_neq: InputMaybe<Scalars['uint16']>;
    readonly protocol_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly routerAddress: InputMaybe<Scalars['string']>;
    readonly routerAddress_geq: InputMaybe<Scalars['string']>;
    readonly routerAddress_gt: InputMaybe<Scalars['string']>;
    readonly routerAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly routerAddress_leq: InputMaybe<Scalars['string']>;
    readonly routerAddress_like: InputMaybe<Scalars['string']>;
    readonly routerAddress_lt: InputMaybe<Scalars['string']>;
    readonly routerAddress_neq: InputMaybe<Scalars['string']>;
    readonly routerAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly routerAddress_notlike: InputMaybe<Scalars['string']>;
    readonly sourceAddress: InputMaybe<Scalars['string']>;
    readonly sourceAddress_geq: InputMaybe<Scalars['string']>;
    readonly sourceAddress_gt: InputMaybe<Scalars['string']>;
    readonly sourceAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAddress_leq: InputMaybe<Scalars['string']>;
    readonly sourceAddress_like: InputMaybe<Scalars['string']>;
    readonly sourceAddress_lt: InputMaybe<Scalars['string']>;
    readonly sourceAddress_neq: InputMaybe<Scalars['string']>;
    readonly sourceAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAddress_notlike: InputMaybe<Scalars['string']>;
    readonly sourcePort: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly sourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpFlags: InputMaybe<Scalars['uint16']>;
    readonly tcpFlagsString: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_geq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_gt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_leq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_like: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_lt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_neq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_notlike: InputMaybe<Scalars['string']>;
    readonly tcpFlags_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpFlags_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpFlags_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpFlags_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpFlags_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpFlags_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpFlags_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly version: InputMaybe<Scalars['int64']>;
    readonly version_geq: InputMaybe<Scalars['int64']>;
    readonly version_gt: InputMaybe<Scalars['int64']>;
    readonly version_in: InputMaybe<readonly Scalars['int64'][]>;
    readonly version_leq: InputMaybe<Scalars['int64']>;
    readonly version_lt: InputMaybe<Scalars['int64']>;
    readonly version_neq: InputMaybe<Scalars['int64']>;
    readonly version_notin: InputMaybe<readonly Scalars['int64'][]>;
}

type AccountMnmFlowDataAdaptiveGroupsOrderBy =
  /** avg(bitRateDay) ascending */
  | 'avg_bitRateDay_ASC'
  /** avg(bitRateDay) descending */
  | 'avg_bitRateDay_DESC'
  /** avg(bitRateFifteenMinutes) ascending */
  | 'avg_bitRateFifteenMinutes_ASC'
  /** avg(bitRateFifteenMinutes) descending */
  | 'avg_bitRateFifteenMinutes_DESC'
  /** avg(bitRateFiveMinutes) ascending */
  | 'avg_bitRateFiveMinutes_ASC'
  /** avg(bitRateFiveMinutes) descending */
  | 'avg_bitRateFiveMinutes_DESC'
  /** avg(bitRateHour) ascending */
  | 'avg_bitRateHour_ASC'
  /** avg(bitRateHour) descending */
  | 'avg_bitRateHour_DESC'
  /** avg(bitRateMinute) ascending */
  | 'avg_bitRateMinute_ASC'
  /** avg(bitRateMinute) descending */
  | 'avg_bitRateMinute_DESC'
  /** avg(bitRateTenSeconds) ascending */
  | 'avg_bitRateTenSeconds_ASC'
  /** avg(bitRateTenSeconds) descending */
  | 'avg_bitRateTenSeconds_DESC'
  /** avg(bitRate) ascending */
  | 'avg_bitRate_ASC'
  /** avg(bitRate) descending */
  | 'avg_bitRate_DESC'
  /** avg(packetRateDay) ascending */
  | 'avg_packetRateDay_ASC'
  /** avg(packetRateDay) descending */
  | 'avg_packetRateDay_DESC'
  /** avg(packetRateFifteenMinutes) ascending */
  | 'avg_packetRateFifteenMinutes_ASC'
  /** avg(packetRateFifteenMinutes) descending */
  | 'avg_packetRateFifteenMinutes_DESC'
  /** avg(packetRateFiveMinutes) ascending */
  | 'avg_packetRateFiveMinutes_ASC'
  /** avg(packetRateFiveMinutes) descending */
  | 'avg_packetRateFiveMinutes_DESC'
  /** avg(packetRateHour) ascending */
  | 'avg_packetRateHour_ASC'
  /** avg(packetRateHour) descending */
  | 'avg_packetRateHour_DESC'
  /** avg(packetRateMinute) ascending */
  | 'avg_packetRateMinute_ASC'
  /** avg(packetRateMinute) descending */
  | 'avg_packetRateMinute_DESC'
  /** avg(packetRateTenSeconds) ascending */
  | 'avg_packetRateTenSeconds_ASC'
  /** avg(packetRateTenSeconds) descending */
  | 'avg_packetRateTenSeconds_DESC'
  /** avg(packetRate) ascending */
  | 'avg_packetRate_ASC'
  /** avg(packetRate) descending */
  | 'avg_packetRate_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetimeTenSeconds ascending */
  | 'datetimeTenSeconds_ASC'
  /** datetimeTenSeconds descending */
  | 'datetimeTenSeconds_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** destinationAddress ascending */
  | 'destinationAddress_ASC'
  /** destinationAddress descending */
  | 'destinationAddress_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** ethertype ascending */
  | 'ethertype_ASC'
  /** ethertype descending */
  | 'ethertype_DESC'
  /** protocolString ascending */
  | 'protocolString_ASC'
  /** protocolString descending */
  | 'protocolString_DESC'
  /** protocol ascending */
  | 'protocol_ASC'
  /** protocol descending */
  | 'protocol_DESC'
  /** routerAddress ascending */
  | 'routerAddress_ASC'
  /** routerAddress descending */
  | 'routerAddress_DESC'
  /** sourceAddress ascending */
  | 'sourceAddress_ASC'
  /** sourceAddress descending */
  | 'sourceAddress_DESC'
  /** sourcePort ascending */
  | 'sourcePort_ASC'
  /** sourcePort descending */
  | 'sourcePort_DESC'
  /** sum(bits) ascending */
  | 'sum_bits_ASC'
  /** sum(bits) descending */
  | 'sum_bits_DESC'
  /** sum(packets) ascending */
  | 'sum_packets_ASC'
  /** sum(packets) descending */
  | 'sum_packets_DESC'
  /** tcpFlagsString ascending */
  | 'tcpFlagsString_ASC'
  /** tcpFlagsString descending */
  | 'tcpFlagsString_DESC'
  /** tcpFlags ascending */
  | 'tcpFlags_ASC'
  /** tcpFlags descending */
  | 'tcpFlags_DESC'
  /** version ascending */
  | 'version_ASC'
  /** version descending */
  | 'version_DESC';

interface AccountNelReportsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountNelReportsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountNelReportsAdaptiveGroupsFilter_InputObject[]>;
    readonly clientIPASN: InputMaybe<Scalars['uint32']>;
    readonly clientIPASNDescription: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_like: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly clientIPASN_geq: InputMaybe<Scalars['uint32']>;
    readonly clientIPASN_gt: InputMaybe<Scalars['uint32']>;
    readonly clientIPASN_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly clientIPASN_leq: InputMaybe<Scalars['uint32']>;
    readonly clientIPASN_lt: InputMaybe<Scalars['uint32']>;
    readonly clientIPASN_neq: InputMaybe<Scalars['uint32']>;
    readonly clientIPASN_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly clientIPCountry: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_geq: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_gt: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPCountryCode_leq: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_like: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_lt: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_neq: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPCountryCode_notlike: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_geq: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_gt: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPCountry_leq: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_like: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_lt: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_neq: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPCountry_notlike: InputMaybe<Scalars['string']>;
    readonly clientIPVersion: InputMaybe<Scalars['uint8']>;
    readonly clientIPVersion_geq: InputMaybe<Scalars['uint8']>;
    readonly clientIPVersion_gt: InputMaybe<Scalars['uint8']>;
    readonly clientIPVersion_in: InputMaybe<Scalars['bytes']>;
    readonly clientIPVersion_leq: InputMaybe<Scalars['uint8']>;
    readonly clientIPVersion_lt: InputMaybe<Scalars['uint8']>;
    readonly clientIPVersion_neq: InputMaybe<Scalars['uint8']>;
    readonly clientIPVersion_notin: InputMaybe<Scalars['bytes']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly lastKnownGoodColoCode: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_geq: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_gt: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly lastKnownGoodColoCode_leq: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_like: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_lt: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_neq: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly lastKnownGoodColoCode_notlike: InputMaybe<Scalars['string']>;
    readonly phase: InputMaybe<Scalars['string']>;
    readonly phase_geq: InputMaybe<Scalars['string']>;
    readonly phase_gt: InputMaybe<Scalars['string']>;
    readonly phase_in: InputMaybe<readonly Scalars['string'][]>;
    readonly phase_leq: InputMaybe<Scalars['string']>;
    readonly phase_like: InputMaybe<Scalars['string']>;
    readonly phase_lt: InputMaybe<Scalars['string']>;
    readonly phase_neq: InputMaybe<Scalars['string']>;
    readonly phase_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly phase_notlike: InputMaybe<Scalars['string']>;
    readonly protocol: InputMaybe<Scalars['string']>;
    readonly protocol_geq: InputMaybe<Scalars['string']>;
    readonly protocol_gt: InputMaybe<Scalars['string']>;
    readonly protocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly protocol_leq: InputMaybe<Scalars['string']>;
    readonly protocol_like: InputMaybe<Scalars['string']>;
    readonly protocol_lt: InputMaybe<Scalars['string']>;
    readonly protocol_neq: InputMaybe<Scalars['string']>;
    readonly protocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly protocol_notlike: InputMaybe<Scalars['string']>;
    readonly type: InputMaybe<Scalars['string']>;
    readonly type_geq: InputMaybe<Scalars['string']>;
    readonly type_gt: InputMaybe<Scalars['string']>;
    readonly type_in: InputMaybe<readonly Scalars['string'][]>;
    readonly type_leq: InputMaybe<Scalars['string']>;
    readonly type_like: InputMaybe<Scalars['string']>;
    readonly type_lt: InputMaybe<Scalars['string']>;
    readonly type_neq: InputMaybe<Scalars['string']>;
    readonly type_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly type_notlike: InputMaybe<Scalars['string']>;
}

type AccountNelReportsAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** clientIPASNDescription ascending */
  | 'clientIPASNDescription_ASC'
  /** clientIPASNDescription descending */
  | 'clientIPASNDescription_DESC'
  /** clientIPASN ascending */
  | 'clientIPASN_ASC'
  /** clientIPASN descending */
  | 'clientIPASN_DESC'
  /** clientIPCountryCode ascending */
  | 'clientIPCountryCode_ASC'
  /** clientIPCountryCode descending */
  | 'clientIPCountryCode_DESC'
  /** clientIPCountry ascending */
  | 'clientIPCountry_ASC'
  /** clientIPCountry descending */
  | 'clientIPCountry_DESC'
  /** clientIPVersion ascending */
  | 'clientIPVersion_ASC'
  /** clientIPVersion descending */
  | 'clientIPVersion_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** lastKnownGoodColoCode ascending */
  | 'lastKnownGoodColoCode_ASC'
  /** lastKnownGoodColoCode descending */
  | 'lastKnownGoodColoCode_DESC'
  /** phase ascending */
  | 'phase_ASC'
  /** phase descending */
  | 'phase_DESC'
  /** protocol ascending */
  | 'protocol_ASC'
  /** protocol descending */
  | 'protocol_DESC'
  /** type ascending */
  | 'type_ASC'
  /** type descending */
  | 'type_DESC';

interface AccountPagesFunctionsInvocationsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountPagesFunctionsInvocationsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountPagesFunctionsInvocationsAdaptiveGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly scriptName: InputMaybe<Scalars['string']>;
    readonly scriptName_geq: InputMaybe<Scalars['string']>;
    readonly scriptName_gt: InputMaybe<Scalars['string']>;
    readonly scriptName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptName_leq: InputMaybe<Scalars['string']>;
    readonly scriptName_like: InputMaybe<Scalars['string']>;
    readonly scriptName_lt: InputMaybe<Scalars['string']>;
    readonly scriptName_neq: InputMaybe<Scalars['string']>;
    readonly scriptName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptName_notlike: InputMaybe<Scalars['string']>;
    readonly status: InputMaybe<Scalars['string']>;
    readonly status_geq: InputMaybe<Scalars['string']>;
    readonly status_gt: InputMaybe<Scalars['string']>;
    readonly status_in: InputMaybe<readonly Scalars['string'][]>;
    readonly status_leq: InputMaybe<Scalars['string']>;
    readonly status_like: InputMaybe<Scalars['string']>;
    readonly status_lt: InputMaybe<Scalars['string']>;
    readonly status_neq: InputMaybe<Scalars['string']>;
    readonly status_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly status_notlike: InputMaybe<Scalars['string']>;
    readonly usageModel: InputMaybe<Scalars['string']>;
    readonly usageModel_geq: InputMaybe<Scalars['string']>;
    readonly usageModel_gt: InputMaybe<Scalars['string']>;
    readonly usageModel_in: InputMaybe<readonly Scalars['string'][]>;
    readonly usageModel_leq: InputMaybe<Scalars['string']>;
    readonly usageModel_like: InputMaybe<Scalars['string']>;
    readonly usageModel_lt: InputMaybe<Scalars['string']>;
    readonly usageModel_neq: InputMaybe<Scalars['string']>;
    readonly usageModel_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly usageModel_notlike: InputMaybe<Scalars['string']>;
}

type AccountPagesFunctionsInvocationsAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** quantiles(cpuTimeP50) ascending */
  | 'quantiles_cpuTimeP50_ASC'
  /** quantiles(cpuTimeP50) descending */
  | 'quantiles_cpuTimeP50_DESC'
  /** quantiles(cpuTimeP75) ascending */
  | 'quantiles_cpuTimeP75_ASC'
  /** quantiles(cpuTimeP75) descending */
  | 'quantiles_cpuTimeP75_DESC'
  /** quantiles(cpuTimeP99) ascending */
  | 'quantiles_cpuTimeP99_ASC'
  /** quantiles(cpuTimeP99) descending */
  | 'quantiles_cpuTimeP99_DESC'
  /** quantiles(cpuTimeP999) ascending */
  | 'quantiles_cpuTimeP999_ASC'
  /** quantiles(cpuTimeP999) descending */
  | 'quantiles_cpuTimeP999_DESC'
  /** quantiles(durationP50) ascending */
  | 'quantiles_durationP50_ASC'
  /** quantiles(durationP50) descending */
  | 'quantiles_durationP50_DESC'
  /** quantiles(durationP75) ascending */
  | 'quantiles_durationP75_ASC'
  /** quantiles(durationP75) descending */
  | 'quantiles_durationP75_DESC'
  /** quantiles(durationP99) ascending */
  | 'quantiles_durationP99_ASC'
  /** quantiles(durationP99) descending */
  | 'quantiles_durationP99_DESC'
  /** quantiles(durationP999) ascending */
  | 'quantiles_durationP999_ASC'
  /** quantiles(durationP999) descending */
  | 'quantiles_durationP999_DESC'
  /** scriptName ascending */
  | 'scriptName_ASC'
  /** scriptName descending */
  | 'scriptName_DESC'
  /** stableId ascending */
  | 'stableId_ASC'
  /** stableId descending */
  | 'stableId_DESC'
  /** status ascending */
  | 'status_ASC'
  /** status descending */
  | 'status_DESC'
  /** sum(duration) ascending */
  | 'sum_duration_ASC'
  /** sum(duration) descending */
  | 'sum_duration_DESC'
  /** sum(errors) ascending */
  | 'sum_errors_ASC'
  /** sum(errors) descending */
  | 'sum_errors_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(responseBodySize) ascending */
  | 'sum_responseBodySize_ASC'
  /** sum(responseBodySize) descending */
  | 'sum_responseBodySize_DESC'
  /** sum(subrequests) ascending */
  | 'sum_subrequests_ASC'
  /** sum(subrequests) descending */
  | 'sum_subrequests_DESC'
  /** sum(wallTime) ascending */
  | 'sum_wallTime_ASC'
  /** sum(wallTime) descending */
  | 'sum_wallTime_DESC'
  /** usageModel ascending */
  | 'usageModel_ASC'
  /** usageModel descending */
  | 'usageModel_DESC';

interface AccountR2OperationsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountR2OperationsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountR2OperationsAdaptiveGroupsFilter_InputObject[]>;
    readonly actionStatus: InputMaybe<Scalars['string']>;
    readonly actionStatus_geq: InputMaybe<Scalars['string']>;
    readonly actionStatus_gt: InputMaybe<Scalars['string']>;
    readonly actionStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly actionStatus_leq: InputMaybe<Scalars['string']>;
    readonly actionStatus_like: InputMaybe<Scalars['string']>;
    readonly actionStatus_lt: InputMaybe<Scalars['string']>;
    readonly actionStatus_neq: InputMaybe<Scalars['string']>;
    readonly actionStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly actionStatus_notlike: InputMaybe<Scalars['string']>;
    readonly actionType: InputMaybe<Scalars['string']>;
    readonly actionType_geq: InputMaybe<Scalars['string']>;
    readonly actionType_gt: InputMaybe<Scalars['string']>;
    readonly actionType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly actionType_leq: InputMaybe<Scalars['string']>;
    readonly actionType_like: InputMaybe<Scalars['string']>;
    readonly actionType_lt: InputMaybe<Scalars['string']>;
    readonly actionType_neq: InputMaybe<Scalars['string']>;
    readonly actionType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly actionType_notlike: InputMaybe<Scalars['string']>;
    readonly bucketName: InputMaybe<Scalars['string']>;
    readonly bucketName_geq: InputMaybe<Scalars['string']>;
    readonly bucketName_gt: InputMaybe<Scalars['string']>;
    readonly bucketName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly bucketName_leq: InputMaybe<Scalars['string']>;
    readonly bucketName_like: InputMaybe<Scalars['string']>;
    readonly bucketName_lt: InputMaybe<Scalars['string']>;
    readonly bucketName_neq: InputMaybe<Scalars['string']>;
    readonly bucketName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly bucketName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly objectName: InputMaybe<Scalars['string']>;
    readonly objectName_geq: InputMaybe<Scalars['string']>;
    readonly objectName_gt: InputMaybe<Scalars['string']>;
    readonly objectName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly objectName_leq: InputMaybe<Scalars['string']>;
    readonly objectName_like: InputMaybe<Scalars['string']>;
    readonly objectName_lt: InputMaybe<Scalars['string']>;
    readonly objectName_neq: InputMaybe<Scalars['string']>;
    readonly objectName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly objectName_notlike: InputMaybe<Scalars['string']>;
    readonly responseStatusCode: InputMaybe<Scalars['uint16']>;
    readonly responseStatusCode_geq: InputMaybe<Scalars['uint16']>;
    readonly responseStatusCode_gt: InputMaybe<Scalars['uint16']>;
    readonly responseStatusCode_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly responseStatusCode_leq: InputMaybe<Scalars['uint16']>;
    readonly responseStatusCode_lt: InputMaybe<Scalars['uint16']>;
    readonly responseStatusCode_neq: InputMaybe<Scalars['uint16']>;
    readonly responseStatusCode_notin: InputMaybe<readonly Scalars['uint16'][]>;
}

type AccountR2OperationsAdaptiveGroupsOrderBy =
  /** actionStatus ascending */
  | 'actionStatus_ASC'
  /** actionStatus descending */
  | 'actionStatus_DESC'
  /** actionType ascending */
  | 'actionType_ASC'
  /** actionType descending */
  | 'actionType_DESC'
  /** bucketName ascending */
  | 'bucketName_ASC'
  /** bucketName descending */
  | 'bucketName_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** objectName ascending */
  | 'objectName_ASC'
  /** objectName descending */
  | 'objectName_DESC'
  /** responseStatusCode ascending */
  | 'responseStatusCode_ASC'
  /** responseStatusCode descending */
  | 'responseStatusCode_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(responseObjectSize) ascending */
  | 'sum_responseObjectSize_ASC'
  /** sum(responseObjectSize) descending */
  | 'sum_responseObjectSize_DESC';

interface AccountR2StorageAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountR2StorageAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountR2StorageAdaptiveGroupsFilter_InputObject[]>;
    readonly bucketName: InputMaybe<Scalars['string']>;
    readonly bucketName_geq: InputMaybe<Scalars['string']>;
    readonly bucketName_gt: InputMaybe<Scalars['string']>;
    readonly bucketName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly bucketName_leq: InputMaybe<Scalars['string']>;
    readonly bucketName_like: InputMaybe<Scalars['string']>;
    readonly bucketName_lt: InputMaybe<Scalars['string']>;
    readonly bucketName_neq: InputMaybe<Scalars['string']>;
    readonly bucketName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly bucketName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
}

type AccountR2StorageAdaptiveGroupsOrderBy =
  /** bucketName ascending */
  | 'bucketName_ASC'
  /** bucketName descending */
  | 'bucketName_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** max(metadataSize) ascending */
  | 'max_metadataSize_ASC'
  /** max(metadataSize) descending */
  | 'max_metadataSize_DESC'
  /** max(objectCount) ascending */
  | 'max_objectCount_ASC'
  /** max(objectCount) descending */
  | 'max_objectCount_DESC'
  /** max(payloadSize) ascending */
  | 'max_payloadSize_ASC'
  /** max(payloadSize) descending */
  | 'max_payloadSize_DESC'
  /** max(uploadCount) ascending */
  | 'max_uploadCount_ASC'
  /** max(uploadCount) descending */
  | 'max_uploadCount_DESC';

interface AccountRumPageloadEventsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountRumPageloadEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountRumPageloadEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly countryName: InputMaybe<Scalars['string']>;
    readonly countryName_geq: InputMaybe<Scalars['string']>;
    readonly countryName_gt: InputMaybe<Scalars['string']>;
    readonly countryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly countryName_leq: InputMaybe<Scalars['string']>;
    readonly countryName_like: InputMaybe<Scalars['string']>;
    readonly countryName_lt: InputMaybe<Scalars['string']>;
    readonly countryName_neq: InputMaybe<Scalars['string']>;
    readonly countryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly countryName_notlike: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_geq: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_gt: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_in: InputMaybe<readonly Scalars['string'][]>;
    readonly customTagInternalSxg_leq: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_like: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_lt: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_neq: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly customTagInternalSxg_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly deviceType: InputMaybe<Scalars['string']>;
    readonly deviceType_geq: InputMaybe<Scalars['string']>;
    readonly deviceType_gt: InputMaybe<Scalars['string']>;
    readonly deviceType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_leq: InputMaybe<Scalars['string']>;
    readonly deviceType_like: InputMaybe<Scalars['string']>;
    readonly deviceType_lt: InputMaybe<Scalars['string']>;
    readonly deviceType_neq: InputMaybe<Scalars['string']>;
    readonly deviceType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_notlike: InputMaybe<Scalars['string']>;
    readonly refererHost: InputMaybe<Scalars['string']>;
    readonly refererHost_geq: InputMaybe<Scalars['string']>;
    readonly refererHost_gt: InputMaybe<Scalars['string']>;
    readonly refererHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly refererHost_leq: InputMaybe<Scalars['string']>;
    readonly refererHost_like: InputMaybe<Scalars['string']>;
    readonly refererHost_lt: InputMaybe<Scalars['string']>;
    readonly refererHost_neq: InputMaybe<Scalars['string']>;
    readonly refererHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly refererHost_notlike: InputMaybe<Scalars['string']>;
    readonly refererPath: InputMaybe<Scalars['string']>;
    readonly refererPath_geq: InputMaybe<Scalars['string']>;
    readonly refererPath_gt: InputMaybe<Scalars['string']>;
    readonly refererPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly refererPath_leq: InputMaybe<Scalars['string']>;
    readonly refererPath_like: InputMaybe<Scalars['string']>;
    readonly refererPath_lt: InputMaybe<Scalars['string']>;
    readonly refererPath_neq: InputMaybe<Scalars['string']>;
    readonly refererPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly refererPath_notlike: InputMaybe<Scalars['string']>;
    readonly refererScheme: InputMaybe<Scalars['string']>;
    readonly refererScheme_geq: InputMaybe<Scalars['string']>;
    readonly refererScheme_gt: InputMaybe<Scalars['string']>;
    readonly refererScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly refererScheme_leq: InputMaybe<Scalars['string']>;
    readonly refererScheme_like: InputMaybe<Scalars['string']>;
    readonly refererScheme_lt: InputMaybe<Scalars['string']>;
    readonly refererScheme_neq: InputMaybe<Scalars['string']>;
    readonly refererScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly refererScheme_notlike: InputMaybe<Scalars['string']>;
    readonly requestHost: InputMaybe<Scalars['string']>;
    readonly requestHost_geq: InputMaybe<Scalars['string']>;
    readonly requestHost_gt: InputMaybe<Scalars['string']>;
    readonly requestHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestHost_leq: InputMaybe<Scalars['string']>;
    readonly requestHost_like: InputMaybe<Scalars['string']>;
    readonly requestHost_lt: InputMaybe<Scalars['string']>;
    readonly requestHost_neq: InputMaybe<Scalars['string']>;
    readonly requestHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestHost_notlike: InputMaybe<Scalars['string']>;
    readonly requestPath: InputMaybe<Scalars['string']>;
    readonly requestPath_geq: InputMaybe<Scalars['string']>;
    readonly requestPath_gt: InputMaybe<Scalars['string']>;
    readonly requestPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestPath_leq: InputMaybe<Scalars['string']>;
    readonly requestPath_like: InputMaybe<Scalars['string']>;
    readonly requestPath_lt: InputMaybe<Scalars['string']>;
    readonly requestPath_neq: InputMaybe<Scalars['string']>;
    readonly requestPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestPath_notlike: InputMaybe<Scalars['string']>;
    readonly requestScheme: InputMaybe<Scalars['string']>;
    readonly requestScheme_geq: InputMaybe<Scalars['string']>;
    readonly requestScheme_gt: InputMaybe<Scalars['string']>;
    readonly requestScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestScheme_leq: InputMaybe<Scalars['string']>;
    readonly requestScheme_like: InputMaybe<Scalars['string']>;
    readonly requestScheme_lt: InputMaybe<Scalars['string']>;
    readonly requestScheme_neq: InputMaybe<Scalars['string']>;
    readonly requestScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestScheme_notlike: InputMaybe<Scalars['string']>;
    readonly siteTag: InputMaybe<Scalars['string']>;
    readonly siteTag_geq: InputMaybe<Scalars['string']>;
    readonly siteTag_gt: InputMaybe<Scalars['string']>;
    readonly siteTag_in: InputMaybe<readonly Scalars['string'][]>;
    readonly siteTag_leq: InputMaybe<Scalars['string']>;
    readonly siteTag_like: InputMaybe<Scalars['string']>;
    readonly siteTag_lt: InputMaybe<Scalars['string']>;
    readonly siteTag_neq: InputMaybe<Scalars['string']>;
    readonly siteTag_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly siteTag_notlike: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_geq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_gt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_leq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_like: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_lt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_neq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_notlike: InputMaybe<Scalars['string']>;
    readonly userAgentOS: InputMaybe<Scalars['string']>;
    readonly userAgentOS_geq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_gt: InputMaybe<Scalars['string']>;
    readonly userAgentOS_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentOS_leq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_like: InputMaybe<Scalars['string']>;
    readonly userAgentOS_lt: InputMaybe<Scalars['string']>;
    readonly userAgentOS_neq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentOS_notlike: InputMaybe<Scalars['string']>;
}

type AccountRumPageloadEventsAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** countryName ascending */
  | 'countryName_ASC'
  /** countryName descending */
  | 'countryName_DESC'
  /** customTagInternalSxg ascending */
  | 'customTagInternalSxg_ASC'
  /** customTagInternalSxg descending */
  | 'customTagInternalSxg_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** deviceType ascending */
  | 'deviceType_ASC'
  /** deviceType descending */
  | 'deviceType_DESC'
  /** refererHost ascending */
  | 'refererHost_ASC'
  /** refererHost descending */
  | 'refererHost_DESC'
  /** refererPath ascending */
  | 'refererPath_ASC'
  /** refererPath descending */
  | 'refererPath_DESC'
  /** refererScheme ascending */
  | 'refererScheme_ASC'
  /** refererScheme descending */
  | 'refererScheme_DESC'
  /** requestHost ascending */
  | 'requestHost_ASC'
  /** requestHost descending */
  | 'requestHost_DESC'
  /** requestPath ascending */
  | 'requestPath_ASC'
  /** requestPath descending */
  | 'requestPath_DESC'
  /** requestScheme ascending */
  | 'requestScheme_ASC'
  /** requestScheme descending */
  | 'requestScheme_DESC'
  /** siteTag ascending */
  | 'siteTag_ASC'
  /** siteTag descending */
  | 'siteTag_DESC'
  /** sum(visits) ascending */
  | 'sum_visits_ASC'
  /** sum(visits) descending */
  | 'sum_visits_DESC'
  /** userAgentBrowser ascending */
  | 'userAgentBrowser_ASC'
  /** userAgentBrowser descending */
  | 'userAgentBrowser_DESC'
  /** userAgentOS ascending */
  | 'userAgentOS_ASC'
  /** userAgentOS descending */
  | 'userAgentOS_DESC';

interface AccountRumPerformanceEventsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountRumPerformanceEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountRumPerformanceEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly countryName: InputMaybe<Scalars['string']>;
    readonly countryName_geq: InputMaybe<Scalars['string']>;
    readonly countryName_gt: InputMaybe<Scalars['string']>;
    readonly countryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly countryName_leq: InputMaybe<Scalars['string']>;
    readonly countryName_like: InputMaybe<Scalars['string']>;
    readonly countryName_lt: InputMaybe<Scalars['string']>;
    readonly countryName_neq: InputMaybe<Scalars['string']>;
    readonly countryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly countryName_notlike: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_geq: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_gt: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_in: InputMaybe<readonly Scalars['string'][]>;
    readonly customTagInternalSxg_leq: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_like: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_lt: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_neq: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly customTagInternalSxg_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly deviceType: InputMaybe<Scalars['string']>;
    readonly deviceType_geq: InputMaybe<Scalars['string']>;
    readonly deviceType_gt: InputMaybe<Scalars['string']>;
    readonly deviceType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_leq: InputMaybe<Scalars['string']>;
    readonly deviceType_like: InputMaybe<Scalars['string']>;
    readonly deviceType_lt: InputMaybe<Scalars['string']>;
    readonly deviceType_neq: InputMaybe<Scalars['string']>;
    readonly deviceType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_notlike: InputMaybe<Scalars['string']>;
    readonly refererHost: InputMaybe<Scalars['string']>;
    readonly refererHost_geq: InputMaybe<Scalars['string']>;
    readonly refererHost_gt: InputMaybe<Scalars['string']>;
    readonly refererHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly refererHost_leq: InputMaybe<Scalars['string']>;
    readonly refererHost_like: InputMaybe<Scalars['string']>;
    readonly refererHost_lt: InputMaybe<Scalars['string']>;
    readonly refererHost_neq: InputMaybe<Scalars['string']>;
    readonly refererHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly refererHost_notlike: InputMaybe<Scalars['string']>;
    readonly refererPath: InputMaybe<Scalars['string']>;
    readonly refererPath_geq: InputMaybe<Scalars['string']>;
    readonly refererPath_gt: InputMaybe<Scalars['string']>;
    readonly refererPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly refererPath_leq: InputMaybe<Scalars['string']>;
    readonly refererPath_like: InputMaybe<Scalars['string']>;
    readonly refererPath_lt: InputMaybe<Scalars['string']>;
    readonly refererPath_neq: InputMaybe<Scalars['string']>;
    readonly refererPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly refererPath_notlike: InputMaybe<Scalars['string']>;
    readonly refererScheme: InputMaybe<Scalars['string']>;
    readonly refererScheme_geq: InputMaybe<Scalars['string']>;
    readonly refererScheme_gt: InputMaybe<Scalars['string']>;
    readonly refererScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly refererScheme_leq: InputMaybe<Scalars['string']>;
    readonly refererScheme_like: InputMaybe<Scalars['string']>;
    readonly refererScheme_lt: InputMaybe<Scalars['string']>;
    readonly refererScheme_neq: InputMaybe<Scalars['string']>;
    readonly refererScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly refererScheme_notlike: InputMaybe<Scalars['string']>;
    readonly requestHost: InputMaybe<Scalars['string']>;
    readonly requestHost_geq: InputMaybe<Scalars['string']>;
    readonly requestHost_gt: InputMaybe<Scalars['string']>;
    readonly requestHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestHost_leq: InputMaybe<Scalars['string']>;
    readonly requestHost_like: InputMaybe<Scalars['string']>;
    readonly requestHost_lt: InputMaybe<Scalars['string']>;
    readonly requestHost_neq: InputMaybe<Scalars['string']>;
    readonly requestHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestHost_notlike: InputMaybe<Scalars['string']>;
    readonly requestPath: InputMaybe<Scalars['string']>;
    readonly requestPath_geq: InputMaybe<Scalars['string']>;
    readonly requestPath_gt: InputMaybe<Scalars['string']>;
    readonly requestPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestPath_leq: InputMaybe<Scalars['string']>;
    readonly requestPath_like: InputMaybe<Scalars['string']>;
    readonly requestPath_lt: InputMaybe<Scalars['string']>;
    readonly requestPath_neq: InputMaybe<Scalars['string']>;
    readonly requestPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestPath_notlike: InputMaybe<Scalars['string']>;
    readonly requestScheme: InputMaybe<Scalars['string']>;
    readonly requestScheme_geq: InputMaybe<Scalars['string']>;
    readonly requestScheme_gt: InputMaybe<Scalars['string']>;
    readonly requestScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestScheme_leq: InputMaybe<Scalars['string']>;
    readonly requestScheme_like: InputMaybe<Scalars['string']>;
    readonly requestScheme_lt: InputMaybe<Scalars['string']>;
    readonly requestScheme_neq: InputMaybe<Scalars['string']>;
    readonly requestScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestScheme_notlike: InputMaybe<Scalars['string']>;
    readonly siteTag: InputMaybe<Scalars['string']>;
    readonly siteTag_geq: InputMaybe<Scalars['string']>;
    readonly siteTag_gt: InputMaybe<Scalars['string']>;
    readonly siteTag_in: InputMaybe<readonly Scalars['string'][]>;
    readonly siteTag_leq: InputMaybe<Scalars['string']>;
    readonly siteTag_like: InputMaybe<Scalars['string']>;
    readonly siteTag_lt: InputMaybe<Scalars['string']>;
    readonly siteTag_neq: InputMaybe<Scalars['string']>;
    readonly siteTag_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly siteTag_notlike: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_geq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_gt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_leq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_like: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_lt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_neq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_notlike: InputMaybe<Scalars['string']>;
    readonly userAgentOS: InputMaybe<Scalars['string']>;
    readonly userAgentOS_geq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_gt: InputMaybe<Scalars['string']>;
    readonly userAgentOS_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentOS_leq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_like: InputMaybe<Scalars['string']>;
    readonly userAgentOS_lt: InputMaybe<Scalars['string']>;
    readonly userAgentOS_neq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentOS_notlike: InputMaybe<Scalars['string']>;
}

type AccountRumPerformanceEventsAdaptiveGroupsOrderBy =
  /** avg(connectionTime) ascending */
  | 'avg_connectionTime_ASC'
  /** avg(connectionTime) descending */
  | 'avg_connectionTime_DESC'
  /** avg(dnsTime) ascending */
  | 'avg_dnsTime_ASC'
  /** avg(dnsTime) descending */
  | 'avg_dnsTime_DESC'
  /** avg(firstContentfulPaint) ascending */
  | 'avg_firstContentfulPaint_ASC'
  /** avg(firstContentfulPaint) descending */
  | 'avg_firstContentfulPaint_DESC'
  /** avg(firstPaint) ascending */
  | 'avg_firstPaint_ASC'
  /** avg(firstPaint) descending */
  | 'avg_firstPaint_DESC'
  /** avg(loadEventTime) ascending */
  | 'avg_loadEventTime_ASC'
  /** avg(loadEventTime) descending */
  | 'avg_loadEventTime_DESC'
  /** avg(pageLoadTime) ascending */
  | 'avg_pageLoadTime_ASC'
  /** avg(pageLoadTime) descending */
  | 'avg_pageLoadTime_DESC'
  /** avg(pageRenderTime) ascending */
  | 'avg_pageRenderTime_ASC'
  /** avg(pageRenderTime) descending */
  | 'avg_pageRenderTime_DESC'
  /** avg(requestTime) ascending */
  | 'avg_requestTime_ASC'
  /** avg(requestTime) descending */
  | 'avg_requestTime_DESC'
  /** avg(responseTime) ascending */
  | 'avg_responseTime_ASC'
  /** avg(responseTime) descending */
  | 'avg_responseTime_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** countryName ascending */
  | 'countryName_ASC'
  /** countryName descending */
  | 'countryName_DESC'
  /** customTagInternalSxg ascending */
  | 'customTagInternalSxg_ASC'
  /** customTagInternalSxg descending */
  | 'customTagInternalSxg_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** deviceType ascending */
  | 'deviceType_ASC'
  /** deviceType descending */
  | 'deviceType_DESC'
  /** quantiles(connectionTimeP50) ascending */
  | 'quantiles_connectionTimeP50_ASC'
  /** quantiles(connectionTimeP50) descending */
  | 'quantiles_connectionTimeP50_DESC'
  /** quantiles(connectionTimeP75) ascending */
  | 'quantiles_connectionTimeP75_ASC'
  /** quantiles(connectionTimeP75) descending */
  | 'quantiles_connectionTimeP75_DESC'
  /** quantiles(connectionTimeP90) ascending */
  | 'quantiles_connectionTimeP90_ASC'
  /** quantiles(connectionTimeP90) descending */
  | 'quantiles_connectionTimeP90_DESC'
  /** quantiles(connectionTimeP99) ascending */
  | 'quantiles_connectionTimeP99_ASC'
  /** quantiles(connectionTimeP99) descending */
  | 'quantiles_connectionTimeP99_DESC'
  /** quantiles(dnsTimeP50) ascending */
  | 'quantiles_dnsTimeP50_ASC'
  /** quantiles(dnsTimeP50) descending */
  | 'quantiles_dnsTimeP50_DESC'
  /** quantiles(dnsTimeP75) ascending */
  | 'quantiles_dnsTimeP75_ASC'
  /** quantiles(dnsTimeP75) descending */
  | 'quantiles_dnsTimeP75_DESC'
  /** quantiles(dnsTimeP90) ascending */
  | 'quantiles_dnsTimeP90_ASC'
  /** quantiles(dnsTimeP90) descending */
  | 'quantiles_dnsTimeP90_DESC'
  /** quantiles(dnsTimeP99) ascending */
  | 'quantiles_dnsTimeP99_ASC'
  /** quantiles(dnsTimeP99) descending */
  | 'quantiles_dnsTimeP99_DESC'
  /** quantiles(firstContentfulPaintP50) ascending */
  | 'quantiles_firstContentfulPaintP50_ASC'
  /** quantiles(firstContentfulPaintP50) descending */
  | 'quantiles_firstContentfulPaintP50_DESC'
  /** quantiles(firstContentfulPaintP75) ascending */
  | 'quantiles_firstContentfulPaintP75_ASC'
  /** quantiles(firstContentfulPaintP75) descending */
  | 'quantiles_firstContentfulPaintP75_DESC'
  /** quantiles(firstContentfulPaintP90) ascending */
  | 'quantiles_firstContentfulPaintP90_ASC'
  /** quantiles(firstContentfulPaintP90) descending */
  | 'quantiles_firstContentfulPaintP90_DESC'
  /** quantiles(firstContentfulPaintP99) ascending */
  | 'quantiles_firstContentfulPaintP99_ASC'
  /** quantiles(firstContentfulPaintP99) descending */
  | 'quantiles_firstContentfulPaintP99_DESC'
  /** quantiles(firstPaintP50) ascending */
  | 'quantiles_firstPaintP50_ASC'
  /** quantiles(firstPaintP50) descending */
  | 'quantiles_firstPaintP50_DESC'
  /** quantiles(firstPaintP75) ascending */
  | 'quantiles_firstPaintP75_ASC'
  /** quantiles(firstPaintP75) descending */
  | 'quantiles_firstPaintP75_DESC'
  /** quantiles(firstPaintP90) ascending */
  | 'quantiles_firstPaintP90_ASC'
  /** quantiles(firstPaintP90) descending */
  | 'quantiles_firstPaintP90_DESC'
  /** quantiles(firstPaintP99) ascending */
  | 'quantiles_firstPaintP99_ASC'
  /** quantiles(firstPaintP99) descending */
  | 'quantiles_firstPaintP99_DESC'
  /** quantiles(loadEventTimeP50) ascending */
  | 'quantiles_loadEventTimeP50_ASC'
  /** quantiles(loadEventTimeP50) descending */
  | 'quantiles_loadEventTimeP50_DESC'
  /** quantiles(loadEventTimeP75) ascending */
  | 'quantiles_loadEventTimeP75_ASC'
  /** quantiles(loadEventTimeP75) descending */
  | 'quantiles_loadEventTimeP75_DESC'
  /** quantiles(loadEventTimeP90) ascending */
  | 'quantiles_loadEventTimeP90_ASC'
  /** quantiles(loadEventTimeP90) descending */
  | 'quantiles_loadEventTimeP90_DESC'
  /** quantiles(loadEventTimeP99) ascending */
  | 'quantiles_loadEventTimeP99_ASC'
  /** quantiles(loadEventTimeP99) descending */
  | 'quantiles_loadEventTimeP99_DESC'
  /** quantiles(pageLoadTimeP50) ascending */
  | 'quantiles_pageLoadTimeP50_ASC'
  /** quantiles(pageLoadTimeP50) descending */
  | 'quantiles_pageLoadTimeP50_DESC'
  /** quantiles(pageLoadTimeP75) ascending */
  | 'quantiles_pageLoadTimeP75_ASC'
  /** quantiles(pageLoadTimeP75) descending */
  | 'quantiles_pageLoadTimeP75_DESC'
  /** quantiles(pageLoadTimeP90) ascending */
  | 'quantiles_pageLoadTimeP90_ASC'
  /** quantiles(pageLoadTimeP90) descending */
  | 'quantiles_pageLoadTimeP90_DESC'
  /** quantiles(pageLoadTimeP99) ascending */
  | 'quantiles_pageLoadTimeP99_ASC'
  /** quantiles(pageLoadTimeP99) descending */
  | 'quantiles_pageLoadTimeP99_DESC'
  /** quantiles(pageRenderTimeP50) ascending */
  | 'quantiles_pageRenderTimeP50_ASC'
  /** quantiles(pageRenderTimeP50) descending */
  | 'quantiles_pageRenderTimeP50_DESC'
  /** quantiles(pageRenderTimeP75) ascending */
  | 'quantiles_pageRenderTimeP75_ASC'
  /** quantiles(pageRenderTimeP75) descending */
  | 'quantiles_pageRenderTimeP75_DESC'
  /** quantiles(pageRenderTimeP90) ascending */
  | 'quantiles_pageRenderTimeP90_ASC'
  /** quantiles(pageRenderTimeP90) descending */
  | 'quantiles_pageRenderTimeP90_DESC'
  /** quantiles(pageRenderTimeP99) ascending */
  | 'quantiles_pageRenderTimeP99_ASC'
  /** quantiles(pageRenderTimeP99) descending */
  | 'quantiles_pageRenderTimeP99_DESC'
  /** quantiles(requestTimeP50) ascending */
  | 'quantiles_requestTimeP50_ASC'
  /** quantiles(requestTimeP50) descending */
  | 'quantiles_requestTimeP50_DESC'
  /** quantiles(requestTimeP75) ascending */
  | 'quantiles_requestTimeP75_ASC'
  /** quantiles(requestTimeP75) descending */
  | 'quantiles_requestTimeP75_DESC'
  /** quantiles(requestTimeP90) ascending */
  | 'quantiles_requestTimeP90_ASC'
  /** quantiles(requestTimeP90) descending */
  | 'quantiles_requestTimeP90_DESC'
  /** quantiles(requestTimeP99) ascending */
  | 'quantiles_requestTimeP99_ASC'
  /** quantiles(requestTimeP99) descending */
  | 'quantiles_requestTimeP99_DESC'
  /** quantiles(responseTimeP50) ascending */
  | 'quantiles_responseTimeP50_ASC'
  /** quantiles(responseTimeP50) descending */
  | 'quantiles_responseTimeP50_DESC'
  /** quantiles(responseTimeP75) ascending */
  | 'quantiles_responseTimeP75_ASC'
  /** quantiles(responseTimeP75) descending */
  | 'quantiles_responseTimeP75_DESC'
  /** quantiles(responseTimeP90) ascending */
  | 'quantiles_responseTimeP90_ASC'
  /** quantiles(responseTimeP90) descending */
  | 'quantiles_responseTimeP90_DESC'
  /** quantiles(responseTimeP99) ascending */
  | 'quantiles_responseTimeP99_ASC'
  /** quantiles(responseTimeP99) descending */
  | 'quantiles_responseTimeP99_DESC'
  /** refererHost ascending */
  | 'refererHost_ASC'
  /** refererHost descending */
  | 'refererHost_DESC'
  /** refererPath ascending */
  | 'refererPath_ASC'
  /** refererPath descending */
  | 'refererPath_DESC'
  /** refererScheme ascending */
  | 'refererScheme_ASC'
  /** refererScheme descending */
  | 'refererScheme_DESC'
  /** requestHost ascending */
  | 'requestHost_ASC'
  /** requestHost descending */
  | 'requestHost_DESC'
  /** requestPath ascending */
  | 'requestPath_ASC'
  /** requestPath descending */
  | 'requestPath_DESC'
  /** requestScheme ascending */
  | 'requestScheme_ASC'
  /** requestScheme descending */
  | 'requestScheme_DESC'
  /** siteTag ascending */
  | 'siteTag_ASC'
  /** siteTag descending */
  | 'siteTag_DESC'
  /** sum(visits) ascending */
  | 'sum_visits_ASC'
  /** sum(visits) descending */
  | 'sum_visits_DESC'
  /** userAgentBrowser ascending */
  | 'userAgentBrowser_ASC'
  /** userAgentBrowser descending */
  | 'userAgentBrowser_DESC'
  /** userAgentOS ascending */
  | 'userAgentOS_ASC'
  /** userAgentOS descending */
  | 'userAgentOS_DESC';

interface AccountRumWebVitalsEventsAdaptiveFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountRumWebVitalsEventsAdaptiveFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountRumWebVitalsEventsAdaptiveFilter_InputObject[]>;
    readonly countryName: InputMaybe<Scalars['string']>;
    readonly countryName_geq: InputMaybe<Scalars['string']>;
    readonly countryName_gt: InputMaybe<Scalars['string']>;
    readonly countryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly countryName_leq: InputMaybe<Scalars['string']>;
    readonly countryName_like: InputMaybe<Scalars['string']>;
    readonly countryName_lt: InputMaybe<Scalars['string']>;
    readonly countryName_neq: InputMaybe<Scalars['string']>;
    readonly countryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly countryName_notlike: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShift: InputMaybe<Scalars['float64']>;
    readonly cumulativeLayoutShiftCurrentRect: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftCurrentRect_geq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftCurrentRect_gt: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftCurrentRect_in: InputMaybe<readonly Scalars['string'][]>;
    readonly cumulativeLayoutShiftCurrentRect_leq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftCurrentRect_like: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftCurrentRect_lt: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftCurrentRect_neq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftCurrentRect_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly cumulativeLayoutShiftCurrentRect_notlike: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_geq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_gt: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_in: InputMaybe<readonly Scalars['string'][]>;
    readonly cumulativeLayoutShiftElement_leq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_like: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_lt: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_neq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly cumulativeLayoutShiftElement_notlike: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_geq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_gt: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly cumulativeLayoutShiftPath_leq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_like: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_lt: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_neq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly cumulativeLayoutShiftPath_notlike: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPreviousRect: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPreviousRect_geq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPreviousRect_gt: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPreviousRect_in: InputMaybe<readonly Scalars['string'][]>;
    readonly cumulativeLayoutShiftPreviousRect_leq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPreviousRect_like: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPreviousRect_lt: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPreviousRect_neq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPreviousRect_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly cumulativeLayoutShiftPreviousRect_notlike: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShift_geq: InputMaybe<Scalars['float64']>;
    readonly cumulativeLayoutShift_gt: InputMaybe<Scalars['float64']>;
    readonly cumulativeLayoutShift_in: InputMaybe<readonly Scalars['float64'][]>;
    readonly cumulativeLayoutShift_leq: InputMaybe<Scalars['float64']>;
    readonly cumulativeLayoutShift_lt: InputMaybe<Scalars['float64']>;
    readonly cumulativeLayoutShift_neq: InputMaybe<Scalars['float64']>;
    readonly cumulativeLayoutShift_notin: InputMaybe<readonly Scalars['float64'][]>;
    readonly customTagInternalSxg: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_geq: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_gt: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_in: InputMaybe<readonly Scalars['string'][]>;
    readonly customTagInternalSxg_leq: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_like: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_lt: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_neq: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly customTagInternalSxg_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly deviceType: InputMaybe<Scalars['string']>;
    readonly deviceType_geq: InputMaybe<Scalars['string']>;
    readonly deviceType_gt: InputMaybe<Scalars['string']>;
    readonly deviceType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_leq: InputMaybe<Scalars['string']>;
    readonly deviceType_like: InputMaybe<Scalars['string']>;
    readonly deviceType_lt: InputMaybe<Scalars['string']>;
    readonly deviceType_neq: InputMaybe<Scalars['string']>;
    readonly deviceType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_notlike: InputMaybe<Scalars['string']>;
    readonly refererHost: InputMaybe<Scalars['string']>;
    readonly refererHost_geq: InputMaybe<Scalars['string']>;
    readonly refererHost_gt: InputMaybe<Scalars['string']>;
    readonly refererHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly refererHost_leq: InputMaybe<Scalars['string']>;
    readonly refererHost_like: InputMaybe<Scalars['string']>;
    readonly refererHost_lt: InputMaybe<Scalars['string']>;
    readonly refererHost_neq: InputMaybe<Scalars['string']>;
    readonly refererHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly refererHost_notlike: InputMaybe<Scalars['string']>;
    readonly refererPath: InputMaybe<Scalars['string']>;
    readonly refererPath_geq: InputMaybe<Scalars['string']>;
    readonly refererPath_gt: InputMaybe<Scalars['string']>;
    readonly refererPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly refererPath_leq: InputMaybe<Scalars['string']>;
    readonly refererPath_like: InputMaybe<Scalars['string']>;
    readonly refererPath_lt: InputMaybe<Scalars['string']>;
    readonly refererPath_neq: InputMaybe<Scalars['string']>;
    readonly refererPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly refererPath_notlike: InputMaybe<Scalars['string']>;
    readonly refererScheme: InputMaybe<Scalars['string']>;
    readonly refererScheme_geq: InputMaybe<Scalars['string']>;
    readonly refererScheme_gt: InputMaybe<Scalars['string']>;
    readonly refererScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly refererScheme_leq: InputMaybe<Scalars['string']>;
    readonly refererScheme_like: InputMaybe<Scalars['string']>;
    readonly refererScheme_lt: InputMaybe<Scalars['string']>;
    readonly refererScheme_neq: InputMaybe<Scalars['string']>;
    readonly refererScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly refererScheme_notlike: InputMaybe<Scalars['string']>;
    readonly requestHost: InputMaybe<Scalars['string']>;
    readonly requestHost_geq: InputMaybe<Scalars['string']>;
    readonly requestHost_gt: InputMaybe<Scalars['string']>;
    readonly requestHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestHost_leq: InputMaybe<Scalars['string']>;
    readonly requestHost_like: InputMaybe<Scalars['string']>;
    readonly requestHost_lt: InputMaybe<Scalars['string']>;
    readonly requestHost_neq: InputMaybe<Scalars['string']>;
    readonly requestHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestHost_notlike: InputMaybe<Scalars['string']>;
    readonly requestPath: InputMaybe<Scalars['string']>;
    readonly requestPath_geq: InputMaybe<Scalars['string']>;
    readonly requestPath_gt: InputMaybe<Scalars['string']>;
    readonly requestPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestPath_leq: InputMaybe<Scalars['string']>;
    readonly requestPath_like: InputMaybe<Scalars['string']>;
    readonly requestPath_lt: InputMaybe<Scalars['string']>;
    readonly requestPath_neq: InputMaybe<Scalars['string']>;
    readonly requestPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestPath_notlike: InputMaybe<Scalars['string']>;
    readonly requestScheme: InputMaybe<Scalars['string']>;
    readonly requestScheme_geq: InputMaybe<Scalars['string']>;
    readonly requestScheme_gt: InputMaybe<Scalars['string']>;
    readonly requestScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestScheme_leq: InputMaybe<Scalars['string']>;
    readonly requestScheme_like: InputMaybe<Scalars['string']>;
    readonly requestScheme_lt: InputMaybe<Scalars['string']>;
    readonly requestScheme_neq: InputMaybe<Scalars['string']>;
    readonly requestScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestScheme_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly siteTag: InputMaybe<Scalars['string']>;
    readonly siteTag_geq: InputMaybe<Scalars['string']>;
    readonly siteTag_gt: InputMaybe<Scalars['string']>;
    readonly siteTag_in: InputMaybe<readonly Scalars['string'][]>;
    readonly siteTag_leq: InputMaybe<Scalars['string']>;
    readonly siteTag_like: InputMaybe<Scalars['string']>;
    readonly siteTag_lt: InputMaybe<Scalars['string']>;
    readonly siteTag_neq: InputMaybe<Scalars['string']>;
    readonly siteTag_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly siteTag_notlike: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_geq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_gt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_leq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_like: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_lt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_neq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_notlike: InputMaybe<Scalars['string']>;
    readonly userAgentOS: InputMaybe<Scalars['string']>;
    readonly userAgentOS_geq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_gt: InputMaybe<Scalars['string']>;
    readonly userAgentOS_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentOS_leq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_like: InputMaybe<Scalars['string']>;
    readonly userAgentOS_lt: InputMaybe<Scalars['string']>;
    readonly userAgentOS_neq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentOS_notlike: InputMaybe<Scalars['string']>;
}

interface AccountRumWebVitalsEventsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountRumWebVitalsEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountRumWebVitalsEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly countryName: InputMaybe<Scalars['string']>;
    readonly countryName_geq: InputMaybe<Scalars['string']>;
    readonly countryName_gt: InputMaybe<Scalars['string']>;
    readonly countryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly countryName_leq: InputMaybe<Scalars['string']>;
    readonly countryName_like: InputMaybe<Scalars['string']>;
    readonly countryName_lt: InputMaybe<Scalars['string']>;
    readonly countryName_neq: InputMaybe<Scalars['string']>;
    readonly countryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly countryName_notlike: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShift: InputMaybe<Scalars['float64']>;
    readonly cumulativeLayoutShiftElement: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_geq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_gt: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_in: InputMaybe<readonly Scalars['string'][]>;
    readonly cumulativeLayoutShiftElement_leq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_like: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_lt: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_neq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftElement_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly cumulativeLayoutShiftElement_notlike: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_geq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_gt: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly cumulativeLayoutShiftPath_leq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_like: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_lt: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_neq: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShiftPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly cumulativeLayoutShiftPath_notlike: InputMaybe<Scalars['string']>;
    readonly cumulativeLayoutShift_geq: InputMaybe<Scalars['float64']>;
    readonly cumulativeLayoutShift_gt: InputMaybe<Scalars['float64']>;
    readonly cumulativeLayoutShift_in: InputMaybe<readonly Scalars['float64'][]>;
    readonly cumulativeLayoutShift_leq: InputMaybe<Scalars['float64']>;
    readonly cumulativeLayoutShift_lt: InputMaybe<Scalars['float64']>;
    readonly cumulativeLayoutShift_neq: InputMaybe<Scalars['float64']>;
    readonly cumulativeLayoutShift_notin: InputMaybe<readonly Scalars['float64'][]>;
    readonly customTagInternalSxg: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_geq: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_gt: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_in: InputMaybe<readonly Scalars['string'][]>;
    readonly customTagInternalSxg_leq: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_like: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_lt: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_neq: InputMaybe<Scalars['string']>;
    readonly customTagInternalSxg_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly customTagInternalSxg_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly deviceType: InputMaybe<Scalars['string']>;
    readonly deviceType_geq: InputMaybe<Scalars['string']>;
    readonly deviceType_gt: InputMaybe<Scalars['string']>;
    readonly deviceType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_leq: InputMaybe<Scalars['string']>;
    readonly deviceType_like: InputMaybe<Scalars['string']>;
    readonly deviceType_lt: InputMaybe<Scalars['string']>;
    readonly deviceType_neq: InputMaybe<Scalars['string']>;
    readonly deviceType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_notlike: InputMaybe<Scalars['string']>;
    readonly firstInputDelay: InputMaybe<Scalars['int64']>;
    readonly firstInputDelayElement: InputMaybe<Scalars['string']>;
    readonly firstInputDelayElement_geq: InputMaybe<Scalars['string']>;
    readonly firstInputDelayElement_gt: InputMaybe<Scalars['string']>;
    readonly firstInputDelayElement_in: InputMaybe<readonly Scalars['string'][]>;
    readonly firstInputDelayElement_leq: InputMaybe<Scalars['string']>;
    readonly firstInputDelayElement_like: InputMaybe<Scalars['string']>;
    readonly firstInputDelayElement_lt: InputMaybe<Scalars['string']>;
    readonly firstInputDelayElement_neq: InputMaybe<Scalars['string']>;
    readonly firstInputDelayElement_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly firstInputDelayElement_notlike: InputMaybe<Scalars['string']>;
    readonly firstInputDelayName: InputMaybe<Scalars['string']>;
    readonly firstInputDelayName_geq: InputMaybe<Scalars['string']>;
    readonly firstInputDelayName_gt: InputMaybe<Scalars['string']>;
    readonly firstInputDelayName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly firstInputDelayName_leq: InputMaybe<Scalars['string']>;
    readonly firstInputDelayName_like: InputMaybe<Scalars['string']>;
    readonly firstInputDelayName_lt: InputMaybe<Scalars['string']>;
    readonly firstInputDelayName_neq: InputMaybe<Scalars['string']>;
    readonly firstInputDelayName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly firstInputDelayName_notlike: InputMaybe<Scalars['string']>;
    readonly firstInputDelayPath: InputMaybe<Scalars['string']>;
    readonly firstInputDelayPath_geq: InputMaybe<Scalars['string']>;
    readonly firstInputDelayPath_gt: InputMaybe<Scalars['string']>;
    readonly firstInputDelayPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly firstInputDelayPath_leq: InputMaybe<Scalars['string']>;
    readonly firstInputDelayPath_like: InputMaybe<Scalars['string']>;
    readonly firstInputDelayPath_lt: InputMaybe<Scalars['string']>;
    readonly firstInputDelayPath_neq: InputMaybe<Scalars['string']>;
    readonly firstInputDelayPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly firstInputDelayPath_notlike: InputMaybe<Scalars['string']>;
    readonly firstInputDelay_geq: InputMaybe<Scalars['int64']>;
    readonly firstInputDelay_gt: InputMaybe<Scalars['int64']>;
    readonly firstInputDelay_in: InputMaybe<readonly Scalars['int64'][]>;
    readonly firstInputDelay_leq: InputMaybe<Scalars['int64']>;
    readonly firstInputDelay_lt: InputMaybe<Scalars['int64']>;
    readonly firstInputDelay_neq: InputMaybe<Scalars['int64']>;
    readonly firstInputDelay_notin: InputMaybe<readonly Scalars['int64'][]>;
    readonly largestContentfulPaint: InputMaybe<Scalars['int64']>;
    readonly largestContentfulPaintElement: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintElement_geq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintElement_gt: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintElement_in: InputMaybe<readonly Scalars['string'][]>;
    readonly largestContentfulPaintElement_leq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintElement_like: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintElement_lt: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintElement_neq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintElement_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly largestContentfulPaintElement_notlike: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectHost: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectHost_geq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectHost_gt: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly largestContentfulPaintObjectHost_leq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectHost_like: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectHost_lt: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectHost_neq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly largestContentfulPaintObjectHost_notlike: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectPath: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectPath_geq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectPath_gt: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly largestContentfulPaintObjectPath_leq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectPath_like: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectPath_lt: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectPath_neq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly largestContentfulPaintObjectPath_notlike: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectScheme: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectScheme_geq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectScheme_gt: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly largestContentfulPaintObjectScheme_leq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectScheme_like: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectScheme_lt: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectScheme_neq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintObjectScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly largestContentfulPaintObjectScheme_notlike: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintPath: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintPath_geq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintPath_gt: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly largestContentfulPaintPath_leq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintPath_like: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintPath_lt: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintPath_neq: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaintPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly largestContentfulPaintPath_notlike: InputMaybe<Scalars['string']>;
    readonly largestContentfulPaint_geq: InputMaybe<Scalars['int64']>;
    readonly largestContentfulPaint_gt: InputMaybe<Scalars['int64']>;
    readonly largestContentfulPaint_in: InputMaybe<readonly Scalars['int64'][]>;
    readonly largestContentfulPaint_leq: InputMaybe<Scalars['int64']>;
    readonly largestContentfulPaint_lt: InputMaybe<Scalars['int64']>;
    readonly largestContentfulPaint_neq: InputMaybe<Scalars['int64']>;
    readonly largestContentfulPaint_notin: InputMaybe<readonly Scalars['int64'][]>;
    readonly refererHost: InputMaybe<Scalars['string']>;
    readonly refererHost_geq: InputMaybe<Scalars['string']>;
    readonly refererHost_gt: InputMaybe<Scalars['string']>;
    readonly refererHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly refererHost_leq: InputMaybe<Scalars['string']>;
    readonly refererHost_like: InputMaybe<Scalars['string']>;
    readonly refererHost_lt: InputMaybe<Scalars['string']>;
    readonly refererHost_neq: InputMaybe<Scalars['string']>;
    readonly refererHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly refererHost_notlike: InputMaybe<Scalars['string']>;
    readonly refererPath: InputMaybe<Scalars['string']>;
    readonly refererPath_geq: InputMaybe<Scalars['string']>;
    readonly refererPath_gt: InputMaybe<Scalars['string']>;
    readonly refererPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly refererPath_leq: InputMaybe<Scalars['string']>;
    readonly refererPath_like: InputMaybe<Scalars['string']>;
    readonly refererPath_lt: InputMaybe<Scalars['string']>;
    readonly refererPath_neq: InputMaybe<Scalars['string']>;
    readonly refererPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly refererPath_notlike: InputMaybe<Scalars['string']>;
    readonly refererScheme: InputMaybe<Scalars['string']>;
    readonly refererScheme_geq: InputMaybe<Scalars['string']>;
    readonly refererScheme_gt: InputMaybe<Scalars['string']>;
    readonly refererScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly refererScheme_leq: InputMaybe<Scalars['string']>;
    readonly refererScheme_like: InputMaybe<Scalars['string']>;
    readonly refererScheme_lt: InputMaybe<Scalars['string']>;
    readonly refererScheme_neq: InputMaybe<Scalars['string']>;
    readonly refererScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly refererScheme_notlike: InputMaybe<Scalars['string']>;
    readonly requestHost: InputMaybe<Scalars['string']>;
    readonly requestHost_geq: InputMaybe<Scalars['string']>;
    readonly requestHost_gt: InputMaybe<Scalars['string']>;
    readonly requestHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestHost_leq: InputMaybe<Scalars['string']>;
    readonly requestHost_like: InputMaybe<Scalars['string']>;
    readonly requestHost_lt: InputMaybe<Scalars['string']>;
    readonly requestHost_neq: InputMaybe<Scalars['string']>;
    readonly requestHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestHost_notlike: InputMaybe<Scalars['string']>;
    readonly requestPath: InputMaybe<Scalars['string']>;
    readonly requestPath_geq: InputMaybe<Scalars['string']>;
    readonly requestPath_gt: InputMaybe<Scalars['string']>;
    readonly requestPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestPath_leq: InputMaybe<Scalars['string']>;
    readonly requestPath_like: InputMaybe<Scalars['string']>;
    readonly requestPath_lt: InputMaybe<Scalars['string']>;
    readonly requestPath_neq: InputMaybe<Scalars['string']>;
    readonly requestPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestPath_notlike: InputMaybe<Scalars['string']>;
    readonly requestScheme: InputMaybe<Scalars['string']>;
    readonly requestScheme_geq: InputMaybe<Scalars['string']>;
    readonly requestScheme_gt: InputMaybe<Scalars['string']>;
    readonly requestScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestScheme_leq: InputMaybe<Scalars['string']>;
    readonly requestScheme_like: InputMaybe<Scalars['string']>;
    readonly requestScheme_lt: InputMaybe<Scalars['string']>;
    readonly requestScheme_neq: InputMaybe<Scalars['string']>;
    readonly requestScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestScheme_notlike: InputMaybe<Scalars['string']>;
    readonly siteTag: InputMaybe<Scalars['string']>;
    readonly siteTag_geq: InputMaybe<Scalars['string']>;
    readonly siteTag_gt: InputMaybe<Scalars['string']>;
    readonly siteTag_in: InputMaybe<readonly Scalars['string'][]>;
    readonly siteTag_leq: InputMaybe<Scalars['string']>;
    readonly siteTag_like: InputMaybe<Scalars['string']>;
    readonly siteTag_lt: InputMaybe<Scalars['string']>;
    readonly siteTag_neq: InputMaybe<Scalars['string']>;
    readonly siteTag_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly siteTag_notlike: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_geq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_gt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_leq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_like: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_lt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_neq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_notlike: InputMaybe<Scalars['string']>;
    readonly userAgentOS: InputMaybe<Scalars['string']>;
    readonly userAgentOS_geq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_gt: InputMaybe<Scalars['string']>;
    readonly userAgentOS_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentOS_leq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_like: InputMaybe<Scalars['string']>;
    readonly userAgentOS_lt: InputMaybe<Scalars['string']>;
    readonly userAgentOS_neq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentOS_notlike: InputMaybe<Scalars['string']>;
}

type AccountRumWebVitalsEventsAdaptiveGroupsOrderBy =
  /** avg(cumulativeLayoutShift) ascending */
  | 'avg_cumulativeLayoutShift_ASC'
  /** avg(cumulativeLayoutShift) descending */
  | 'avg_cumulativeLayoutShift_DESC'
  /** avg(firstInputDelay) ascending */
  | 'avg_firstInputDelay_ASC'
  /** avg(firstInputDelay) descending */
  | 'avg_firstInputDelay_DESC'
  /** avg(largestContentfulPaint) ascending */
  | 'avg_largestContentfulPaint_ASC'
  /** avg(largestContentfulPaint) descending */
  | 'avg_largestContentfulPaint_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** countryName ascending */
  | 'countryName_ASC'
  /** countryName descending */
  | 'countryName_DESC'
  /** cumulativeLayoutShiftElement ascending */
  | 'cumulativeLayoutShiftElement_ASC'
  /** cumulativeLayoutShiftElement descending */
  | 'cumulativeLayoutShiftElement_DESC'
  /** cumulativeLayoutShiftPath ascending */
  | 'cumulativeLayoutShiftPath_ASC'
  /** cumulativeLayoutShiftPath descending */
  | 'cumulativeLayoutShiftPath_DESC'
  /** customTagInternalSxg ascending */
  | 'customTagInternalSxg_ASC'
  /** customTagInternalSxg descending */
  | 'customTagInternalSxg_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** deviceType ascending */
  | 'deviceType_ASC'
  /** deviceType descending */
  | 'deviceType_DESC'
  /** firstInputDelayElement ascending */
  | 'firstInputDelayElement_ASC'
  /** firstInputDelayElement descending */
  | 'firstInputDelayElement_DESC'
  /** firstInputDelayName ascending */
  | 'firstInputDelayName_ASC'
  /** firstInputDelayName descending */
  | 'firstInputDelayName_DESC'
  /** firstInputDelayPath ascending */
  | 'firstInputDelayPath_ASC'
  /** firstInputDelayPath descending */
  | 'firstInputDelayPath_DESC'
  /** largestContentfulPaintElement ascending */
  | 'largestContentfulPaintElement_ASC'
  /** largestContentfulPaintElement descending */
  | 'largestContentfulPaintElement_DESC'
  /** largestContentfulPaintObjectHost ascending */
  | 'largestContentfulPaintObjectHost_ASC'
  /** largestContentfulPaintObjectHost descending */
  | 'largestContentfulPaintObjectHost_DESC'
  /** largestContentfulPaintObjectPath ascending */
  | 'largestContentfulPaintObjectPath_ASC'
  /** largestContentfulPaintObjectPath descending */
  | 'largestContentfulPaintObjectPath_DESC'
  /** largestContentfulPaintObjectScheme ascending */
  | 'largestContentfulPaintObjectScheme_ASC'
  /** largestContentfulPaintObjectScheme descending */
  | 'largestContentfulPaintObjectScheme_DESC'
  /** largestContentfulPaintPath ascending */
  | 'largestContentfulPaintPath_ASC'
  /** largestContentfulPaintPath descending */
  | 'largestContentfulPaintPath_DESC'
  /** quantiles(cumulativeLayoutShiftP50) ascending */
  | 'quantiles_cumulativeLayoutShiftP50_ASC'
  /** quantiles(cumulativeLayoutShiftP50) descending */
  | 'quantiles_cumulativeLayoutShiftP50_DESC'
  /** quantiles(cumulativeLayoutShiftP75) ascending */
  | 'quantiles_cumulativeLayoutShiftP75_ASC'
  /** quantiles(cumulativeLayoutShiftP75) descending */
  | 'quantiles_cumulativeLayoutShiftP75_DESC'
  /** quantiles(cumulativeLayoutShiftP90) ascending */
  | 'quantiles_cumulativeLayoutShiftP90_ASC'
  /** quantiles(cumulativeLayoutShiftP90) descending */
  | 'quantiles_cumulativeLayoutShiftP90_DESC'
  /** quantiles(cumulativeLayoutShiftP99) ascending */
  | 'quantiles_cumulativeLayoutShiftP99_ASC'
  /** quantiles(cumulativeLayoutShiftP99) descending */
  | 'quantiles_cumulativeLayoutShiftP99_DESC'
  /** quantiles(firstInputDelayP50) ascending */
  | 'quantiles_firstInputDelayP50_ASC'
  /** quantiles(firstInputDelayP50) descending */
  | 'quantiles_firstInputDelayP50_DESC'
  /** quantiles(firstInputDelayP75) ascending */
  | 'quantiles_firstInputDelayP75_ASC'
  /** quantiles(firstInputDelayP75) descending */
  | 'quantiles_firstInputDelayP75_DESC'
  /** quantiles(firstInputDelayP90) ascending */
  | 'quantiles_firstInputDelayP90_ASC'
  /** quantiles(firstInputDelayP90) descending */
  | 'quantiles_firstInputDelayP90_DESC'
  /** quantiles(firstInputDelayP99) ascending */
  | 'quantiles_firstInputDelayP99_ASC'
  /** quantiles(firstInputDelayP99) descending */
  | 'quantiles_firstInputDelayP99_DESC'
  /** quantiles(largestContentfulPaintP50) ascending */
  | 'quantiles_largestContentfulPaintP50_ASC'
  /** quantiles(largestContentfulPaintP50) descending */
  | 'quantiles_largestContentfulPaintP50_DESC'
  /** quantiles(largestContentfulPaintP75) ascending */
  | 'quantiles_largestContentfulPaintP75_ASC'
  /** quantiles(largestContentfulPaintP75) descending */
  | 'quantiles_largestContentfulPaintP75_DESC'
  /** quantiles(largestContentfulPaintP90) ascending */
  | 'quantiles_largestContentfulPaintP90_ASC'
  /** quantiles(largestContentfulPaintP90) descending */
  | 'quantiles_largestContentfulPaintP90_DESC'
  /** quantiles(largestContentfulPaintP99) ascending */
  | 'quantiles_largestContentfulPaintP99_ASC'
  /** quantiles(largestContentfulPaintP99) descending */
  | 'quantiles_largestContentfulPaintP99_DESC'
  /** refererHost ascending */
  | 'refererHost_ASC'
  /** refererHost descending */
  | 'refererHost_DESC'
  /** refererPath ascending */
  | 'refererPath_ASC'
  /** refererPath descending */
  | 'refererPath_DESC'
  /** refererScheme ascending */
  | 'refererScheme_ASC'
  /** refererScheme descending */
  | 'refererScheme_DESC'
  /** requestHost ascending */
  | 'requestHost_ASC'
  /** requestHost descending */
  | 'requestHost_DESC'
  /** requestPath ascending */
  | 'requestPath_ASC'
  /** requestPath descending */
  | 'requestPath_DESC'
  /** requestScheme ascending */
  | 'requestScheme_ASC'
  /** requestScheme descending */
  | 'requestScheme_DESC'
  /** siteTag ascending */
  | 'siteTag_ASC'
  /** siteTag descending */
  | 'siteTag_DESC'
  /** sum(clsGood) ascending */
  | 'sum_clsGood_ASC'
  /** sum(clsGood) descending */
  | 'sum_clsGood_DESC'
  /** sum(clsNeedsImprovement) ascending */
  | 'sum_clsNeedsImprovement_ASC'
  /** sum(clsNeedsImprovement) descending */
  | 'sum_clsNeedsImprovement_DESC'
  /** sum(clsPoor) ascending */
  | 'sum_clsPoor_ASC'
  /** sum(clsPoor) descending */
  | 'sum_clsPoor_DESC'
  /** sum(clsTotal) ascending */
  | 'sum_clsTotal_ASC'
  /** sum(clsTotal) descending */
  | 'sum_clsTotal_DESC'
  /** sum(fidGood) ascending */
  | 'sum_fidGood_ASC'
  /** sum(fidGood) descending */
  | 'sum_fidGood_DESC'
  /** sum(fidNeedsImprovement) ascending */
  | 'sum_fidNeedsImprovement_ASC'
  /** sum(fidNeedsImprovement) descending */
  | 'sum_fidNeedsImprovement_DESC'
  /** sum(fidPoor) ascending */
  | 'sum_fidPoor_ASC'
  /** sum(fidPoor) descending */
  | 'sum_fidPoor_DESC'
  /** sum(fidTotal) ascending */
  | 'sum_fidTotal_ASC'
  /** sum(fidTotal) descending */
  | 'sum_fidTotal_DESC'
  /** sum(lcpGood) ascending */
  | 'sum_lcpGood_ASC'
  /** sum(lcpGood) descending */
  | 'sum_lcpGood_DESC'
  /** sum(lcpNeedsImprovement) ascending */
  | 'sum_lcpNeedsImprovement_ASC'
  /** sum(lcpNeedsImprovement) descending */
  | 'sum_lcpNeedsImprovement_DESC'
  /** sum(lcpPoor) ascending */
  | 'sum_lcpPoor_ASC'
  /** sum(lcpPoor) descending */
  | 'sum_lcpPoor_DESC'
  /** sum(lcpTotal) ascending */
  | 'sum_lcpTotal_ASC'
  /** sum(lcpTotal) descending */
  | 'sum_lcpTotal_DESC'
  /** sum(visits) ascending */
  | 'sum_visits_ASC'
  /** sum(visits) descending */
  | 'sum_visits_DESC'
  /** userAgentBrowser ascending */
  | 'userAgentBrowser_ASC'
  /** userAgentBrowser descending */
  | 'userAgentBrowser_DESC'
  /** userAgentOS ascending */
  | 'userAgentOS_ASC'
  /** userAgentOS descending */
  | 'userAgentOS_DESC';

type AccountRumWebVitalsEventsAdaptiveOrderBy =
  /** countryName ascending */
  | 'countryName_ASC'
  /** countryName descending */
  | 'countryName_DESC'
  /** cumulativeLayoutShiftCurrentRect ascending */
  | 'cumulativeLayoutShiftCurrentRect_ASC'
  /** cumulativeLayoutShiftCurrentRect descending */
  | 'cumulativeLayoutShiftCurrentRect_DESC'
  /** cumulativeLayoutShiftElement ascending */
  | 'cumulativeLayoutShiftElement_ASC'
  /** cumulativeLayoutShiftElement descending */
  | 'cumulativeLayoutShiftElement_DESC'
  /** cumulativeLayoutShiftPath ascending */
  | 'cumulativeLayoutShiftPath_ASC'
  /** cumulativeLayoutShiftPath descending */
  | 'cumulativeLayoutShiftPath_DESC'
  /** cumulativeLayoutShiftPreviousRect ascending */
  | 'cumulativeLayoutShiftPreviousRect_ASC'
  /** cumulativeLayoutShiftPreviousRect descending */
  | 'cumulativeLayoutShiftPreviousRect_DESC'
  /** cumulativeLayoutShift ascending */
  | 'cumulativeLayoutShift_ASC'
  /** cumulativeLayoutShift descending */
  | 'cumulativeLayoutShift_DESC'
  /** customTagInternalSxg ascending */
  | 'customTagInternalSxg_ASC'
  /** customTagInternalSxg descending */
  | 'customTagInternalSxg_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** deviceType ascending */
  | 'deviceType_ASC'
  /** deviceType descending */
  | 'deviceType_DESC'
  /** refererHost ascending */
  | 'refererHost_ASC'
  /** refererHost descending */
  | 'refererHost_DESC'
  /** refererPath ascending */
  | 'refererPath_ASC'
  /** refererPath descending */
  | 'refererPath_DESC'
  /** refererScheme ascending */
  | 'refererScheme_ASC'
  /** refererScheme descending */
  | 'refererScheme_DESC'
  /** requestHost ascending */
  | 'requestHost_ASC'
  /** requestHost descending */
  | 'requestHost_DESC'
  /** requestPath ascending */
  | 'requestPath_ASC'
  /** requestPath descending */
  | 'requestPath_DESC'
  /** requestScheme ascending */
  | 'requestScheme_ASC'
  /** requestScheme descending */
  | 'requestScheme_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** siteTag ascending */
  | 'siteTag_ASC'
  /** siteTag descending */
  | 'siteTag_DESC'
  /** userAgentBrowser ascending */
  | 'userAgentBrowser_ASC'
  /** userAgentBrowser descending */
  | 'userAgentBrowser_DESC'
  /** userAgentOS ascending */
  | 'userAgentOS_ASC'
  /** userAgentOS descending */
  | 'userAgentOS_DESC';

interface AccountSpectrumNetworkAnalyticsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountSpectrumNetworkAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountSpectrumNetworkAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly coloCity: InputMaybe<Scalars['string']>;
    readonly coloCity_geq: InputMaybe<Scalars['string']>;
    readonly coloCity_gt: InputMaybe<Scalars['string']>;
    readonly coloCity_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_leq: InputMaybe<Scalars['string']>;
    readonly coloCity_like: InputMaybe<Scalars['string']>;
    readonly coloCity_lt: InputMaybe<Scalars['string']>;
    readonly coloCity_neq: InputMaybe<Scalars['string']>;
    readonly coloCity_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCity_notlike: InputMaybe<Scalars['string']>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly coloCountry: InputMaybe<Scalars['string']>;
    readonly coloCountry_geq: InputMaybe<Scalars['string']>;
    readonly coloCountry_gt: InputMaybe<Scalars['string']>;
    readonly coloCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_leq: InputMaybe<Scalars['string']>;
    readonly coloCountry_like: InputMaybe<Scalars['string']>;
    readonly coloCountry_lt: InputMaybe<Scalars['string']>;
    readonly coloCountry_neq: InputMaybe<Scalars['string']>;
    readonly coloCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCountry_notlike: InputMaybe<Scalars['string']>;
    readonly coloGeohash: InputMaybe<Scalars['string']>;
    readonly coloGeohash_geq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_gt: InputMaybe<Scalars['string']>;
    readonly coloGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloGeohash_leq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_like: InputMaybe<Scalars['string']>;
    readonly coloGeohash_lt: InputMaybe<Scalars['string']>;
    readonly coloGeohash_neq: InputMaybe<Scalars['string']>;
    readonly coloGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly coloName: InputMaybe<Scalars['string']>;
    readonly coloName_geq: InputMaybe<Scalars['string']>;
    readonly coloName_gt: InputMaybe<Scalars['string']>;
    readonly coloName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloName_leq: InputMaybe<Scalars['string']>;
    readonly coloName_like: InputMaybe<Scalars['string']>;
    readonly coloName_lt: InputMaybe<Scalars['string']>;
    readonly coloName_neq: InputMaybe<Scalars['string']>;
    readonly coloName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeTenSeconds_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeTenSeconds_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationAsn: InputMaybe<Scalars['uint32']>;
    readonly destinationAsnName: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_geq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_gt: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAsnName_leq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_like: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_lt: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_neq: InputMaybe<Scalars['string']>;
    readonly destinationAsnName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationAsnName_notlike: InputMaybe<Scalars['string']>;
    readonly destinationAsn_geq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_gt: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly destinationAsn_leq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_lt: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_neq: InputMaybe<Scalars['uint32']>;
    readonly destinationAsn_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly destinationCountry: InputMaybe<Scalars['string']>;
    readonly destinationCountry_geq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_gt: InputMaybe<Scalars['string']>;
    readonly destinationCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationCountry_leq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_like: InputMaybe<Scalars['string']>;
    readonly destinationCountry_lt: InputMaybe<Scalars['string']>;
    readonly destinationCountry_neq: InputMaybe<Scalars['string']>;
    readonly destinationCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationCountry_notlike: InputMaybe<Scalars['string']>;
    readonly destinationGeohash: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_geq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_gt: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationGeohash_leq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_like: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_lt: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_neq: InputMaybe<Scalars['string']>;
    readonly destinationGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly direction: InputMaybe<Scalars['string']>;
    readonly direction_geq: InputMaybe<Scalars['string']>;
    readonly direction_gt: InputMaybe<Scalars['string']>;
    readonly direction_in: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_leq: InputMaybe<Scalars['string']>;
    readonly direction_like: InputMaybe<Scalars['string']>;
    readonly direction_lt: InputMaybe<Scalars['string']>;
    readonly direction_neq: InputMaybe<Scalars['string']>;
    readonly direction_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly direction_notlike: InputMaybe<Scalars['string']>;
    readonly ethertype: InputMaybe<Scalars['uint16']>;
    readonly ethertype_geq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_gt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ethertype_leq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_lt: InputMaybe<Scalars['uint16']>;
    readonly ethertype_neq: InputMaybe<Scalars['uint16']>;
    readonly ethertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greChecksum: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly greChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greEthertype: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_geq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_gt: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greEthertype_leq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_lt: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_neq: InputMaybe<Scalars['uint16']>;
    readonly greEthertype_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greHeaderLength: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_geq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_gt: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greHeaderLength_leq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_lt: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_neq: InputMaybe<Scalars['uint16']>;
    readonly greHeaderLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly greKey: InputMaybe<Scalars['uint32']>;
    readonly greKey_geq: InputMaybe<Scalars['uint32']>;
    readonly greKey_gt: InputMaybe<Scalars['uint32']>;
    readonly greKey_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greKey_leq: InputMaybe<Scalars['uint32']>;
    readonly greKey_lt: InputMaybe<Scalars['uint32']>;
    readonly greKey_neq: InputMaybe<Scalars['uint32']>;
    readonly greKey_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greSequenceNumber: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greSequenceNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly greSequenceNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly greVersion: InputMaybe<Scalars['uint8']>;
    readonly greVersion_geq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_gt: InputMaybe<Scalars['uint8']>;
    readonly greVersion_in: InputMaybe<Scalars['bytes']>;
    readonly greVersion_leq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_lt: InputMaybe<Scalars['uint8']>;
    readonly greVersion_neq: InputMaybe<Scalars['uint8']>;
    readonly greVersion_notin: InputMaybe<Scalars['bytes']>;
    readonly icmpChecksum: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly icmpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly icmpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly icmpCode: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_geq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_gt: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_in: InputMaybe<Scalars['bytes']>;
    readonly icmpCode_leq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_lt: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_neq: InputMaybe<Scalars['uint8']>;
    readonly icmpCode_notin: InputMaybe<Scalars['bytes']>;
    readonly icmpType: InputMaybe<Scalars['uint8']>;
    readonly icmpType_geq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_gt: InputMaybe<Scalars['uint8']>;
    readonly icmpType_in: InputMaybe<Scalars['bytes']>;
    readonly icmpType_leq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_lt: InputMaybe<Scalars['uint8']>;
    readonly icmpType_neq: InputMaybe<Scalars['uint8']>;
    readonly icmpType_notin: InputMaybe<Scalars['bytes']>;
    readonly ipDestinationAddress: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_like: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipDestinationAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationAddress_notlike: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_geq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_gt: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationSubnet_leq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_like: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_lt: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_neq: InputMaybe<Scalars['string']>;
    readonly ipDestinationSubnet_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipDestinationSubnet_notlike: InputMaybe<Scalars['string']>;
    readonly ipFragmentOffset: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_geq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_gt: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipFragmentOffset_leq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_lt: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_neq: InputMaybe<Scalars['uint16']>;
    readonly ipFragmentOffset_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipHeaderLength: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_geq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_gt: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipHeaderLength_leq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_lt: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_neq: InputMaybe<Scalars['uint16']>;
    readonly ipHeaderLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipMoreFragments: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_geq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_gt: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_in: InputMaybe<Scalars['bytes']>;
    readonly ipMoreFragments_leq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_lt: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_neq: InputMaybe<Scalars['uint8']>;
    readonly ipMoreFragments_notin: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol: InputMaybe<Scalars['uint8']>;
    readonly ipProtocolName: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_geq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_gt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_leq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_like: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_lt: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_neq: InputMaybe<Scalars['string']>;
    readonly ipProtocolName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipProtocolName_notlike: InputMaybe<Scalars['string']>;
    readonly ipProtocol_geq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_gt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_in: InputMaybe<Scalars['bytes']>;
    readonly ipProtocol_leq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_lt: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_neq: InputMaybe<Scalars['uint8']>;
    readonly ipProtocol_notin: InputMaybe<Scalars['bytes']>;
    readonly ipSourceAddress: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_geq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_gt: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceAddress_leq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_like: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_lt: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_neq: InputMaybe<Scalars['string']>;
    readonly ipSourceAddress_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceAddress_notlike: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_geq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_gt: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceSubnet_leq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_like: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_lt: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_neq: InputMaybe<Scalars['string']>;
    readonly ipSourceSubnet_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipSourceSubnet_notlike: InputMaybe<Scalars['string']>;
    readonly ipTotalLength: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_geq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_gt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLengthBuckets_leq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_lt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_neq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLengthBuckets_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLength_geq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_gt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTotalLength_leq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_lt: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_neq: InputMaybe<Scalars['uint16']>;
    readonly ipTotalLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipTtl: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_geq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_gt: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_in: InputMaybe<Scalars['bytes']>;
    readonly ipTtlBuckets_leq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_lt: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_neq: InputMaybe<Scalars['uint8']>;
    readonly ipTtlBuckets_notin: InputMaybe<Scalars['bytes']>;
    readonly ipTtl_geq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_gt: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_in: InputMaybe<Scalars['bytes']>;
    readonly ipTtl_leq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_lt: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_neq: InputMaybe<Scalars['uint8']>;
    readonly ipTtl_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Checksum: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_geq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_gt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Checksum_leq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_lt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_neq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Checksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4DontFragment: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4DontFragment_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4DontFragment_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Dscp: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4Dscp_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Dscp_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Ecn: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_in: InputMaybe<Scalars['bytes']>;
    readonly ipv4Ecn_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv4Ecn_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv4Identification: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_geq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_gt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Identification_leq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_lt: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_neq: InputMaybe<Scalars['uint16']>;
    readonly ipv4Identification_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly ipv4Options: InputMaybe<Scalars['string']>;
    readonly ipv4Options_geq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_gt: InputMaybe<Scalars['string']>;
    readonly ipv4Options_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv4Options_leq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_like: InputMaybe<Scalars['string']>;
    readonly ipv4Options_lt: InputMaybe<Scalars['string']>;
    readonly ipv4Options_neq: InputMaybe<Scalars['string']>;
    readonly ipv4Options_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv4Options_notlike: InputMaybe<Scalars['string']>;
    readonly ipv6Dscp: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_in: InputMaybe<Scalars['bytes']>;
    readonly ipv6Dscp_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Dscp_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv6Ecn: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_geq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_gt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_in: InputMaybe<Scalars['bytes']>;
    readonly ipv6Ecn_leq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_lt: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_neq: InputMaybe<Scalars['uint8']>;
    readonly ipv6Ecn_notin: InputMaybe<Scalars['bytes']>;
    readonly ipv6ExtensionHeaders: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_geq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_gt: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv6ExtensionHeaders_leq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_like: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_lt: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_neq: InputMaybe<Scalars['string']>;
    readonly ipv6ExtensionHeaders_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ipv6ExtensionHeaders_notlike: InputMaybe<Scalars['string']>;
    readonly ipv6FlowLabel: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_geq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_gt: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6FlowLabel_leq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_lt: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_neq: InputMaybe<Scalars['uint32']>;
    readonly ipv6FlowLabel_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6Identification: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_geq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_gt: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly ipv6Identification_leq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_lt: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_neq: InputMaybe<Scalars['uint32']>;
    readonly ipv6Identification_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly mitigationSystem: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_geq: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_gt: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationSystem_leq: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_like: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_lt: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_neq: InputMaybe<Scalars['string']>;
    readonly mitigationSystem_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mitigationSystem_notlike: InputMaybe<Scalars['string']>;
    readonly outcome: InputMaybe<Scalars['string']>;
    readonly outcome_geq: InputMaybe<Scalars['string']>;
    readonly outcome_gt: InputMaybe<Scalars['string']>;
    readonly outcome_in: InputMaybe<readonly Scalars['string'][]>;
    readonly outcome_leq: InputMaybe<Scalars['string']>;
    readonly outcome_like: InputMaybe<Scalars['string']>;
    readonly outcome_lt: InputMaybe<Scalars['string']>;
    readonly outcome_neq: InputMaybe<Scalars['string']>;
    readonly outcome_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly outcome_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceAsn: InputMaybe<Scalars['uint32']>;
    readonly sourceAsnName: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_geq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_gt: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAsnName_leq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_like: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_lt: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_neq: InputMaybe<Scalars['string']>;
    readonly sourceAsnName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceAsnName_notlike: InputMaybe<Scalars['string']>;
    readonly sourceAsn_geq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_gt: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceAsn_leq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_lt: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_neq: InputMaybe<Scalars['uint32']>;
    readonly sourceAsn_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sourceCountry: InputMaybe<Scalars['string']>;
    readonly sourceCountry_geq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_gt: InputMaybe<Scalars['string']>;
    readonly sourceCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceCountry_leq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_like: InputMaybe<Scalars['string']>;
    readonly sourceCountry_lt: InputMaybe<Scalars['string']>;
    readonly sourceCountry_neq: InputMaybe<Scalars['string']>;
    readonly sourceCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceCountry_notlike: InputMaybe<Scalars['string']>;
    readonly sourceGeohash: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_geq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_gt: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceGeohash_leq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_like: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_lt: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_neq: InputMaybe<Scalars['string']>;
    readonly sourceGeohash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sourceGeohash_notlike: InputMaybe<Scalars['string']>;
    readonly sourcePort: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_geq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_gt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly sourcePort_leq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_lt: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_neq: InputMaybe<Scalars['uint16']>;
    readonly sourcePort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpAcknowledgementNumber: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpAcknowledgementNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpAcknowledgementNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpChecksum: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpDataOffset: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpDataOffset_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpDataOffset_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpFlags: InputMaybe<Scalars['uint8']>;
    readonly tcpFlagsString: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_geq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_gt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_leq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_like: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_lt: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_neq: InputMaybe<Scalars['string']>;
    readonly tcpFlagsString_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpFlagsString_notlike: InputMaybe<Scalars['string']>;
    readonly tcpFlags_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_in: InputMaybe<Scalars['bytes']>;
    readonly tcpFlags_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpFlags_notin: InputMaybe<Scalars['bytes']>;
    readonly tcpMss: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpMss_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpMss_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpOptions: InputMaybe<Scalars['string']>;
    readonly tcpOptions_geq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_gt: InputMaybe<Scalars['string']>;
    readonly tcpOptions_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpOptions_leq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_like: InputMaybe<Scalars['string']>;
    readonly tcpOptions_lt: InputMaybe<Scalars['string']>;
    readonly tcpOptions_neq: InputMaybe<Scalars['string']>;
    readonly tcpOptions_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpOptions_notlike: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_geq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_gt: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_in: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpSackBlocks_leq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_like: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_lt: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_neq: InputMaybe<Scalars['string']>;
    readonly tcpSackBlocks_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly tcpSackBlocks_notlike: InputMaybe<Scalars['string']>;
    readonly tcpSackPermitted: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_geq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_gt: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_in: InputMaybe<Scalars['bytes']>;
    readonly tcpSackPermitted_leq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_lt: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_neq: InputMaybe<Scalars['uint8']>;
    readonly tcpSackPermitted_notin: InputMaybe<Scalars['bytes']>;
    readonly tcpSequenceNumber: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpSequenceNumber_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpSequenceNumber_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampEcr: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampEcr_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampEcr_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampValue: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpTimestampValue_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpTimestampValue_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpUrgentPointer: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpUrgentPointer_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpUrgentPointer_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowScale: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowScale_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowScale_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowSize: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_geq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_gt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly tcpWindowSize_leq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_lt: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_neq: InputMaybe<Scalars['uint16']>;
    readonly tcpWindowSize_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpChecksum: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_geq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_gt: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpChecksum_leq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_lt: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_neq: InputMaybe<Scalars['uint16']>;
    readonly udpChecksum_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpPayloadLength: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_geq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_gt: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly udpPayloadLength_leq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_lt: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_neq: InputMaybe<Scalars['uint16']>;
    readonly udpPayloadLength_notin: InputMaybe<readonly Scalars['uint16'][]>;
}

type AccountSpectrumNetworkAnalyticsAdaptiveGroupsOrderBy =
  /** avg(bitRateDay) ascending */
  | 'avg_bitRateDay_ASC'
  /** avg(bitRateDay) descending */
  | 'avg_bitRateDay_DESC'
  /** avg(bitRateFifteenMinutes) ascending */
  | 'avg_bitRateFifteenMinutes_ASC'
  /** avg(bitRateFifteenMinutes) descending */
  | 'avg_bitRateFifteenMinutes_DESC'
  /** avg(bitRateFiveMinutes) ascending */
  | 'avg_bitRateFiveMinutes_ASC'
  /** avg(bitRateFiveMinutes) descending */
  | 'avg_bitRateFiveMinutes_DESC'
  /** avg(bitRateHour) ascending */
  | 'avg_bitRateHour_ASC'
  /** avg(bitRateHour) descending */
  | 'avg_bitRateHour_DESC'
  /** avg(bitRateMinute) ascending */
  | 'avg_bitRateMinute_ASC'
  /** avg(bitRateMinute) descending */
  | 'avg_bitRateMinute_DESC'
  /** avg(bitRateTenSeconds) ascending */
  | 'avg_bitRateTenSeconds_ASC'
  /** avg(bitRateTenSeconds) descending */
  | 'avg_bitRateTenSeconds_DESC'
  /** avg(bitRate) ascending */
  | 'avg_bitRate_ASC'
  /** avg(bitRate) descending */
  | 'avg_bitRate_DESC'
  /** avg(packetRateDay) ascending */
  | 'avg_packetRateDay_ASC'
  /** avg(packetRateDay) descending */
  | 'avg_packetRateDay_DESC'
  /** avg(packetRateFifteenMinutes) ascending */
  | 'avg_packetRateFifteenMinutes_ASC'
  /** avg(packetRateFifteenMinutes) descending */
  | 'avg_packetRateFifteenMinutes_DESC'
  /** avg(packetRateFiveMinutes) ascending */
  | 'avg_packetRateFiveMinutes_ASC'
  /** avg(packetRateFiveMinutes) descending */
  | 'avg_packetRateFiveMinutes_DESC'
  /** avg(packetRateHour) ascending */
  | 'avg_packetRateHour_ASC'
  /** avg(packetRateHour) descending */
  | 'avg_packetRateHour_DESC'
  /** avg(packetRateMinute) ascending */
  | 'avg_packetRateMinute_ASC'
  /** avg(packetRateMinute) descending */
  | 'avg_packetRateMinute_DESC'
  /** avg(packetRateTenSeconds) ascending */
  | 'avg_packetRateTenSeconds_ASC'
  /** avg(packetRateTenSeconds) descending */
  | 'avg_packetRateTenSeconds_DESC'
  /** avg(packetRate) ascending */
  | 'avg_packetRate_ASC'
  /** avg(packetRate) descending */
  | 'avg_packetRate_DESC'
  /** coloCity ascending */
  | 'coloCity_ASC'
  /** coloCity descending */
  | 'coloCity_DESC'
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** coloCountry ascending */
  | 'coloCountry_ASC'
  /** coloCountry descending */
  | 'coloCountry_DESC'
  /** coloGeohash ascending */
  | 'coloGeohash_ASC'
  /** coloGeohash descending */
  | 'coloGeohash_DESC'
  /** coloName ascending */
  | 'coloName_ASC'
  /** coloName descending */
  | 'coloName_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetimeTenSeconds ascending */
  | 'datetimeTenSeconds_ASC'
  /** datetimeTenSeconds descending */
  | 'datetimeTenSeconds_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** destinationAsnName ascending */
  | 'destinationAsnName_ASC'
  /** destinationAsnName descending */
  | 'destinationAsnName_DESC'
  /** destinationAsn ascending */
  | 'destinationAsn_ASC'
  /** destinationAsn descending */
  | 'destinationAsn_DESC'
  /** destinationCountry ascending */
  | 'destinationCountry_ASC'
  /** destinationCountry descending */
  | 'destinationCountry_DESC'
  /** destinationGeohash ascending */
  | 'destinationGeohash_ASC'
  /** destinationGeohash descending */
  | 'destinationGeohash_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** direction ascending */
  | 'direction_ASC'
  /** direction descending */
  | 'direction_DESC'
  /** ethertype ascending */
  | 'ethertype_ASC'
  /** ethertype descending */
  | 'ethertype_DESC'
  /** greChecksum ascending */
  | 'greChecksum_ASC'
  /** greChecksum descending */
  | 'greChecksum_DESC'
  /** greEthertype ascending */
  | 'greEthertype_ASC'
  /** greEthertype descending */
  | 'greEthertype_DESC'
  /** greHeaderLength ascending */
  | 'greHeaderLength_ASC'
  /** greHeaderLength descending */
  | 'greHeaderLength_DESC'
  /** greKey ascending */
  | 'greKey_ASC'
  /** greKey descending */
  | 'greKey_DESC'
  /** greSequenceNumber ascending */
  | 'greSequenceNumber_ASC'
  /** greSequenceNumber descending */
  | 'greSequenceNumber_DESC'
  /** greVersion ascending */
  | 'greVersion_ASC'
  /** greVersion descending */
  | 'greVersion_DESC'
  /** icmpChecksum ascending */
  | 'icmpChecksum_ASC'
  /** icmpChecksum descending */
  | 'icmpChecksum_DESC'
  /** icmpCode ascending */
  | 'icmpCode_ASC'
  /** icmpCode descending */
  | 'icmpCode_DESC'
  /** icmpType ascending */
  | 'icmpType_ASC'
  /** icmpType descending */
  | 'icmpType_DESC'
  /** ipDestinationAddress ascending */
  | 'ipDestinationAddress_ASC'
  /** ipDestinationAddress descending */
  | 'ipDestinationAddress_DESC'
  /** ipDestinationSubnet ascending */
  | 'ipDestinationSubnet_ASC'
  /** ipDestinationSubnet descending */
  | 'ipDestinationSubnet_DESC'
  /** ipFragmentOffset ascending */
  | 'ipFragmentOffset_ASC'
  /** ipFragmentOffset descending */
  | 'ipFragmentOffset_DESC'
  /** ipHeaderLength ascending */
  | 'ipHeaderLength_ASC'
  /** ipHeaderLength descending */
  | 'ipHeaderLength_DESC'
  /** ipMoreFragments ascending */
  | 'ipMoreFragments_ASC'
  /** ipMoreFragments descending */
  | 'ipMoreFragments_DESC'
  /** ipProtocolName ascending */
  | 'ipProtocolName_ASC'
  /** ipProtocolName descending */
  | 'ipProtocolName_DESC'
  /** ipProtocol ascending */
  | 'ipProtocol_ASC'
  /** ipProtocol descending */
  | 'ipProtocol_DESC'
  /** ipSourceAddress ascending */
  | 'ipSourceAddress_ASC'
  /** ipSourceAddress descending */
  | 'ipSourceAddress_DESC'
  /** ipSourceSubnet ascending */
  | 'ipSourceSubnet_ASC'
  /** ipSourceSubnet descending */
  | 'ipSourceSubnet_DESC'
  /** ipTotalLengthBuckets ascending */
  | 'ipTotalLengthBuckets_ASC'
  /** ipTotalLengthBuckets descending */
  | 'ipTotalLengthBuckets_DESC'
  /** ipTotalLength ascending */
  | 'ipTotalLength_ASC'
  /** ipTotalLength descending */
  | 'ipTotalLength_DESC'
  /** ipTtlBuckets ascending */
  | 'ipTtlBuckets_ASC'
  /** ipTtlBuckets descending */
  | 'ipTtlBuckets_DESC'
  /** ipTtl ascending */
  | 'ipTtl_ASC'
  /** ipTtl descending */
  | 'ipTtl_DESC'
  /** ipv4Checksum ascending */
  | 'ipv4Checksum_ASC'
  /** ipv4Checksum descending */
  | 'ipv4Checksum_DESC'
  /** ipv4DontFragment ascending */
  | 'ipv4DontFragment_ASC'
  /** ipv4DontFragment descending */
  | 'ipv4DontFragment_DESC'
  /** ipv4Dscp ascending */
  | 'ipv4Dscp_ASC'
  /** ipv4Dscp descending */
  | 'ipv4Dscp_DESC'
  /** ipv4Ecn ascending */
  | 'ipv4Ecn_ASC'
  /** ipv4Ecn descending */
  | 'ipv4Ecn_DESC'
  /** ipv4Identification ascending */
  | 'ipv4Identification_ASC'
  /** ipv4Identification descending */
  | 'ipv4Identification_DESC'
  /** ipv4Options ascending */
  | 'ipv4Options_ASC'
  /** ipv4Options descending */
  | 'ipv4Options_DESC'
  /** ipv6Dscp ascending */
  | 'ipv6Dscp_ASC'
  /** ipv6Dscp descending */
  | 'ipv6Dscp_DESC'
  /** ipv6Ecn ascending */
  | 'ipv6Ecn_ASC'
  /** ipv6Ecn descending */
  | 'ipv6Ecn_DESC'
  /** ipv6ExtensionHeaders ascending */
  | 'ipv6ExtensionHeaders_ASC'
  /** ipv6ExtensionHeaders descending */
  | 'ipv6ExtensionHeaders_DESC'
  /** ipv6FlowLabel ascending */
  | 'ipv6FlowLabel_ASC'
  /** ipv6FlowLabel descending */
  | 'ipv6FlowLabel_DESC'
  /** ipv6Identification ascending */
  | 'ipv6Identification_ASC'
  /** ipv6Identification descending */
  | 'ipv6Identification_DESC'
  /** mitigationSystem ascending */
  | 'mitigationSystem_ASC'
  /** mitigationSystem descending */
  | 'mitigationSystem_DESC'
  /** outcome ascending */
  | 'outcome_ASC'
  /** outcome descending */
  | 'outcome_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** sourceAsnName ascending */
  | 'sourceAsnName_ASC'
  /** sourceAsnName descending */
  | 'sourceAsnName_DESC'
  /** sourceAsn ascending */
  | 'sourceAsn_ASC'
  /** sourceAsn descending */
  | 'sourceAsn_DESC'
  /** sourceCountry ascending */
  | 'sourceCountry_ASC'
  /** sourceCountry descending */
  | 'sourceCountry_DESC'
  /** sourceGeohash ascending */
  | 'sourceGeohash_ASC'
  /** sourceGeohash descending */
  | 'sourceGeohash_DESC'
  /** sourcePort ascending */
  | 'sourcePort_ASC'
  /** sourcePort descending */
  | 'sourcePort_DESC'
  /** sum(bits) ascending */
  | 'sum_bits_ASC'
  /** sum(bits) descending */
  | 'sum_bits_DESC'
  /** sum(packets) ascending */
  | 'sum_packets_ASC'
  /** sum(packets) descending */
  | 'sum_packets_DESC'
  /** system ascending */
  | 'system_ASC'
  /** system descending */
  | 'system_DESC'
  /** tcpAcknowledgementNumber ascending */
  | 'tcpAcknowledgementNumber_ASC'
  /** tcpAcknowledgementNumber descending */
  | 'tcpAcknowledgementNumber_DESC'
  /** tcpChecksum ascending */
  | 'tcpChecksum_ASC'
  /** tcpChecksum descending */
  | 'tcpChecksum_DESC'
  /** tcpDataOffset ascending */
  | 'tcpDataOffset_ASC'
  /** tcpDataOffset descending */
  | 'tcpDataOffset_DESC'
  /** tcpFlagsString ascending */
  | 'tcpFlagsString_ASC'
  /** tcpFlagsString descending */
  | 'tcpFlagsString_DESC'
  /** tcpFlags ascending */
  | 'tcpFlags_ASC'
  /** tcpFlags descending */
  | 'tcpFlags_DESC'
  /** tcpMss ascending */
  | 'tcpMss_ASC'
  /** tcpMss descending */
  | 'tcpMss_DESC'
  /** tcpOptions ascending */
  | 'tcpOptions_ASC'
  /** tcpOptions descending */
  | 'tcpOptions_DESC'
  /** tcpSackBlocks ascending */
  | 'tcpSackBlocks_ASC'
  /** tcpSackBlocks descending */
  | 'tcpSackBlocks_DESC'
  /** tcpSackPermitted ascending */
  | 'tcpSackPermitted_ASC'
  /** tcpSackPermitted descending */
  | 'tcpSackPermitted_DESC'
  /** tcpSequenceNumber ascending */
  | 'tcpSequenceNumber_ASC'
  /** tcpSequenceNumber descending */
  | 'tcpSequenceNumber_DESC'
  /** tcpTimestampEcr ascending */
  | 'tcpTimestampEcr_ASC'
  /** tcpTimestampEcr descending */
  | 'tcpTimestampEcr_DESC'
  /** tcpTimestampValue ascending */
  | 'tcpTimestampValue_ASC'
  /** tcpTimestampValue descending */
  | 'tcpTimestampValue_DESC'
  /** tcpUrgentPointer ascending */
  | 'tcpUrgentPointer_ASC'
  /** tcpUrgentPointer descending */
  | 'tcpUrgentPointer_DESC'
  /** tcpWindowScale ascending */
  | 'tcpWindowScale_ASC'
  /** tcpWindowScale descending */
  | 'tcpWindowScale_DESC'
  /** tcpWindowSize ascending */
  | 'tcpWindowSize_ASC'
  /** tcpWindowSize descending */
  | 'tcpWindowSize_DESC'
  /** udpChecksum ascending */
  | 'udpChecksum_ASC'
  /** udpChecksum descending */
  | 'udpChecksum_DESC'
  /** udpPayloadLength ascending */
  | 'udpPayloadLength_ASC'
  /** udpPayloadLength descending */
  | 'udpPayloadLength_DESC'
  /** verdict ascending */
  | 'verdict_ASC'
  /** verdict descending */
  | 'verdict_DESC';

interface AccountStorageTracesFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountStorageTracesFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountStorageTracesFilter_InputObject[]>;
    readonly containerId: InputMaybe<Scalars['string']>;
    readonly containerId_geq: InputMaybe<Scalars['string']>;
    readonly containerId_gt: InputMaybe<Scalars['string']>;
    readonly containerId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly containerId_leq: InputMaybe<Scalars['string']>;
    readonly containerId_like: InputMaybe<Scalars['string']>;
    readonly containerId_lt: InputMaybe<Scalars['string']>;
    readonly containerId_neq: InputMaybe<Scalars['string']>;
    readonly containerId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly containerId_notlike: InputMaybe<Scalars['string']>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly resourceId: InputMaybe<Scalars['string']>;
    readonly resourceId_geq: InputMaybe<Scalars['string']>;
    readonly resourceId_gt: InputMaybe<Scalars['string']>;
    readonly resourceId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly resourceId_leq: InputMaybe<Scalars['string']>;
    readonly resourceId_like: InputMaybe<Scalars['string']>;
    readonly resourceId_lt: InputMaybe<Scalars['string']>;
    readonly resourceId_neq: InputMaybe<Scalars['string']>;
    readonly resourceId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly resourceId_notlike: InputMaybe<Scalars['string']>;
    readonly serviceId: InputMaybe<Scalars['string']>;
    readonly serviceId_geq: InputMaybe<Scalars['string']>;
    readonly serviceId_gt: InputMaybe<Scalars['string']>;
    readonly serviceId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly serviceId_leq: InputMaybe<Scalars['string']>;
    readonly serviceId_like: InputMaybe<Scalars['string']>;
    readonly serviceId_lt: InputMaybe<Scalars['string']>;
    readonly serviceId_neq: InputMaybe<Scalars['string']>;
    readonly serviceId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly serviceId_notlike: InputMaybe<Scalars['string']>;
    readonly traceId: InputMaybe<Scalars['string']>;
    readonly traceId_geq: InputMaybe<Scalars['string']>;
    readonly traceId_gt: InputMaybe<Scalars['string']>;
    readonly traceId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly traceId_leq: InputMaybe<Scalars['string']>;
    readonly traceId_like: InputMaybe<Scalars['string']>;
    readonly traceId_lt: InputMaybe<Scalars['string']>;
    readonly traceId_neq: InputMaybe<Scalars['string']>;
    readonly traceId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly traceId_notlike: InputMaybe<Scalars['string']>;
    readonly userAccountId: InputMaybe<Scalars['string']>;
    readonly userAccountId_geq: InputMaybe<Scalars['string']>;
    readonly userAccountId_gt: InputMaybe<Scalars['string']>;
    readonly userAccountId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAccountId_leq: InputMaybe<Scalars['string']>;
    readonly userAccountId_like: InputMaybe<Scalars['string']>;
    readonly userAccountId_lt: InputMaybe<Scalars['string']>;
    readonly userAccountId_neq: InputMaybe<Scalars['string']>;
    readonly userAccountId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAccountId_notlike: InputMaybe<Scalars['string']>;
}

type AccountStorageTracesOrderBy =
  /** containerId ascending */
  | 'containerId_ASC'
  /** containerId descending */
  | 'containerId_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** resourceId ascending */
  | 'resourceId_ASC'
  /** resourceId descending */
  | 'resourceId_DESC'
  /** serviceId ascending */
  | 'serviceId_ASC'
  /** serviceId descending */
  | 'serviceId_DESC'
  /** traceId ascending */
  | 'traceId_ASC'
  /** traceId descending */
  | 'traceId_DESC'
  /** userAccountId ascending */
  | 'userAccountId_ASC'
  /** userAccountId descending */
  | 'userAccountId_DESC';

interface AccountStreamMinutesViewedAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountStreamMinutesViewedAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountStreamMinutesViewedAdaptiveGroupsFilter_InputObject[]>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly creator: InputMaybe<Scalars['string']>;
    readonly creator_geq: InputMaybe<Scalars['string']>;
    readonly creator_gt: InputMaybe<Scalars['string']>;
    readonly creator_in: InputMaybe<readonly Scalars['string'][]>;
    readonly creator_leq: InputMaybe<Scalars['string']>;
    readonly creator_like: InputMaybe<Scalars['string']>;
    readonly creator_lt: InputMaybe<Scalars['string']>;
    readonly creator_neq: InputMaybe<Scalars['string']>;
    readonly creator_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly creator_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly mediaType: InputMaybe<Scalars['string']>;
    readonly mediaType_geq: InputMaybe<Scalars['string']>;
    readonly mediaType_gt: InputMaybe<Scalars['string']>;
    readonly mediaType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly mediaType_leq: InputMaybe<Scalars['string']>;
    readonly mediaType_like: InputMaybe<Scalars['string']>;
    readonly mediaType_lt: InputMaybe<Scalars['string']>;
    readonly mediaType_neq: InputMaybe<Scalars['string']>;
    readonly mediaType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly mediaType_notlike: InputMaybe<Scalars['string']>;
    readonly uid: InputMaybe<Scalars['string']>;
    readonly uid_geq: InputMaybe<Scalars['string']>;
    readonly uid_gt: InputMaybe<Scalars['string']>;
    readonly uid_in: InputMaybe<readonly Scalars['string'][]>;
    readonly uid_leq: InputMaybe<Scalars['string']>;
    readonly uid_like: InputMaybe<Scalars['string']>;
    readonly uid_lt: InputMaybe<Scalars['string']>;
    readonly uid_neq: InputMaybe<Scalars['string']>;
    readonly uid_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly uid_notlike: InputMaybe<Scalars['string']>;
}

type AccountStreamMinutesViewedAdaptiveGroupsOrderBy =
  /** clientCountryName ascending */
  | 'clientCountryName_ASC'
  /** clientCountryName descending */
  | 'clientCountryName_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** creator ascending */
  | 'creator_ASC'
  /** creator descending */
  | 'creator_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** mediaType ascending */
  | 'mediaType_ASC'
  /** mediaType descending */
  | 'mediaType_DESC'
  /** sum(minutesViewed) ascending */
  | 'sum_minutesViewed_ASC'
  /** sum(minutesViewed) descending */
  | 'sum_minutesViewed_DESC'
  /** uid ascending */
  | 'uid_ASC'
  /** uid descending */
  | 'uid_DESC';

interface AccountTurnstileAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountTurnstileAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountTurnstileAdaptiveGroupsFilter_InputObject[]>;
    readonly action: InputMaybe<Scalars['string']>;
    readonly action_geq: InputMaybe<Scalars['string']>;
    readonly action_gt: InputMaybe<Scalars['string']>;
    readonly action_in: InputMaybe<readonly Scalars['string'][]>;
    readonly action_leq: InputMaybe<Scalars['string']>;
    readonly action_like: InputMaybe<Scalars['string']>;
    readonly action_lt: InputMaybe<Scalars['string']>;
    readonly action_neq: InputMaybe<Scalars['string']>;
    readonly action_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly action_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeDay: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeDay_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly eventType: InputMaybe<Scalars['string']>;
    readonly eventType_geq: InputMaybe<Scalars['string']>;
    readonly eventType_gt: InputMaybe<Scalars['string']>;
    readonly eventType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly eventType_leq: InputMaybe<Scalars['string']>;
    readonly eventType_like: InputMaybe<Scalars['string']>;
    readonly eventType_lt: InputMaybe<Scalars['string']>;
    readonly eventType_neq: InputMaybe<Scalars['string']>;
    readonly eventType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly eventType_notlike: InputMaybe<Scalars['string']>;
    readonly siteKey: InputMaybe<Scalars['string']>;
    readonly siteKey_geq: InputMaybe<Scalars['string']>;
    readonly siteKey_gt: InputMaybe<Scalars['string']>;
    readonly siteKey_in: InputMaybe<readonly Scalars['string'][]>;
    readonly siteKey_leq: InputMaybe<Scalars['string']>;
    readonly siteKey_like: InputMaybe<Scalars['string']>;
    readonly siteKey_lt: InputMaybe<Scalars['string']>;
    readonly siteKey_neq: InputMaybe<Scalars['string']>;
    readonly siteKey_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly siteKey_notlike: InputMaybe<Scalars['string']>;
}

type AccountTurnstileAdaptiveGroupsOrderBy =
  /** action ascending */
  | 'action_ASC'
  /** action descending */
  | 'action_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeDay ascending */
  | 'datetimeDay_ASC'
  /** datetimeDay descending */
  | 'datetimeDay_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** eventType ascending */
  | 'eventType_ASC'
  /** eventType descending */
  | 'eventType_DESC'
  /** siteKey ascending */
  | 'siteKey_ASC'
  /** siteKey descending */
  | 'siteKey_DESC';

interface AccountVideoBufferEventsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountVideoBufferEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountVideoBufferEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly deviceBrowser: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_geq: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_gt: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceBrowser_leq: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_like: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_lt: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_neq: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceBrowser_notlike: InputMaybe<Scalars['string']>;
    readonly deviceOs: InputMaybe<Scalars['string']>;
    readonly deviceOs_geq: InputMaybe<Scalars['string']>;
    readonly deviceOs_gt: InputMaybe<Scalars['string']>;
    readonly deviceOs_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceOs_leq: InputMaybe<Scalars['string']>;
    readonly deviceOs_like: InputMaybe<Scalars['string']>;
    readonly deviceOs_lt: InputMaybe<Scalars['string']>;
    readonly deviceOs_neq: InputMaybe<Scalars['string']>;
    readonly deviceOs_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceOs_notlike: InputMaybe<Scalars['string']>;
    readonly deviceType: InputMaybe<Scalars['string']>;
    readonly deviceType_geq: InputMaybe<Scalars['string']>;
    readonly deviceType_gt: InputMaybe<Scalars['string']>;
    readonly deviceType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_leq: InputMaybe<Scalars['string']>;
    readonly deviceType_like: InputMaybe<Scalars['string']>;
    readonly deviceType_lt: InputMaybe<Scalars['string']>;
    readonly deviceType_neq: InputMaybe<Scalars['string']>;
    readonly deviceType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_notlike: InputMaybe<Scalars['string']>;
    readonly uid: InputMaybe<Scalars['string']>;
    readonly uid_geq: InputMaybe<Scalars['string']>;
    readonly uid_gt: InputMaybe<Scalars['string']>;
    readonly uid_in: InputMaybe<readonly Scalars['string'][]>;
    readonly uid_leq: InputMaybe<Scalars['string']>;
    readonly uid_like: InputMaybe<Scalars['string']>;
    readonly uid_lt: InputMaybe<Scalars['string']>;
    readonly uid_neq: InputMaybe<Scalars['string']>;
    readonly uid_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly uid_notlike: InputMaybe<Scalars['string']>;
}

type AccountVideoBufferEventsAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** clientCountryName ascending */
  | 'clientCountryName_ASC'
  /** clientCountryName descending */
  | 'clientCountryName_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** deviceBrowser ascending */
  | 'deviceBrowser_ASC'
  /** deviceBrowser descending */
  | 'deviceBrowser_DESC'
  /** deviceOs ascending */
  | 'deviceOs_ASC'
  /** deviceOs descending */
  | 'deviceOs_DESC'
  /** deviceType ascending */
  | 'deviceType_ASC'
  /** deviceType descending */
  | 'deviceType_DESC'
  /** eventType ascending */
  | 'eventType_ASC'
  /** eventType descending */
  | 'eventType_DESC'
  /** uid ascending */
  | 'uid_ASC'
  /** uid descending */
  | 'uid_DESC';

interface AccountVideoPlaybackEventsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountVideoPlaybackEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountVideoPlaybackEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly deviceBrowser: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_geq: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_gt: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceBrowser_leq: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_like: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_lt: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_neq: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceBrowser_notlike: InputMaybe<Scalars['string']>;
    readonly deviceOs: InputMaybe<Scalars['string']>;
    readonly deviceOs_geq: InputMaybe<Scalars['string']>;
    readonly deviceOs_gt: InputMaybe<Scalars['string']>;
    readonly deviceOs_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceOs_leq: InputMaybe<Scalars['string']>;
    readonly deviceOs_like: InputMaybe<Scalars['string']>;
    readonly deviceOs_lt: InputMaybe<Scalars['string']>;
    readonly deviceOs_neq: InputMaybe<Scalars['string']>;
    readonly deviceOs_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceOs_notlike: InputMaybe<Scalars['string']>;
    readonly deviceType: InputMaybe<Scalars['string']>;
    readonly deviceType_geq: InputMaybe<Scalars['string']>;
    readonly deviceType_gt: InputMaybe<Scalars['string']>;
    readonly deviceType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_leq: InputMaybe<Scalars['string']>;
    readonly deviceType_like: InputMaybe<Scalars['string']>;
    readonly deviceType_lt: InputMaybe<Scalars['string']>;
    readonly deviceType_neq: InputMaybe<Scalars['string']>;
    readonly deviceType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_notlike: InputMaybe<Scalars['string']>;
    readonly uid: InputMaybe<Scalars['string']>;
    readonly uid_geq: InputMaybe<Scalars['string']>;
    readonly uid_gt: InputMaybe<Scalars['string']>;
    readonly uid_in: InputMaybe<readonly Scalars['string'][]>;
    readonly uid_leq: InputMaybe<Scalars['string']>;
    readonly uid_like: InputMaybe<Scalars['string']>;
    readonly uid_lt: InputMaybe<Scalars['string']>;
    readonly uid_neq: InputMaybe<Scalars['string']>;
    readonly uid_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly uid_notlike: InputMaybe<Scalars['string']>;
}

type AccountVideoPlaybackEventsAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** clientCountryName ascending */
  | 'clientCountryName_ASC'
  /** clientCountryName descending */
  | 'clientCountryName_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** deviceBrowser ascending */
  | 'deviceBrowser_ASC'
  /** deviceBrowser descending */
  | 'deviceBrowser_DESC'
  /** deviceOs ascending */
  | 'deviceOs_ASC'
  /** deviceOs descending */
  | 'deviceOs_DESC'
  /** deviceType ascending */
  | 'deviceType_ASC'
  /** deviceType descending */
  | 'deviceType_DESC'
  /** sum(timeViewedMinutes) ascending */
  | 'sum_timeViewedMinutes_ASC'
  /** sum(timeViewedMinutes) descending */
  | 'sum_timeViewedMinutes_DESC'
  /** uid ascending */
  | 'uid_ASC'
  /** uid descending */
  | 'uid_DESC';

interface AccountVideoQualityEventsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountVideoQualityEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountVideoQualityEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly deviceBrowser: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_geq: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_gt: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceBrowser_leq: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_like: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_lt: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_neq: InputMaybe<Scalars['string']>;
    readonly deviceBrowser_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceBrowser_notlike: InputMaybe<Scalars['string']>;
    readonly deviceOs: InputMaybe<Scalars['string']>;
    readonly deviceOs_geq: InputMaybe<Scalars['string']>;
    readonly deviceOs_gt: InputMaybe<Scalars['string']>;
    readonly deviceOs_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceOs_leq: InputMaybe<Scalars['string']>;
    readonly deviceOs_like: InputMaybe<Scalars['string']>;
    readonly deviceOs_lt: InputMaybe<Scalars['string']>;
    readonly deviceOs_neq: InputMaybe<Scalars['string']>;
    readonly deviceOs_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceOs_notlike: InputMaybe<Scalars['string']>;
    readonly deviceType: InputMaybe<Scalars['string']>;
    readonly deviceType_geq: InputMaybe<Scalars['string']>;
    readonly deviceType_gt: InputMaybe<Scalars['string']>;
    readonly deviceType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_leq: InputMaybe<Scalars['string']>;
    readonly deviceType_like: InputMaybe<Scalars['string']>;
    readonly deviceType_lt: InputMaybe<Scalars['string']>;
    readonly deviceType_neq: InputMaybe<Scalars['string']>;
    readonly deviceType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly deviceType_notlike: InputMaybe<Scalars['string']>;
    readonly qualityResolution: InputMaybe<Scalars['uint64']>;
    readonly qualityResolution_geq: InputMaybe<Scalars['uint64']>;
    readonly qualityResolution_gt: InputMaybe<Scalars['uint64']>;
    readonly qualityResolution_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly qualityResolution_leq: InputMaybe<Scalars['uint64']>;
    readonly qualityResolution_lt: InputMaybe<Scalars['uint64']>;
    readonly qualityResolution_neq: InputMaybe<Scalars['uint64']>;
    readonly qualityResolution_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly uid: InputMaybe<Scalars['string']>;
    readonly uid_geq: InputMaybe<Scalars['string']>;
    readonly uid_gt: InputMaybe<Scalars['string']>;
    readonly uid_in: InputMaybe<readonly Scalars['string'][]>;
    readonly uid_leq: InputMaybe<Scalars['string']>;
    readonly uid_like: InputMaybe<Scalars['string']>;
    readonly uid_lt: InputMaybe<Scalars['string']>;
    readonly uid_neq: InputMaybe<Scalars['string']>;
    readonly uid_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly uid_notlike: InputMaybe<Scalars['string']>;
}

type AccountVideoQualityEventsAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** clientCountryName ascending */
  | 'clientCountryName_ASC'
  /** clientCountryName descending */
  | 'clientCountryName_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** deviceBrowser ascending */
  | 'deviceBrowser_ASC'
  /** deviceBrowser descending */
  | 'deviceBrowser_DESC'
  /** deviceOs ascending */
  | 'deviceOs_ASC'
  /** deviceOs descending */
  | 'deviceOs_DESC'
  /** deviceType ascending */
  | 'deviceType_ASC'
  /** deviceType descending */
  | 'deviceType_DESC'
  /** eventType ascending */
  | 'eventType_ASC'
  /** eventType descending */
  | 'eventType_DESC'
  /** qualityResolution ascending */
  | 'qualityResolution_ASC'
  /** qualityResolution descending */
  | 'qualityResolution_DESC'
  /** uid ascending */
  | 'uid_ASC'
  /** uid descending */
  | 'uid_DESC';

interface AccountWorkersAnalyticsEngineAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountWorkersAnalyticsEngineAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountWorkersAnalyticsEngineAdaptiveGroupsFilter_InputObject[]>;
    readonly dataset: InputMaybe<Scalars['string']>;
    readonly dataset_geq: InputMaybe<Scalars['string']>;
    readonly dataset_gt: InputMaybe<Scalars['string']>;
    readonly dataset_in: InputMaybe<readonly Scalars['string'][]>;
    readonly dataset_leq: InputMaybe<Scalars['string']>;
    readonly dataset_like: InputMaybe<Scalars['string']>;
    readonly dataset_lt: InputMaybe<Scalars['string']>;
    readonly dataset_neq: InputMaybe<Scalars['string']>;
    readonly dataset_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly dataset_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
}

type AccountWorkersAnalyticsEngineAdaptiveGroupsOrderBy =
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** dataset ascending */
  | 'dataset_ASC'
  /** dataset descending */
  | 'dataset_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC';

interface AccountWorkersInvocationsAdaptiveFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountWorkersInvocationsAdaptiveFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountWorkersInvocationsAdaptiveFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly dispatchNamespaceName: InputMaybe<Scalars['string']>;
    readonly dispatchNamespaceName_geq: InputMaybe<Scalars['string']>;
    readonly dispatchNamespaceName_gt: InputMaybe<Scalars['string']>;
    readonly dispatchNamespaceName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly dispatchNamespaceName_leq: InputMaybe<Scalars['string']>;
    readonly dispatchNamespaceName_like: InputMaybe<Scalars['string']>;
    readonly dispatchNamespaceName_lt: InputMaybe<Scalars['string']>;
    readonly dispatchNamespaceName_neq: InputMaybe<Scalars['string']>;
    readonly dispatchNamespaceName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly dispatchNamespaceName_notlike: InputMaybe<Scalars['string']>;
    readonly environmentName: InputMaybe<Scalars['string']>;
    readonly environmentName_geq: InputMaybe<Scalars['string']>;
    readonly environmentName_gt: InputMaybe<Scalars['string']>;
    readonly environmentName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly environmentName_leq: InputMaybe<Scalars['string']>;
    readonly environmentName_like: InputMaybe<Scalars['string']>;
    readonly environmentName_lt: InputMaybe<Scalars['string']>;
    readonly environmentName_neq: InputMaybe<Scalars['string']>;
    readonly environmentName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly environmentName_notlike: InputMaybe<Scalars['string']>;
    readonly scriptName: InputMaybe<Scalars['string']>;
    readonly scriptName_geq: InputMaybe<Scalars['string']>;
    readonly scriptName_gt: InputMaybe<Scalars['string']>;
    readonly scriptName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptName_leq: InputMaybe<Scalars['string']>;
    readonly scriptName_like: InputMaybe<Scalars['string']>;
    readonly scriptName_lt: InputMaybe<Scalars['string']>;
    readonly scriptName_neq: InputMaybe<Scalars['string']>;
    readonly scriptName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptName_notlike: InputMaybe<Scalars['string']>;
    readonly scriptTag: InputMaybe<Scalars['string']>;
    readonly scriptTag_geq: InputMaybe<Scalars['string']>;
    readonly scriptTag_gt: InputMaybe<Scalars['string']>;
    readonly scriptTag_in: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptTag_leq: InputMaybe<Scalars['string']>;
    readonly scriptTag_like: InputMaybe<Scalars['string']>;
    readonly scriptTag_lt: InputMaybe<Scalars['string']>;
    readonly scriptTag_neq: InputMaybe<Scalars['string']>;
    readonly scriptTag_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptTag_notlike: InputMaybe<Scalars['string']>;
    readonly status: InputMaybe<Scalars['string']>;
    readonly status_geq: InputMaybe<Scalars['string']>;
    readonly status_gt: InputMaybe<Scalars['string']>;
    readonly status_in: InputMaybe<readonly Scalars['string'][]>;
    readonly status_leq: InputMaybe<Scalars['string']>;
    readonly status_like: InputMaybe<Scalars['string']>;
    readonly status_lt: InputMaybe<Scalars['string']>;
    readonly status_neq: InputMaybe<Scalars['string']>;
    readonly status_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly status_notlike: InputMaybe<Scalars['string']>;
    readonly usageModel: InputMaybe<Scalars['string']>;
    readonly usageModel_geq: InputMaybe<Scalars['string']>;
    readonly usageModel_gt: InputMaybe<Scalars['string']>;
    readonly usageModel_in: InputMaybe<readonly Scalars['string'][]>;
    readonly usageModel_leq: InputMaybe<Scalars['string']>;
    readonly usageModel_like: InputMaybe<Scalars['string']>;
    readonly usageModel_lt: InputMaybe<Scalars['string']>;
    readonly usageModel_neq: InputMaybe<Scalars['string']>;
    readonly usageModel_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly usageModel_notlike: InputMaybe<Scalars['string']>;
}

type AccountWorkersInvocationsAdaptiveOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** constantScriptId ascending */
  | 'constantScriptId_ASC'
  /** constantScriptId descending */
  | 'constantScriptId_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** dispatchNamespaceName ascending */
  | 'dispatchNamespaceName_ASC'
  /** dispatchNamespaceName descending */
  | 'dispatchNamespaceName_DESC'
  /** environmentName ascending */
  | 'environmentName_ASC'
  /** environmentName descending */
  | 'environmentName_DESC'
  /** max(cpuTime) ascending */
  | 'max_cpuTime_ASC'
  /** max(cpuTime) descending */
  | 'max_cpuTime_DESC'
  /** max(duration) ascending */
  | 'max_duration_ASC'
  /** max(duration) descending */
  | 'max_duration_DESC'
  /** max(responseBodySize) ascending */
  | 'max_responseBodySize_ASC'
  /** max(responseBodySize) descending */
  | 'max_responseBodySize_DESC'
  /** max(wallTime) ascending */
  | 'max_wallTime_ASC'
  /** max(wallTime) descending */
  | 'max_wallTime_DESC'
  /** min(cpuTime) ascending */
  | 'min_cpuTime_ASC'
  /** min(cpuTime) descending */
  | 'min_cpuTime_DESC'
  /** min(duration) ascending */
  | 'min_duration_ASC'
  /** min(duration) descending */
  | 'min_duration_DESC'
  /** min(responseBodySize) ascending */
  | 'min_responseBodySize_ASC'
  /** min(responseBodySize) descending */
  | 'min_responseBodySize_DESC'
  /** min(wallTime) ascending */
  | 'min_wallTime_ASC'
  /** min(wallTime) descending */
  | 'min_wallTime_DESC'
  /** quantiles(cpuTimeP25) ascending */
  | 'quantiles_cpuTimeP25_ASC'
  /** quantiles(cpuTimeP25) descending */
  | 'quantiles_cpuTimeP25_DESC'
  /** quantiles(cpuTimeP50) ascending */
  | 'quantiles_cpuTimeP50_ASC'
  /** quantiles(cpuTimeP50) descending */
  | 'quantiles_cpuTimeP50_DESC'
  /** quantiles(cpuTimeP75) ascending */
  | 'quantiles_cpuTimeP75_ASC'
  /** quantiles(cpuTimeP75) descending */
  | 'quantiles_cpuTimeP75_DESC'
  /** quantiles(cpuTimeP90) ascending */
  | 'quantiles_cpuTimeP90_ASC'
  /** quantiles(cpuTimeP90) descending */
  | 'quantiles_cpuTimeP90_DESC'
  /** quantiles(cpuTimeP99) ascending */
  | 'quantiles_cpuTimeP99_ASC'
  /** quantiles(cpuTimeP99) descending */
  | 'quantiles_cpuTimeP99_DESC'
  /** quantiles(cpuTimeP999) ascending */
  | 'quantiles_cpuTimeP999_ASC'
  /** quantiles(cpuTimeP999) descending */
  | 'quantiles_cpuTimeP999_DESC'
  /** quantiles(durationP25) ascending */
  | 'quantiles_durationP25_ASC'
  /** quantiles(durationP25) descending */
  | 'quantiles_durationP25_DESC'
  /** quantiles(durationP50) ascending */
  | 'quantiles_durationP50_ASC'
  /** quantiles(durationP50) descending */
  | 'quantiles_durationP50_DESC'
  /** quantiles(durationP75) ascending */
  | 'quantiles_durationP75_ASC'
  /** quantiles(durationP75) descending */
  | 'quantiles_durationP75_DESC'
  /** quantiles(durationP90) ascending */
  | 'quantiles_durationP90_ASC'
  /** quantiles(durationP90) descending */
  | 'quantiles_durationP90_DESC'
  /** quantiles(durationP99) ascending */
  | 'quantiles_durationP99_ASC'
  /** quantiles(durationP99) descending */
  | 'quantiles_durationP99_DESC'
  /** quantiles(durationP999) ascending */
  | 'quantiles_durationP999_ASC'
  /** quantiles(durationP999) descending */
  | 'quantiles_durationP999_DESC'
  /** quantiles(responseBodySizeP25) ascending */
  | 'quantiles_responseBodySizeP25_ASC'
  /** quantiles(responseBodySizeP25) descending */
  | 'quantiles_responseBodySizeP25_DESC'
  /** quantiles(responseBodySizeP50) ascending */
  | 'quantiles_responseBodySizeP50_ASC'
  /** quantiles(responseBodySizeP50) descending */
  | 'quantiles_responseBodySizeP50_DESC'
  /** quantiles(responseBodySizeP75) ascending */
  | 'quantiles_responseBodySizeP75_ASC'
  /** quantiles(responseBodySizeP75) descending */
  | 'quantiles_responseBodySizeP75_DESC'
  /** quantiles(responseBodySizeP90) ascending */
  | 'quantiles_responseBodySizeP90_ASC'
  /** quantiles(responseBodySizeP90) descending */
  | 'quantiles_responseBodySizeP90_DESC'
  /** quantiles(responseBodySizeP99) ascending */
  | 'quantiles_responseBodySizeP99_ASC'
  /** quantiles(responseBodySizeP99) descending */
  | 'quantiles_responseBodySizeP99_DESC'
  /** quantiles(responseBodySizeP999) ascending */
  | 'quantiles_responseBodySizeP999_ASC'
  /** quantiles(responseBodySizeP999) descending */
  | 'quantiles_responseBodySizeP999_DESC'
  /** quantiles(wallTimeP25) ascending */
  | 'quantiles_wallTimeP25_ASC'
  /** quantiles(wallTimeP25) descending */
  | 'quantiles_wallTimeP25_DESC'
  /** quantiles(wallTimeP50) ascending */
  | 'quantiles_wallTimeP50_ASC'
  /** quantiles(wallTimeP50) descending */
  | 'quantiles_wallTimeP50_DESC'
  /** quantiles(wallTimeP75) ascending */
  | 'quantiles_wallTimeP75_ASC'
  /** quantiles(wallTimeP75) descending */
  | 'quantiles_wallTimeP75_DESC'
  /** quantiles(wallTimeP90) ascending */
  | 'quantiles_wallTimeP90_ASC'
  /** quantiles(wallTimeP90) descending */
  | 'quantiles_wallTimeP90_DESC'
  /** quantiles(wallTimeP99) ascending */
  | 'quantiles_wallTimeP99_ASC'
  /** quantiles(wallTimeP99) descending */
  | 'quantiles_wallTimeP99_DESC'
  /** quantiles(wallTimeP999) ascending */
  | 'quantiles_wallTimeP999_ASC'
  /** quantiles(wallTimeP999) descending */
  | 'quantiles_wallTimeP999_DESC'
  /** scriptName ascending */
  | 'scriptName_ASC'
  /** scriptName descending */
  | 'scriptName_DESC'
  /** scriptTag ascending */
  | 'scriptTag_ASC'
  /** scriptTag descending */
  | 'scriptTag_DESC'
  /** stableId ascending */
  | 'stableId_ASC'
  /** stableId descending */
  | 'stableId_DESC'
  /** status ascending */
  | 'status_ASC'
  /** status descending */
  | 'status_DESC'
  /** sum(duration) ascending */
  | 'sum_duration_ASC'
  /** sum(duration) descending */
  | 'sum_duration_DESC'
  /** sum(errors) ascending */
  | 'sum_errors_ASC'
  /** sum(errors) descending */
  | 'sum_errors_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(responseBodySize) ascending */
  | 'sum_responseBodySize_ASC'
  /** sum(responseBodySize) descending */
  | 'sum_responseBodySize_DESC'
  /** sum(subrequests) ascending */
  | 'sum_subrequests_ASC'
  /** sum(subrequests) descending */
  | 'sum_subrequests_DESC'
  /** sum(wallTime) ascending */
  | 'sum_wallTime_ASC'
  /** sum(wallTime) descending */
  | 'sum_wallTime_DESC'
  /** usageModel ascending */
  | 'usageModel_ASC'
  /** usageModel descending */
  | 'usageModel_DESC';

interface AccountWorkersInvocationsScheduledFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountWorkersInvocationsScheduledFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountWorkersInvocationsScheduledFilter_InputObject[]>;
    readonly cpuTimeUs: InputMaybe<Scalars['uint32']>;
    readonly cpuTimeUs_geq: InputMaybe<Scalars['uint32']>;
    readonly cpuTimeUs_gt: InputMaybe<Scalars['uint32']>;
    readonly cpuTimeUs_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly cpuTimeUs_leq: InputMaybe<Scalars['uint32']>;
    readonly cpuTimeUs_lt: InputMaybe<Scalars['uint32']>;
    readonly cpuTimeUs_neq: InputMaybe<Scalars['uint32']>;
    readonly cpuTimeUs_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly cron: InputMaybe<Scalars['string']>;
    readonly cron_geq: InputMaybe<Scalars['string']>;
    readonly cron_gt: InputMaybe<Scalars['string']>;
    readonly cron_in: InputMaybe<readonly Scalars['string'][]>;
    readonly cron_leq: InputMaybe<Scalars['string']>;
    readonly cron_like: InputMaybe<Scalars['string']>;
    readonly cron_lt: InputMaybe<Scalars['string']>;
    readonly cron_neq: InputMaybe<Scalars['string']>;
    readonly cron_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly cron_notlike: InputMaybe<Scalars['string']>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly environmentName: InputMaybe<Scalars['string']>;
    readonly environmentName_geq: InputMaybe<Scalars['string']>;
    readonly environmentName_gt: InputMaybe<Scalars['string']>;
    readonly environmentName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly environmentName_leq: InputMaybe<Scalars['string']>;
    readonly environmentName_like: InputMaybe<Scalars['string']>;
    readonly environmentName_lt: InputMaybe<Scalars['string']>;
    readonly environmentName_neq: InputMaybe<Scalars['string']>;
    readonly environmentName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly environmentName_notlike: InputMaybe<Scalars['string']>;
    readonly scheduledDatetime: InputMaybe<Scalars['Time']>;
    readonly scheduledDatetime_geq: InputMaybe<Scalars['Time']>;
    readonly scheduledDatetime_gt: InputMaybe<Scalars['Time']>;
    readonly scheduledDatetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly scheduledDatetime_leq: InputMaybe<Scalars['Time']>;
    readonly scheduledDatetime_lt: InputMaybe<Scalars['Time']>;
    readonly scheduledDatetime_neq: InputMaybe<Scalars['Time']>;
    readonly scheduledDatetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly scriptName: InputMaybe<Scalars['string']>;
    readonly scriptName_geq: InputMaybe<Scalars['string']>;
    readonly scriptName_gt: InputMaybe<Scalars['string']>;
    readonly scriptName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptName_leq: InputMaybe<Scalars['string']>;
    readonly scriptName_like: InputMaybe<Scalars['string']>;
    readonly scriptName_lt: InputMaybe<Scalars['string']>;
    readonly scriptName_neq: InputMaybe<Scalars['string']>;
    readonly scriptName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptName_notlike: InputMaybe<Scalars['string']>;
    readonly status: InputMaybe<Scalars['string']>;
    readonly status_geq: InputMaybe<Scalars['string']>;
    readonly status_gt: InputMaybe<Scalars['string']>;
    readonly status_in: InputMaybe<readonly Scalars['string'][]>;
    readonly status_leq: InputMaybe<Scalars['string']>;
    readonly status_like: InputMaybe<Scalars['string']>;
    readonly status_lt: InputMaybe<Scalars['string']>;
    readonly status_neq: InputMaybe<Scalars['string']>;
    readonly status_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly status_notlike: InputMaybe<Scalars['string']>;
}

type AccountWorkersInvocationsScheduledOrderBy =
  /** cpuTimeUs ascending */
  | 'cpuTimeUs_ASC'
  /** cpuTimeUs descending */
  | 'cpuTimeUs_DESC'
  /** cron ascending */
  | 'cron_ASC'
  /** cron descending */
  | 'cron_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** environmentName ascending */
  | 'environmentName_ASC'
  /** environmentName descending */
  | 'environmentName_DESC'
  /** scheduledDatetime ascending */
  | 'scheduledDatetime_ASC'
  /** scheduledDatetime descending */
  | 'scheduledDatetime_DESC'
  /** scriptName ascending */
  | 'scriptName_ASC'
  /** scriptName descending */
  | 'scriptName_DESC'
  /** status ascending */
  | 'status_ASC'
  /** status descending */
  | 'status_DESC';

interface AccountWorkersSubrequestsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountWorkersSubrequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountWorkersSubrequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly cacheStatus: InputMaybe<Scalars['uint64']>;
    readonly cacheStatus_geq: InputMaybe<Scalars['uint64']>;
    readonly cacheStatus_gt: InputMaybe<Scalars['uint64']>;
    readonly cacheStatus_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly cacheStatus_leq: InputMaybe<Scalars['uint64']>;
    readonly cacheStatus_lt: InputMaybe<Scalars['uint64']>;
    readonly cacheStatus_neq: InputMaybe<Scalars['uint64']>;
    readonly cacheStatus_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly environmentName: InputMaybe<Scalars['string']>;
    readonly environmentName_geq: InputMaybe<Scalars['string']>;
    readonly environmentName_gt: InputMaybe<Scalars['string']>;
    readonly environmentName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly environmentName_leq: InputMaybe<Scalars['string']>;
    readonly environmentName_like: InputMaybe<Scalars['string']>;
    readonly environmentName_lt: InputMaybe<Scalars['string']>;
    readonly environmentName_neq: InputMaybe<Scalars['string']>;
    readonly environmentName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly environmentName_notlike: InputMaybe<Scalars['string']>;
    readonly scriptName: InputMaybe<Scalars['string']>;
    readonly scriptName_geq: InputMaybe<Scalars['string']>;
    readonly scriptName_gt: InputMaybe<Scalars['string']>;
    readonly scriptName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptName_leq: InputMaybe<Scalars['string']>;
    readonly scriptName_like: InputMaybe<Scalars['string']>;
    readonly scriptName_lt: InputMaybe<Scalars['string']>;
    readonly scriptName_neq: InputMaybe<Scalars['string']>;
    readonly scriptName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly scriptName_notlike: InputMaybe<Scalars['string']>;
    readonly usageModel: InputMaybe<Scalars['string']>;
    readonly usageModel_geq: InputMaybe<Scalars['string']>;
    readonly usageModel_gt: InputMaybe<Scalars['string']>;
    readonly usageModel_in: InputMaybe<readonly Scalars['string'][]>;
    readonly usageModel_leq: InputMaybe<Scalars['string']>;
    readonly usageModel_like: InputMaybe<Scalars['string']>;
    readonly usageModel_lt: InputMaybe<Scalars['string']>;
    readonly usageModel_neq: InputMaybe<Scalars['string']>;
    readonly usageModel_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly usageModel_notlike: InputMaybe<Scalars['string']>;
}

type AccountWorkersSubrequestsAdaptiveGroupsOrderBy =
  /** cacheStatus ascending */
  | 'cacheStatus_ASC'
  /** cacheStatus descending */
  | 'cacheStatus_DESC'
  /** constantScriptId ascending */
  | 'constantScriptId_ASC'
  /** constantScriptId descending */
  | 'constantScriptId_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** environmentName ascending */
  | 'environmentName_ASC'
  /** environmentName descending */
  | 'environmentName_DESC'
  /** scriptName ascending */
  | 'scriptName_ASC'
  /** scriptName descending */
  | 'scriptName_DESC'
  /** stableId ascending */
  | 'stableId_ASC'
  /** stableId descending */
  | 'stableId_DESC'
  /** sum(requestBodySizeUncached) ascending */
  | 'sum_requestBodySizeUncached_ASC'
  /** sum(requestBodySizeUncached) descending */
  | 'sum_requestBodySizeUncached_DESC'
  /** sum(subrequests) ascending */
  | 'sum_subrequests_ASC'
  /** sum(subrequests) descending */
  | 'sum_subrequests_DESC'
  /** usageModel ascending */
  | 'usageModel_ASC'
  /** usageModel descending */
  | 'usageModel_DESC';

interface AccountZeroTrustPrivateNetworkDiscoveryGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly AccountZeroTrustPrivateNetworkDiscoveryGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly AccountZeroTrustPrivateNetworkDiscoveryGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationIP: InputMaybe<Scalars['string']>;
    readonly destinationIP_geq: InputMaybe<Scalars['string']>;
    readonly destinationIP_gt: InputMaybe<Scalars['string']>;
    readonly destinationIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIP_leq: InputMaybe<Scalars['string']>;
    readonly destinationIP_like: InputMaybe<Scalars['string']>;
    readonly destinationIP_lt: InputMaybe<Scalars['string']>;
    readonly destinationIP_neq: InputMaybe<Scalars['string']>;
    readonly destinationIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationIP_notlike: InputMaybe<Scalars['string']>;
    readonly destinationPort: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_geq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_gt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly destinationPort_leq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_lt: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_neq: InputMaybe<Scalars['uint16']>;
    readonly destinationPort_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly email: InputMaybe<Scalars['string']>;
    readonly email_geq: InputMaybe<Scalars['string']>;
    readonly email_gt: InputMaybe<Scalars['string']>;
    readonly email_in: InputMaybe<readonly Scalars['string'][]>;
    readonly email_leq: InputMaybe<Scalars['string']>;
    readonly email_like: InputMaybe<Scalars['string']>;
    readonly email_lt: InputMaybe<Scalars['string']>;
    readonly email_neq: InputMaybe<Scalars['string']>;
    readonly email_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly email_notlike: InputMaybe<Scalars['string']>;
    readonly hostname: InputMaybe<Scalars['string']>;
    readonly hostname_geq: InputMaybe<Scalars['string']>;
    readonly hostname_gt: InputMaybe<Scalars['string']>;
    readonly hostname_in: InputMaybe<readonly Scalars['string'][]>;
    readonly hostname_leq: InputMaybe<Scalars['string']>;
    readonly hostname_like: InputMaybe<Scalars['string']>;
    readonly hostname_lt: InputMaybe<Scalars['string']>;
    readonly hostname_neq: InputMaybe<Scalars['string']>;
    readonly hostname_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly hostname_notlike: InputMaybe<Scalars['string']>;
    readonly originId: InputMaybe<Scalars['string']>;
    readonly originId_geq: InputMaybe<Scalars['string']>;
    readonly originId_gt: InputMaybe<Scalars['string']>;
    readonly originId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly originId_leq: InputMaybe<Scalars['string']>;
    readonly originId_like: InputMaybe<Scalars['string']>;
    readonly originId_lt: InputMaybe<Scalars['string']>;
    readonly originId_neq: InputMaybe<Scalars['string']>;
    readonly originId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly originId_notlike: InputMaybe<Scalars['string']>;
    readonly status: InputMaybe<Scalars['string']>;
    readonly status_geq: InputMaybe<Scalars['string']>;
    readonly status_gt: InputMaybe<Scalars['string']>;
    readonly status_in: InputMaybe<readonly Scalars['string'][]>;
    readonly status_leq: InputMaybe<Scalars['string']>;
    readonly status_like: InputMaybe<Scalars['string']>;
    readonly status_lt: InputMaybe<Scalars['string']>;
    readonly status_neq: InputMaybe<Scalars['string']>;
    readonly status_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly status_notlike: InputMaybe<Scalars['string']>;
    readonly transport: InputMaybe<Scalars['string']>;
    readonly transport_geq: InputMaybe<Scalars['string']>;
    readonly transport_gt: InputMaybe<Scalars['string']>;
    readonly transport_in: InputMaybe<readonly Scalars['string'][]>;
    readonly transport_leq: InputMaybe<Scalars['string']>;
    readonly transport_like: InputMaybe<Scalars['string']>;
    readonly transport_lt: InputMaybe<Scalars['string']>;
    readonly transport_neq: InputMaybe<Scalars['string']>;
    readonly transport_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly transport_notlike: InputMaybe<Scalars['string']>;
    readonly userId: InputMaybe<Scalars['string']>;
    readonly userId_geq: InputMaybe<Scalars['string']>;
    readonly userId_gt: InputMaybe<Scalars['string']>;
    readonly userId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userId_leq: InputMaybe<Scalars['string']>;
    readonly userId_like: InputMaybe<Scalars['string']>;
    readonly userId_lt: InputMaybe<Scalars['string']>;
    readonly userId_neq: InputMaybe<Scalars['string']>;
    readonly userId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userId_notlike: InputMaybe<Scalars['string']>;
}

type AccountZeroTrustPrivateNetworkDiscoveryGroupsOrderBy =
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** destinationIP ascending */
  | 'destinationIP_ASC'
  /** destinationIP descending */
  | 'destinationIP_DESC'
  /** destinationPort ascending */
  | 'destinationPort_ASC'
  /** destinationPort descending */
  | 'destinationPort_DESC'
  /** email ascending */
  | 'email_ASC'
  /** email descending */
  | 'email_DESC'
  /** hostname ascending */
  | 'hostname_ASC'
  /** hostname descending */
  | 'hostname_DESC'
  /** max(dateTime) ascending */
  | 'max_dateTime_ASC'
  /** max(dateTime) descending */
  | 'max_dateTime_DESC'
  /** originId ascending */
  | 'originId_ASC'
  /** originId descending */
  | 'originId_DESC'
  /** status ascending */
  | 'status_ASC'
  /** status descending */
  | 'status_DESC'
  /** transport ascending */
  | 'transport_ASC'
  /** transport descending */
  | 'transport_DESC'
  /** uniq(emails) ascending */
  | 'uniq_emails_ASC'
  /** uniq(emails) descending */
  | 'uniq_emails_DESC'
  /** uniq(origins) ascending */
  | 'uniq_origins_ASC'
  /** uniq(origins) descending */
  | 'uniq_origins_DESC'
  /** uniq(userIds) ascending */
  | 'uniq_userIds_ASC'
  /** uniq(userIds) descending */
  | 'uniq_userIds_DESC'
  /** userId ascending */
  | 'userId_ASC'
  /** userId descending */
  | 'userId_DESC';

interface ZoneCacheReserveOperationsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneCacheReserveOperationsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneCacheReserveOperationsAdaptiveGroupsFilter_InputObject[]>;
    readonly actionStatus: InputMaybe<Scalars['string']>;
    readonly actionStatus_geq: InputMaybe<Scalars['string']>;
    readonly actionStatus_gt: InputMaybe<Scalars['string']>;
    readonly actionStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly actionStatus_leq: InputMaybe<Scalars['string']>;
    readonly actionStatus_like: InputMaybe<Scalars['string']>;
    readonly actionStatus_lt: InputMaybe<Scalars['string']>;
    readonly actionStatus_neq: InputMaybe<Scalars['string']>;
    readonly actionStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly actionStatus_notlike: InputMaybe<Scalars['string']>;
    readonly bucketName: InputMaybe<Scalars['string']>;
    readonly bucketName_geq: InputMaybe<Scalars['string']>;
    readonly bucketName_gt: InputMaybe<Scalars['string']>;
    readonly bucketName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly bucketName_leq: InputMaybe<Scalars['string']>;
    readonly bucketName_like: InputMaybe<Scalars['string']>;
    readonly bucketName_lt: InputMaybe<Scalars['string']>;
    readonly bucketName_neq: InputMaybe<Scalars['string']>;
    readonly bucketName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly bucketName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly operationClass: InputMaybe<Scalars['string']>;
    readonly operationClass_geq: InputMaybe<Scalars['string']>;
    readonly operationClass_gt: InputMaybe<Scalars['string']>;
    readonly operationClass_in: InputMaybe<readonly Scalars['string'][]>;
    readonly operationClass_leq: InputMaybe<Scalars['string']>;
    readonly operationClass_like: InputMaybe<Scalars['string']>;
    readonly operationClass_lt: InputMaybe<Scalars['string']>;
    readonly operationClass_neq: InputMaybe<Scalars['string']>;
    readonly operationClass_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly operationClass_notlike: InputMaybe<Scalars['string']>;
}

type ZoneCacheReserveOperationsAdaptiveGroupsOrderBy =
  /** actionStatus ascending */
  | 'actionStatus_ASC'
  /** actionStatus descending */
  | 'actionStatus_DESC'
  /** bucketName ascending */
  | 'bucketName_ASC'
  /** bucketName descending */
  | 'bucketName_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** operationClass ascending */
  | 'operationClass_ASC'
  /** operationClass descending */
  | 'operationClass_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC';

interface ZoneCacheReserveStorageAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneCacheReserveStorageAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneCacheReserveStorageAdaptiveGroupsFilter_InputObject[]>;
    readonly bucketHash: InputMaybe<Scalars['string']>;
    readonly bucketHash_geq: InputMaybe<Scalars['string']>;
    readonly bucketHash_gt: InputMaybe<Scalars['string']>;
    readonly bucketHash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly bucketHash_leq: InputMaybe<Scalars['string']>;
    readonly bucketHash_like: InputMaybe<Scalars['string']>;
    readonly bucketHash_lt: InputMaybe<Scalars['string']>;
    readonly bucketHash_neq: InputMaybe<Scalars['string']>;
    readonly bucketHash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly bucketHash_notlike: InputMaybe<Scalars['string']>;
    readonly bucketName: InputMaybe<Scalars['string']>;
    readonly bucketName_geq: InputMaybe<Scalars['string']>;
    readonly bucketName_gt: InputMaybe<Scalars['string']>;
    readonly bucketName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly bucketName_leq: InputMaybe<Scalars['string']>;
    readonly bucketName_like: InputMaybe<Scalars['string']>;
    readonly bucketName_lt: InputMaybe<Scalars['string']>;
    readonly bucketName_neq: InputMaybe<Scalars['string']>;
    readonly bucketName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly bucketName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
}

type ZoneCacheReserveStorageAdaptiveGroupsOrderBy =
  /** bucketHash ascending */
  | 'bucketHash_ASC'
  /** bucketHash descending */
  | 'bucketHash_DESC'
  /** bucketName ascending */
  | 'bucketName_ASC'
  /** bucketName descending */
  | 'bucketName_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** max(storedBytes) ascending */
  | 'max_storedBytes_ASC'
  /** max(storedBytes) descending */
  | 'max_storedBytes_DESC';

interface ZoneEmailRoutingAdaptiveFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneEmailRoutingAdaptiveFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneEmailRoutingAdaptiveFilter_InputObject[]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly dkim: InputMaybe<Scalars['string']>;
    readonly dkim_geq: InputMaybe<Scalars['string']>;
    readonly dkim_gt: InputMaybe<Scalars['string']>;
    readonly dkim_in: InputMaybe<readonly Scalars['string'][]>;
    readonly dkim_leq: InputMaybe<Scalars['string']>;
    readonly dkim_like: InputMaybe<Scalars['string']>;
    readonly dkim_lt: InputMaybe<Scalars['string']>;
    readonly dkim_neq: InputMaybe<Scalars['string']>;
    readonly dkim_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly dkim_notlike: InputMaybe<Scalars['string']>;
    readonly dmarc: InputMaybe<Scalars['string']>;
    readonly dmarc_geq: InputMaybe<Scalars['string']>;
    readonly dmarc_gt: InputMaybe<Scalars['string']>;
    readonly dmarc_in: InputMaybe<readonly Scalars['string'][]>;
    readonly dmarc_leq: InputMaybe<Scalars['string']>;
    readonly dmarc_like: InputMaybe<Scalars['string']>;
    readonly dmarc_lt: InputMaybe<Scalars['string']>;
    readonly dmarc_neq: InputMaybe<Scalars['string']>;
    readonly dmarc_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly dmarc_notlike: InputMaybe<Scalars['string']>;
    readonly errorDetail: InputMaybe<Scalars['string']>;
    readonly errorDetail_geq: InputMaybe<Scalars['string']>;
    readonly errorDetail_gt: InputMaybe<Scalars['string']>;
    readonly errorDetail_in: InputMaybe<readonly Scalars['string'][]>;
    readonly errorDetail_leq: InputMaybe<Scalars['string']>;
    readonly errorDetail_like: InputMaybe<Scalars['string']>;
    readonly errorDetail_lt: InputMaybe<Scalars['string']>;
    readonly errorDetail_neq: InputMaybe<Scalars['string']>;
    readonly errorDetail_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly errorDetail_notlike: InputMaybe<Scalars['string']>;
    readonly from: InputMaybe<Scalars['string']>;
    readonly from_geq: InputMaybe<Scalars['string']>;
    readonly from_gt: InputMaybe<Scalars['string']>;
    readonly from_in: InputMaybe<readonly Scalars['string'][]>;
    readonly from_leq: InputMaybe<Scalars['string']>;
    readonly from_like: InputMaybe<Scalars['string']>;
    readonly from_lt: InputMaybe<Scalars['string']>;
    readonly from_neq: InputMaybe<Scalars['string']>;
    readonly from_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly from_notlike: InputMaybe<Scalars['string']>;
    readonly isNDR: InputMaybe<Scalars['uint8']>;
    readonly isNDR_geq: InputMaybe<Scalars['uint8']>;
    readonly isNDR_gt: InputMaybe<Scalars['uint8']>;
    readonly isNDR_in: InputMaybe<Scalars['bytes']>;
    readonly isNDR_leq: InputMaybe<Scalars['uint8']>;
    readonly isNDR_lt: InputMaybe<Scalars['uint8']>;
    readonly isNDR_neq: InputMaybe<Scalars['uint8']>;
    readonly isNDR_notin: InputMaybe<Scalars['bytes']>;
    readonly messageId: InputMaybe<Scalars['string']>;
    readonly messageId_geq: InputMaybe<Scalars['string']>;
    readonly messageId_gt: InputMaybe<Scalars['string']>;
    readonly messageId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly messageId_leq: InputMaybe<Scalars['string']>;
    readonly messageId_like: InputMaybe<Scalars['string']>;
    readonly messageId_lt: InputMaybe<Scalars['string']>;
    readonly messageId_neq: InputMaybe<Scalars['string']>;
    readonly messageId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly messageId_notlike: InputMaybe<Scalars['string']>;
    readonly ruleMatched: InputMaybe<Scalars['string']>;
    readonly ruleMatched_geq: InputMaybe<Scalars['string']>;
    readonly ruleMatched_gt: InputMaybe<Scalars['string']>;
    readonly ruleMatched_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleMatched_leq: InputMaybe<Scalars['string']>;
    readonly ruleMatched_like: InputMaybe<Scalars['string']>;
    readonly ruleMatched_lt: InputMaybe<Scalars['string']>;
    readonly ruleMatched_neq: InputMaybe<Scalars['string']>;
    readonly ruleMatched_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleMatched_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sessionId: InputMaybe<Scalars['string']>;
    readonly sessionId_geq: InputMaybe<Scalars['string']>;
    readonly sessionId_gt: InputMaybe<Scalars['string']>;
    readonly sessionId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sessionId_leq: InputMaybe<Scalars['string']>;
    readonly sessionId_like: InputMaybe<Scalars['string']>;
    readonly sessionId_lt: InputMaybe<Scalars['string']>;
    readonly sessionId_neq: InputMaybe<Scalars['string']>;
    readonly sessionId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sessionId_notlike: InputMaybe<Scalars['string']>;
    readonly spf: InputMaybe<Scalars['string']>;
    readonly spf_geq: InputMaybe<Scalars['string']>;
    readonly spf_gt: InputMaybe<Scalars['string']>;
    readonly spf_in: InputMaybe<readonly Scalars['string'][]>;
    readonly spf_leq: InputMaybe<Scalars['string']>;
    readonly spf_like: InputMaybe<Scalars['string']>;
    readonly spf_lt: InputMaybe<Scalars['string']>;
    readonly spf_neq: InputMaybe<Scalars['string']>;
    readonly spf_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly spf_notlike: InputMaybe<Scalars['string']>;
    readonly status: InputMaybe<Scalars['string']>;
    readonly status_geq: InputMaybe<Scalars['string']>;
    readonly status_gt: InputMaybe<Scalars['string']>;
    readonly status_in: InputMaybe<readonly Scalars['string'][]>;
    readonly status_leq: InputMaybe<Scalars['string']>;
    readonly status_like: InputMaybe<Scalars['string']>;
    readonly status_lt: InputMaybe<Scalars['string']>;
    readonly status_neq: InputMaybe<Scalars['string']>;
    readonly status_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly status_notlike: InputMaybe<Scalars['string']>;
    readonly subject: InputMaybe<Scalars['string']>;
    readonly subject_geq: InputMaybe<Scalars['string']>;
    readonly subject_gt: InputMaybe<Scalars['string']>;
    readonly subject_in: InputMaybe<readonly Scalars['string'][]>;
    readonly subject_leq: InputMaybe<Scalars['string']>;
    readonly subject_like: InputMaybe<Scalars['string']>;
    readonly subject_lt: InputMaybe<Scalars['string']>;
    readonly subject_neq: InputMaybe<Scalars['string']>;
    readonly subject_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly subject_notlike: InputMaybe<Scalars['string']>;
    readonly to: InputMaybe<Scalars['string']>;
    readonly to_geq: InputMaybe<Scalars['string']>;
    readonly to_gt: InputMaybe<Scalars['string']>;
    readonly to_in: InputMaybe<readonly Scalars['string'][]>;
    readonly to_leq: InputMaybe<Scalars['string']>;
    readonly to_like: InputMaybe<Scalars['string']>;
    readonly to_lt: InputMaybe<Scalars['string']>;
    readonly to_neq: InputMaybe<Scalars['string']>;
    readonly to_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly to_notlike: InputMaybe<Scalars['string']>;
}

interface ZoneEmailRoutingAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneEmailRoutingAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneEmailRoutingAdaptiveGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly dkim: InputMaybe<Scalars['string']>;
    readonly dkim_geq: InputMaybe<Scalars['string']>;
    readonly dkim_gt: InputMaybe<Scalars['string']>;
    readonly dkim_in: InputMaybe<readonly Scalars['string'][]>;
    readonly dkim_leq: InputMaybe<Scalars['string']>;
    readonly dkim_like: InputMaybe<Scalars['string']>;
    readonly dkim_lt: InputMaybe<Scalars['string']>;
    readonly dkim_neq: InputMaybe<Scalars['string']>;
    readonly dkim_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly dkim_notlike: InputMaybe<Scalars['string']>;
    readonly dmarc: InputMaybe<Scalars['string']>;
    readonly dmarc_geq: InputMaybe<Scalars['string']>;
    readonly dmarc_gt: InputMaybe<Scalars['string']>;
    readonly dmarc_in: InputMaybe<readonly Scalars['string'][]>;
    readonly dmarc_leq: InputMaybe<Scalars['string']>;
    readonly dmarc_like: InputMaybe<Scalars['string']>;
    readonly dmarc_lt: InputMaybe<Scalars['string']>;
    readonly dmarc_neq: InputMaybe<Scalars['string']>;
    readonly dmarc_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly dmarc_notlike: InputMaybe<Scalars['string']>;
    readonly isNDR: InputMaybe<Scalars['uint8']>;
    readonly isNDR_geq: InputMaybe<Scalars['uint8']>;
    readonly isNDR_gt: InputMaybe<Scalars['uint8']>;
    readonly isNDR_in: InputMaybe<Scalars['bytes']>;
    readonly isNDR_leq: InputMaybe<Scalars['uint8']>;
    readonly isNDR_lt: InputMaybe<Scalars['uint8']>;
    readonly isNDR_neq: InputMaybe<Scalars['uint8']>;
    readonly isNDR_notin: InputMaybe<Scalars['bytes']>;
    readonly ruleMatched: InputMaybe<Scalars['string']>;
    readonly ruleMatched_geq: InputMaybe<Scalars['string']>;
    readonly ruleMatched_gt: InputMaybe<Scalars['string']>;
    readonly ruleMatched_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleMatched_leq: InputMaybe<Scalars['string']>;
    readonly ruleMatched_like: InputMaybe<Scalars['string']>;
    readonly ruleMatched_lt: InputMaybe<Scalars['string']>;
    readonly ruleMatched_neq: InputMaybe<Scalars['string']>;
    readonly ruleMatched_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleMatched_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly spf: InputMaybe<Scalars['string']>;
    readonly spf_geq: InputMaybe<Scalars['string']>;
    readonly spf_gt: InputMaybe<Scalars['string']>;
    readonly spf_in: InputMaybe<readonly Scalars['string'][]>;
    readonly spf_leq: InputMaybe<Scalars['string']>;
    readonly spf_like: InputMaybe<Scalars['string']>;
    readonly spf_lt: InputMaybe<Scalars['string']>;
    readonly spf_neq: InputMaybe<Scalars['string']>;
    readonly spf_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly spf_notlike: InputMaybe<Scalars['string']>;
    readonly status: InputMaybe<Scalars['string']>;
    readonly status_geq: InputMaybe<Scalars['string']>;
    readonly status_gt: InputMaybe<Scalars['string']>;
    readonly status_in: InputMaybe<readonly Scalars['string'][]>;
    readonly status_leq: InputMaybe<Scalars['string']>;
    readonly status_like: InputMaybe<Scalars['string']>;
    readonly status_lt: InputMaybe<Scalars['string']>;
    readonly status_neq: InputMaybe<Scalars['string']>;
    readonly status_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly status_notlike: InputMaybe<Scalars['string']>;
}

type ZoneEmailRoutingAdaptiveGroupsOrderBy =
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** dkim ascending */
  | 'dkim_ASC'
  /** dkim descending */
  | 'dkim_DESC'
  /** dmarc ascending */
  | 'dmarc_ASC'
  /** dmarc descending */
  | 'dmarc_DESC'
  /** isNDR ascending */
  | 'isNDR_ASC'
  /** isNDR descending */
  | 'isNDR_DESC'
  /** ruleMatched ascending */
  | 'ruleMatched_ASC'
  /** ruleMatched descending */
  | 'ruleMatched_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** spf ascending */
  | 'spf_ASC'
  /** spf descending */
  | 'spf_DESC'
  /** status ascending */
  | 'status_ASC'
  /** status descending */
  | 'status_DESC';

type ZoneEmailRoutingAdaptiveOrderBy =
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** dkim ascending */
  | 'dkim_ASC'
  /** dkim descending */
  | 'dkim_DESC'
  /** dmarc ascending */
  | 'dmarc_ASC'
  /** dmarc descending */
  | 'dmarc_DESC'
  /** errorDetail ascending */
  | 'errorDetail_ASC'
  /** errorDetail descending */
  | 'errorDetail_DESC'
  /** from ascending */
  | 'from_ASC'
  /** from descending */
  | 'from_DESC'
  /** isNDR ascending */
  | 'isNDR_ASC'
  /** isNDR descending */
  | 'isNDR_DESC'
  /** messageId ascending */
  | 'messageId_ASC'
  /** messageId descending */
  | 'messageId_DESC'
  /** ruleMatched ascending */
  | 'ruleMatched_ASC'
  /** ruleMatched descending */
  | 'ruleMatched_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** sessionId ascending */
  | 'sessionId_ASC'
  /** sessionId descending */
  | 'sessionId_DESC'
  /** spf ascending */
  | 'spf_ASC'
  /** spf descending */
  | 'spf_DESC'
  /** status ascending */
  | 'status_ASC'
  /** status descending */
  | 'status_DESC'
  /** subject ascending */
  | 'subject_ASC'
  /** subject descending */
  | 'subject_DESC'
  /** to ascending */
  | 'to_ASC'
  /** to descending */
  | 'to_DESC';

interface ZoneFilter_InputObject {
    readonly zoneTag: InputMaybe<Scalars['string']>;
    readonly zoneTag_gt: InputMaybe<Scalars['string']>;
    readonly zoneTag_in: InputMaybe<readonly Scalars['string'][]>;
}

interface ZoneFirewallEventsAdaptiveByTimeGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneFirewallEventsAdaptiveByTimeGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneFirewallEventsAdaptiveByTimeGroupsFilter_InputObject[]>;
    readonly action: InputMaybe<Scalars['string']>;
    readonly action_geq: InputMaybe<Scalars['string']>;
    readonly action_gt: InputMaybe<Scalars['string']>;
    readonly action_in: InputMaybe<readonly Scalars['string'][]>;
    readonly action_leq: InputMaybe<Scalars['string']>;
    readonly action_like: InputMaybe<Scalars['string']>;
    readonly action_lt: InputMaybe<Scalars['string']>;
    readonly action_neq: InputMaybe<Scalars['string']>;
    readonly action_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly action_notlike: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_geq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_gt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_in: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_leq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_like: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_lt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_neq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_notlike: InputMaybe<Scalars['string']>;
    readonly botScore: InputMaybe<Scalars['uint8']>;
    readonly botScoreSrcName: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_geq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_gt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_leq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_like: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_lt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_neq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_notlike: InputMaybe<Scalars['string']>;
    readonly botScore_geq: InputMaybe<Scalars['uint8']>;
    readonly botScore_gt: InputMaybe<Scalars['uint8']>;
    readonly botScore_in: InputMaybe<Scalars['bytes']>;
    readonly botScore_leq: InputMaybe<Scalars['uint8']>;
    readonly botScore_lt: InputMaybe<Scalars['uint8']>;
    readonly botScore_neq: InputMaybe<Scalars['uint8']>;
    readonly botScore_notin: InputMaybe<Scalars['bytes']>;
    readonly clientASNDescription: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_like: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly clientAsn: InputMaybe<Scalars['string']>;
    readonly clientAsn_geq: InputMaybe<Scalars['string']>;
    readonly clientAsn_gt: InputMaybe<Scalars['string']>;
    readonly clientAsn_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_leq: InputMaybe<Scalars['string']>;
    readonly clientAsn_like: InputMaybe<Scalars['string']>;
    readonly clientAsn_lt: InputMaybe<Scalars['string']>;
    readonly clientAsn_neq: InputMaybe<Scalars['string']>;
    readonly clientAsn_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_notlike: InputMaybe<Scalars['string']>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly clientIP: InputMaybe<Scalars['string']>;
    readonly clientIPClass: InputMaybe<Scalars['string']>;
    readonly clientIPClass_geq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_gt: InputMaybe<Scalars['string']>;
    readonly clientIPClass_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPClass_leq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_like: InputMaybe<Scalars['string']>;
    readonly clientIPClass_lt: InputMaybe<Scalars['string']>;
    readonly clientIPClass_neq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPClass_notlike: InputMaybe<Scalars['string']>;
    readonly clientIP_geq: InputMaybe<Scalars['string']>;
    readonly clientIP_gt: InputMaybe<Scalars['string']>;
    readonly clientIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_leq: InputMaybe<Scalars['string']>;
    readonly clientIP_like: InputMaybe<Scalars['string']>;
    readonly clientIP_lt: InputMaybe<Scalars['string']>;
    readonly clientIP_neq: InputMaybe<Scalars['string']>;
    readonly clientIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererHost: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_like: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererPath: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererPath_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_like: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererPath_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererQuery_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_like: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererQuery_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererScheme_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_like: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererScheme_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestPath: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_like: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_like: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_like: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly edgeColoName: InputMaybe<Scalars['string']>;
    readonly edgeColoName_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_like: InputMaybe<Scalars['string']>;
    readonly edgeColoName_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_notlike: InputMaybe<Scalars['string']>;
    readonly edgeResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly edgeResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly httpApplication: InputMaybe<Scalars['string']>;
    readonly httpApplicationVersion: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_geq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_gt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplicationVersion_leq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_lt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_neq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplication_geq: InputMaybe<Scalars['string']>;
    readonly httpApplication_gt: InputMaybe<Scalars['string']>;
    readonly httpApplication_in: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_leq: InputMaybe<Scalars['string']>;
    readonly httpApplication_like: InputMaybe<Scalars['string']>;
    readonly httpApplication_lt: InputMaybe<Scalars['string']>;
    readonly httpApplication_neq: InputMaybe<Scalars['string']>;
    readonly httpApplication_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_notlike: InputMaybe<Scalars['string']>;
    readonly ja3Hash: InputMaybe<Scalars['string']>;
    readonly ja3Hash_geq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_gt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_leq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_like: InputMaybe<Scalars['string']>;
    readonly ja3Hash_lt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_neq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_notlike: InputMaybe<Scalars['string']>;
    readonly kind: InputMaybe<Scalars['string']>;
    readonly kind_geq: InputMaybe<Scalars['string']>;
    readonly kind_gt: InputMaybe<Scalars['string']>;
    readonly kind_in: InputMaybe<readonly Scalars['string'][]>;
    readonly kind_leq: InputMaybe<Scalars['string']>;
    readonly kind_like: InputMaybe<Scalars['string']>;
    readonly kind_lt: InputMaybe<Scalars['string']>;
    readonly kind_neq: InputMaybe<Scalars['string']>;
    readonly kind_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly kind_notlike: InputMaybe<Scalars['string']>;
    readonly matchIndex: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_geq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_gt: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly matchIndex_leq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_lt: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_neq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originatorRayName: InputMaybe<Scalars['string']>;
    readonly originatorRayName_geq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_gt: InputMaybe<Scalars['string']>;
    readonly originatorRayName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly originatorRayName_leq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_like: InputMaybe<Scalars['string']>;
    readonly originatorRayName_lt: InputMaybe<Scalars['string']>;
    readonly originatorRayName_neq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly originatorRayName_notlike: InputMaybe<Scalars['string']>;
    readonly rayName: InputMaybe<Scalars['string']>;
    readonly rayName_geq: InputMaybe<Scalars['string']>;
    readonly rayName_gt: InputMaybe<Scalars['string']>;
    readonly rayName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rayName_leq: InputMaybe<Scalars['string']>;
    readonly rayName_like: InputMaybe<Scalars['string']>;
    readonly rayName_lt: InputMaybe<Scalars['string']>;
    readonly rayName_neq: InputMaybe<Scalars['string']>;
    readonly rayName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rayName_notlike: InputMaybe<Scalars['string']>;
    readonly ref: InputMaybe<Scalars['string']>;
    readonly ref_geq: InputMaybe<Scalars['string']>;
    readonly ref_gt: InputMaybe<Scalars['string']>;
    readonly ref_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ref_leq: InputMaybe<Scalars['string']>;
    readonly ref_like: InputMaybe<Scalars['string']>;
    readonly ref_lt: InputMaybe<Scalars['string']>;
    readonly ref_neq: InputMaybe<Scalars['string']>;
    readonly ref_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ref_notlike: InputMaybe<Scalars['string']>;
    readonly ruleId: InputMaybe<Scalars['string']>;
    readonly ruleId_geq: InputMaybe<Scalars['string']>;
    readonly ruleId_gt: InputMaybe<Scalars['string']>;
    readonly ruleId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_leq: InputMaybe<Scalars['string']>;
    readonly ruleId_like: InputMaybe<Scalars['string']>;
    readonly ruleId_lt: InputMaybe<Scalars['string']>;
    readonly ruleId_neq: InputMaybe<Scalars['string']>;
    readonly ruleId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_notlike: InputMaybe<Scalars['string']>;
    readonly rulesetId: InputMaybe<Scalars['string']>;
    readonly rulesetId_geq: InputMaybe<Scalars['string']>;
    readonly rulesetId_gt: InputMaybe<Scalars['string']>;
    readonly rulesetId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_leq: InputMaybe<Scalars['string']>;
    readonly rulesetId_like: InputMaybe<Scalars['string']>;
    readonly rulesetId_lt: InputMaybe<Scalars['string']>;
    readonly rulesetId_neq: InputMaybe<Scalars['string']>;
    readonly rulesetId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly source: InputMaybe<Scalars['string']>;
    readonly source_geq: InputMaybe<Scalars['string']>;
    readonly source_gt: InputMaybe<Scalars['string']>;
    readonly source_in: InputMaybe<readonly Scalars['string'][]>;
    readonly source_leq: InputMaybe<Scalars['string']>;
    readonly source_like: InputMaybe<Scalars['string']>;
    readonly source_lt: InputMaybe<Scalars['string']>;
    readonly source_neq: InputMaybe<Scalars['string']>;
    readonly source_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly source_notlike: InputMaybe<Scalars['string']>;
    readonly userAgent: InputMaybe<Scalars['string']>;
    readonly userAgent_geq: InputMaybe<Scalars['string']>;
    readonly userAgent_gt: InputMaybe<Scalars['string']>;
    readonly userAgent_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_leq: InputMaybe<Scalars['string']>;
    readonly userAgent_like: InputMaybe<Scalars['string']>;
    readonly userAgent_lt: InputMaybe<Scalars['string']>;
    readonly userAgent_neq: InputMaybe<Scalars['string']>;
    readonly userAgent_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_notlike: InputMaybe<Scalars['string']>;
    readonly wafAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlSqliAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlSqliAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlXssAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlXssAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_notin: InputMaybe<Scalars['bytes']>;
}

type ZoneFirewallEventsAdaptiveByTimeGroupsOrderBy =
  /** apiGatewayMatchedEndpoint ascending */
  | 'apiGatewayMatchedEndpoint_ASC'
  /** apiGatewayMatchedEndpoint descending */
  | 'apiGatewayMatchedEndpoint_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** botScoreSrcName ascending */
  | 'botScoreSrcName_ASC'
  /** botScoreSrcName descending */
  | 'botScoreSrcName_DESC'
  /** botScore ascending */
  | 'botScore_ASC'
  /** botScore descending */
  | 'botScore_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** httpApplicationVersion ascending */
  | 'httpApplicationVersion_ASC'
  /** httpApplicationVersion descending */
  | 'httpApplicationVersion_DESC'
  /** httpApplication ascending */
  | 'httpApplication_ASC'
  /** httpApplication descending */
  | 'httpApplication_DESC'
  /** ja3Hash ascending */
  | 'ja3Hash_ASC'
  /** ja3Hash descending */
  | 'ja3Hash_DESC'
  /** visibility ascending */
  | 'visibility_ASC'
  /** visibility descending */
  | 'visibility_DESC'
  /** wafAttackScore ascending */
  | 'wafAttackScore_ASC'
  /** wafAttackScore descending */
  | 'wafAttackScore_DESC'
  /** wafMlAttackScore ascending */
  | 'wafMlAttackScore_ASC'
  /** wafMlAttackScore descending */
  | 'wafMlAttackScore_DESC'
  /** wafMlSqliAttackScore ascending */
  | 'wafMlSqliAttackScore_ASC'
  /** wafMlSqliAttackScore descending */
  | 'wafMlSqliAttackScore_DESC'
  /** wafMlXssAttackScore ascending */
  | 'wafMlXssAttackScore_ASC'
  /** wafMlXssAttackScore descending */
  | 'wafMlXssAttackScore_DESC'
  /** wafRceAttackScore ascending */
  | 'wafRceAttackScore_ASC'
  /** wafRceAttackScore descending */
  | 'wafRceAttackScore_DESC'
  /** wafSqliAttackScore ascending */
  | 'wafSqliAttackScore_ASC'
  /** wafSqliAttackScore descending */
  | 'wafSqliAttackScore_DESC'
  /** wafXssAttackScore ascending */
  | 'wafXssAttackScore_ASC'
  /** wafXssAttackScore descending */
  | 'wafXssAttackScore_DESC';

interface ZoneFirewallEventsAdaptiveFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneFirewallEventsAdaptiveFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneFirewallEventsAdaptiveFilter_InputObject[]>;
    readonly action: InputMaybe<Scalars['string']>;
    readonly action_geq: InputMaybe<Scalars['string']>;
    readonly action_gt: InputMaybe<Scalars['string']>;
    readonly action_in: InputMaybe<readonly Scalars['string'][]>;
    readonly action_leq: InputMaybe<Scalars['string']>;
    readonly action_like: InputMaybe<Scalars['string']>;
    readonly action_lt: InputMaybe<Scalars['string']>;
    readonly action_neq: InputMaybe<Scalars['string']>;
    readonly action_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly action_notlike: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_geq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_gt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_in: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_leq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_like: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_lt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_neq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_notlike: InputMaybe<Scalars['string']>;
    readonly botScore: InputMaybe<Scalars['uint8']>;
    readonly botScoreSrcName: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_geq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_gt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_leq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_like: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_lt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_neq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_notlike: InputMaybe<Scalars['string']>;
    readonly botScore_geq: InputMaybe<Scalars['uint8']>;
    readonly botScore_gt: InputMaybe<Scalars['uint8']>;
    readonly botScore_in: InputMaybe<Scalars['bytes']>;
    readonly botScore_leq: InputMaybe<Scalars['uint8']>;
    readonly botScore_lt: InputMaybe<Scalars['uint8']>;
    readonly botScore_neq: InputMaybe<Scalars['uint8']>;
    readonly botScore_notin: InputMaybe<Scalars['bytes']>;
    readonly clientASNDescription: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_like: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly clientAsn: InputMaybe<Scalars['string']>;
    readonly clientAsn_geq: InputMaybe<Scalars['string']>;
    readonly clientAsn_gt: InputMaybe<Scalars['string']>;
    readonly clientAsn_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_leq: InputMaybe<Scalars['string']>;
    readonly clientAsn_like: InputMaybe<Scalars['string']>;
    readonly clientAsn_lt: InputMaybe<Scalars['string']>;
    readonly clientAsn_neq: InputMaybe<Scalars['string']>;
    readonly clientAsn_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_notlike: InputMaybe<Scalars['string']>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly clientIP: InputMaybe<Scalars['string']>;
    readonly clientIPClass: InputMaybe<Scalars['string']>;
    readonly clientIPClass_geq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_gt: InputMaybe<Scalars['string']>;
    readonly clientIPClass_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPClass_leq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_like: InputMaybe<Scalars['string']>;
    readonly clientIPClass_lt: InputMaybe<Scalars['string']>;
    readonly clientIPClass_neq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPClass_notlike: InputMaybe<Scalars['string']>;
    readonly clientIP_geq: InputMaybe<Scalars['string']>;
    readonly clientIP_gt: InputMaybe<Scalars['string']>;
    readonly clientIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_leq: InputMaybe<Scalars['string']>;
    readonly clientIP_like: InputMaybe<Scalars['string']>;
    readonly clientIP_lt: InputMaybe<Scalars['string']>;
    readonly clientIP_neq: InputMaybe<Scalars['string']>;
    readonly clientIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererHost: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_like: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererPath: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererPath_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_like: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererPath_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererQuery_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_like: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererQuery_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererScheme_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_like: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererScheme_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestPath: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_like: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_like: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_like: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_notlike: InputMaybe<Scalars['string']>;
    readonly contentScanHasFailed: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_geq: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_gt: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_in: InputMaybe<Scalars['bytes']>;
    readonly contentScanHasFailed_leq: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_lt: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_neq: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_notin: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumMaliciousObj: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_geq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_gt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_in: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumMaliciousObj_leq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_lt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_neq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_notin: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumObj: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_geq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_gt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_in: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumObj_leq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_lt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_neq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_notin: InputMaybe<Scalars['bytes']>;
    readonly contentScanObjResults: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_geq: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_gt: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_in: InputMaybe<readonly Scalars['string'][]>;
    readonly contentScanObjResults_leq: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_like: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_lt: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_neq: InputMaybe<Scalars['string']>;
    readonly contentScanObjResults_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly contentScanObjResults_notlike: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_geq: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_gt: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_in: InputMaybe<readonly Scalars['string'][]>;
    readonly contentScanObjTypes_leq: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_like: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_lt: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_neq: InputMaybe<Scalars['string']>;
    readonly contentScanObjTypes_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly contentScanObjTypes_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly edgeColoName: InputMaybe<Scalars['string']>;
    readonly edgeColoName_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_like: InputMaybe<Scalars['string']>;
    readonly edgeColoName_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_notlike: InputMaybe<Scalars['string']>;
    readonly edgeResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly edgeResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly httpApplication: InputMaybe<Scalars['string']>;
    readonly httpApplicationVersion: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_geq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_gt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplicationVersion_leq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_lt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_neq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplication_geq: InputMaybe<Scalars['string']>;
    readonly httpApplication_gt: InputMaybe<Scalars['string']>;
    readonly httpApplication_in: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_leq: InputMaybe<Scalars['string']>;
    readonly httpApplication_like: InputMaybe<Scalars['string']>;
    readonly httpApplication_lt: InputMaybe<Scalars['string']>;
    readonly httpApplication_neq: InputMaybe<Scalars['string']>;
    readonly httpApplication_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_notlike: InputMaybe<Scalars['string']>;
    readonly ja3Hash: InputMaybe<Scalars['string']>;
    readonly ja3Hash_geq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_gt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_leq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_like: InputMaybe<Scalars['string']>;
    readonly ja3Hash_lt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_neq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_notlike: InputMaybe<Scalars['string']>;
    readonly kind: InputMaybe<Scalars['string']>;
    readonly kind_geq: InputMaybe<Scalars['string']>;
    readonly kind_gt: InputMaybe<Scalars['string']>;
    readonly kind_in: InputMaybe<readonly Scalars['string'][]>;
    readonly kind_leq: InputMaybe<Scalars['string']>;
    readonly kind_like: InputMaybe<Scalars['string']>;
    readonly kind_lt: InputMaybe<Scalars['string']>;
    readonly kind_neq: InputMaybe<Scalars['string']>;
    readonly kind_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly kind_notlike: InputMaybe<Scalars['string']>;
    readonly matchIndex: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_geq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_gt: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly matchIndex_leq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_lt: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_neq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originatorRayName: InputMaybe<Scalars['string']>;
    readonly originatorRayName_geq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_gt: InputMaybe<Scalars['string']>;
    readonly originatorRayName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly originatorRayName_leq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_like: InputMaybe<Scalars['string']>;
    readonly originatorRayName_lt: InputMaybe<Scalars['string']>;
    readonly originatorRayName_neq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly originatorRayName_notlike: InputMaybe<Scalars['string']>;
    readonly rayName: InputMaybe<Scalars['string']>;
    readonly rayName_geq: InputMaybe<Scalars['string']>;
    readonly rayName_gt: InputMaybe<Scalars['string']>;
    readonly rayName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rayName_leq: InputMaybe<Scalars['string']>;
    readonly rayName_like: InputMaybe<Scalars['string']>;
    readonly rayName_lt: InputMaybe<Scalars['string']>;
    readonly rayName_neq: InputMaybe<Scalars['string']>;
    readonly rayName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rayName_notlike: InputMaybe<Scalars['string']>;
    readonly ref: InputMaybe<Scalars['string']>;
    readonly ref_geq: InputMaybe<Scalars['string']>;
    readonly ref_gt: InputMaybe<Scalars['string']>;
    readonly ref_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ref_leq: InputMaybe<Scalars['string']>;
    readonly ref_like: InputMaybe<Scalars['string']>;
    readonly ref_lt: InputMaybe<Scalars['string']>;
    readonly ref_neq: InputMaybe<Scalars['string']>;
    readonly ref_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ref_notlike: InputMaybe<Scalars['string']>;
    readonly ruleId: InputMaybe<Scalars['string']>;
    readonly ruleId_geq: InputMaybe<Scalars['string']>;
    readonly ruleId_gt: InputMaybe<Scalars['string']>;
    readonly ruleId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_leq: InputMaybe<Scalars['string']>;
    readonly ruleId_like: InputMaybe<Scalars['string']>;
    readonly ruleId_lt: InputMaybe<Scalars['string']>;
    readonly ruleId_neq: InputMaybe<Scalars['string']>;
    readonly ruleId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_notlike: InputMaybe<Scalars['string']>;
    readonly rulesetId: InputMaybe<Scalars['string']>;
    readonly rulesetId_geq: InputMaybe<Scalars['string']>;
    readonly rulesetId_gt: InputMaybe<Scalars['string']>;
    readonly rulesetId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_leq: InputMaybe<Scalars['string']>;
    readonly rulesetId_like: InputMaybe<Scalars['string']>;
    readonly rulesetId_lt: InputMaybe<Scalars['string']>;
    readonly rulesetId_neq: InputMaybe<Scalars['string']>;
    readonly rulesetId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly source: InputMaybe<Scalars['string']>;
    readonly source_geq: InputMaybe<Scalars['string']>;
    readonly source_gt: InputMaybe<Scalars['string']>;
    readonly source_in: InputMaybe<readonly Scalars['string'][]>;
    readonly source_leq: InputMaybe<Scalars['string']>;
    readonly source_like: InputMaybe<Scalars['string']>;
    readonly source_lt: InputMaybe<Scalars['string']>;
    readonly source_neq: InputMaybe<Scalars['string']>;
    readonly source_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly source_notlike: InputMaybe<Scalars['string']>;
    readonly userAgent: InputMaybe<Scalars['string']>;
    readonly userAgent_geq: InputMaybe<Scalars['string']>;
    readonly userAgent_gt: InputMaybe<Scalars['string']>;
    readonly userAgent_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_leq: InputMaybe<Scalars['string']>;
    readonly userAgent_like: InputMaybe<Scalars['string']>;
    readonly userAgent_lt: InputMaybe<Scalars['string']>;
    readonly userAgent_neq: InputMaybe<Scalars['string']>;
    readonly userAgent_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_notlike: InputMaybe<Scalars['string']>;
    readonly wafAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlSqliAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlSqliAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlXssAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlXssAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_notin: InputMaybe<Scalars['bytes']>;
}

interface ZoneFirewallEventsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneFirewallEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneFirewallEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly action: InputMaybe<Scalars['string']>;
    readonly action_geq: InputMaybe<Scalars['string']>;
    readonly action_gt: InputMaybe<Scalars['string']>;
    readonly action_in: InputMaybe<readonly Scalars['string'][]>;
    readonly action_leq: InputMaybe<Scalars['string']>;
    readonly action_like: InputMaybe<Scalars['string']>;
    readonly action_lt: InputMaybe<Scalars['string']>;
    readonly action_neq: InputMaybe<Scalars['string']>;
    readonly action_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly action_notlike: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_geq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_gt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_in: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_leq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_like: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_lt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_neq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_notlike: InputMaybe<Scalars['string']>;
    readonly botScore: InputMaybe<Scalars['uint8']>;
    readonly botScoreSrcName: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_geq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_gt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_leq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_like: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_lt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_neq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_notlike: InputMaybe<Scalars['string']>;
    readonly botScore_geq: InputMaybe<Scalars['uint8']>;
    readonly botScore_gt: InputMaybe<Scalars['uint8']>;
    readonly botScore_in: InputMaybe<Scalars['bytes']>;
    readonly botScore_leq: InputMaybe<Scalars['uint8']>;
    readonly botScore_lt: InputMaybe<Scalars['uint8']>;
    readonly botScore_neq: InputMaybe<Scalars['uint8']>;
    readonly botScore_notin: InputMaybe<Scalars['bytes']>;
    readonly clientASNDescription: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_like: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly clientAsn: InputMaybe<Scalars['string']>;
    readonly clientAsn_geq: InputMaybe<Scalars['string']>;
    readonly clientAsn_gt: InputMaybe<Scalars['string']>;
    readonly clientAsn_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_leq: InputMaybe<Scalars['string']>;
    readonly clientAsn_like: InputMaybe<Scalars['string']>;
    readonly clientAsn_lt: InputMaybe<Scalars['string']>;
    readonly clientAsn_neq: InputMaybe<Scalars['string']>;
    readonly clientAsn_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_notlike: InputMaybe<Scalars['string']>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly clientIP: InputMaybe<Scalars['string']>;
    readonly clientIPClass: InputMaybe<Scalars['string']>;
    readonly clientIPClass_geq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_gt: InputMaybe<Scalars['string']>;
    readonly clientIPClass_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPClass_leq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_like: InputMaybe<Scalars['string']>;
    readonly clientIPClass_lt: InputMaybe<Scalars['string']>;
    readonly clientIPClass_neq: InputMaybe<Scalars['string']>;
    readonly clientIPClass_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPClass_notlike: InputMaybe<Scalars['string']>;
    readonly clientIP_geq: InputMaybe<Scalars['string']>;
    readonly clientIP_gt: InputMaybe<Scalars['string']>;
    readonly clientIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_leq: InputMaybe<Scalars['string']>;
    readonly clientIP_like: InputMaybe<Scalars['string']>;
    readonly clientIP_lt: InputMaybe<Scalars['string']>;
    readonly clientIP_neq: InputMaybe<Scalars['string']>;
    readonly clientIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererHost: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_like: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererPath: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererPath_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_like: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererPath_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererQuery_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_like: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererQuery_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererQuery_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererScheme_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_like: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererScheme_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestPath: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_like: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_like: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_like: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly edgeColoName: InputMaybe<Scalars['string']>;
    readonly edgeColoName_geq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_gt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_leq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_like: InputMaybe<Scalars['string']>;
    readonly edgeColoName_lt: InputMaybe<Scalars['string']>;
    readonly edgeColoName_neq: InputMaybe<Scalars['string']>;
    readonly edgeColoName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeColoName_notlike: InputMaybe<Scalars['string']>;
    readonly edgeResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly edgeResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly httpApplication: InputMaybe<Scalars['string']>;
    readonly httpApplicationVersion: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_geq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_gt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplicationVersion_leq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_lt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_neq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplication_geq: InputMaybe<Scalars['string']>;
    readonly httpApplication_gt: InputMaybe<Scalars['string']>;
    readonly httpApplication_in: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_leq: InputMaybe<Scalars['string']>;
    readonly httpApplication_like: InputMaybe<Scalars['string']>;
    readonly httpApplication_lt: InputMaybe<Scalars['string']>;
    readonly httpApplication_neq: InputMaybe<Scalars['string']>;
    readonly httpApplication_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_notlike: InputMaybe<Scalars['string']>;
    readonly ja3Hash: InputMaybe<Scalars['string']>;
    readonly ja3Hash_geq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_gt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_leq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_like: InputMaybe<Scalars['string']>;
    readonly ja3Hash_lt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_neq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_notlike: InputMaybe<Scalars['string']>;
    readonly kind: InputMaybe<Scalars['string']>;
    readonly kind_geq: InputMaybe<Scalars['string']>;
    readonly kind_gt: InputMaybe<Scalars['string']>;
    readonly kind_in: InputMaybe<readonly Scalars['string'][]>;
    readonly kind_leq: InputMaybe<Scalars['string']>;
    readonly kind_like: InputMaybe<Scalars['string']>;
    readonly kind_lt: InputMaybe<Scalars['string']>;
    readonly kind_neq: InputMaybe<Scalars['string']>;
    readonly kind_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly kind_notlike: InputMaybe<Scalars['string']>;
    readonly matchIndex: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_geq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_gt: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly matchIndex_leq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_lt: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_neq: InputMaybe<Scalars['uint16']>;
    readonly matchIndex_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originatorRayName: InputMaybe<Scalars['string']>;
    readonly originatorRayName_geq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_gt: InputMaybe<Scalars['string']>;
    readonly originatorRayName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly originatorRayName_leq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_like: InputMaybe<Scalars['string']>;
    readonly originatorRayName_lt: InputMaybe<Scalars['string']>;
    readonly originatorRayName_neq: InputMaybe<Scalars['string']>;
    readonly originatorRayName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly originatorRayName_notlike: InputMaybe<Scalars['string']>;
    readonly rayName: InputMaybe<Scalars['string']>;
    readonly rayName_geq: InputMaybe<Scalars['string']>;
    readonly rayName_gt: InputMaybe<Scalars['string']>;
    readonly rayName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rayName_leq: InputMaybe<Scalars['string']>;
    readonly rayName_like: InputMaybe<Scalars['string']>;
    readonly rayName_lt: InputMaybe<Scalars['string']>;
    readonly rayName_neq: InputMaybe<Scalars['string']>;
    readonly rayName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rayName_notlike: InputMaybe<Scalars['string']>;
    readonly ref: InputMaybe<Scalars['string']>;
    readonly ref_geq: InputMaybe<Scalars['string']>;
    readonly ref_gt: InputMaybe<Scalars['string']>;
    readonly ref_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ref_leq: InputMaybe<Scalars['string']>;
    readonly ref_like: InputMaybe<Scalars['string']>;
    readonly ref_lt: InputMaybe<Scalars['string']>;
    readonly ref_neq: InputMaybe<Scalars['string']>;
    readonly ref_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ref_notlike: InputMaybe<Scalars['string']>;
    readonly ruleId: InputMaybe<Scalars['string']>;
    readonly ruleId_geq: InputMaybe<Scalars['string']>;
    readonly ruleId_gt: InputMaybe<Scalars['string']>;
    readonly ruleId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_leq: InputMaybe<Scalars['string']>;
    readonly ruleId_like: InputMaybe<Scalars['string']>;
    readonly ruleId_lt: InputMaybe<Scalars['string']>;
    readonly ruleId_neq: InputMaybe<Scalars['string']>;
    readonly ruleId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ruleId_notlike: InputMaybe<Scalars['string']>;
    readonly rulesetId: InputMaybe<Scalars['string']>;
    readonly rulesetId_geq: InputMaybe<Scalars['string']>;
    readonly rulesetId_gt: InputMaybe<Scalars['string']>;
    readonly rulesetId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_leq: InputMaybe<Scalars['string']>;
    readonly rulesetId_like: InputMaybe<Scalars['string']>;
    readonly rulesetId_lt: InputMaybe<Scalars['string']>;
    readonly rulesetId_neq: InputMaybe<Scalars['string']>;
    readonly rulesetId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rulesetId_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly source: InputMaybe<Scalars['string']>;
    readonly source_geq: InputMaybe<Scalars['string']>;
    readonly source_gt: InputMaybe<Scalars['string']>;
    readonly source_in: InputMaybe<readonly Scalars['string'][]>;
    readonly source_leq: InputMaybe<Scalars['string']>;
    readonly source_like: InputMaybe<Scalars['string']>;
    readonly source_lt: InputMaybe<Scalars['string']>;
    readonly source_neq: InputMaybe<Scalars['string']>;
    readonly source_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly source_notlike: InputMaybe<Scalars['string']>;
    readonly userAgent: InputMaybe<Scalars['string']>;
    readonly userAgent_geq: InputMaybe<Scalars['string']>;
    readonly userAgent_gt: InputMaybe<Scalars['string']>;
    readonly userAgent_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_leq: InputMaybe<Scalars['string']>;
    readonly userAgent_like: InputMaybe<Scalars['string']>;
    readonly userAgent_lt: InputMaybe<Scalars['string']>;
    readonly userAgent_neq: InputMaybe<Scalars['string']>;
    readonly userAgent_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_notlike: InputMaybe<Scalars['string']>;
    readonly wafAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlSqliAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlSqliAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlSqliAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafMlXssAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafMlXssAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafMlXssAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_notin: InputMaybe<Scalars['bytes']>;
}

type ZoneFirewallEventsAdaptiveGroupsOrderBy =
  /** action ascending */
  | 'action_ASC'
  /** action descending */
  | 'action_DESC'
  /** apiGatewayMatchedEndpoint ascending */
  | 'apiGatewayMatchedEndpoint_ASC'
  /** apiGatewayMatchedEndpoint descending */
  | 'apiGatewayMatchedEndpoint_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** botScoreSrcName ascending */
  | 'botScoreSrcName_ASC'
  /** botScoreSrcName descending */
  | 'botScoreSrcName_DESC'
  /** botScore ascending */
  | 'botScore_ASC'
  /** botScore descending */
  | 'botScore_DESC'
  /** clientASNDescription ascending */
  | 'clientASNDescription_ASC'
  /** clientASNDescription descending */
  | 'clientASNDescription_DESC'
  /** clientAsn ascending */
  | 'clientAsn_ASC'
  /** clientAsn descending */
  | 'clientAsn_DESC'
  /** clientCountryName ascending */
  | 'clientCountryName_ASC'
  /** clientCountryName descending */
  | 'clientCountryName_DESC'
  /** clientIPClass ascending */
  | 'clientIPClass_ASC'
  /** clientIPClass descending */
  | 'clientIPClass_DESC'
  /** clientIP ascending */
  | 'clientIP_ASC'
  /** clientIP descending */
  | 'clientIP_DESC'
  /** clientRefererHost ascending */
  | 'clientRefererHost_ASC'
  /** clientRefererHost descending */
  | 'clientRefererHost_DESC'
  /** clientRefererPath ascending */
  | 'clientRefererPath_ASC'
  /** clientRefererPath descending */
  | 'clientRefererPath_DESC'
  /** clientRefererQuery ascending */
  | 'clientRefererQuery_ASC'
  /** clientRefererQuery descending */
  | 'clientRefererQuery_DESC'
  /** clientRefererScheme ascending */
  | 'clientRefererScheme_ASC'
  /** clientRefererScheme descending */
  | 'clientRefererScheme_DESC'
  /** clientRequestHTTPHost ascending */
  | 'clientRequestHTTPHost_ASC'
  /** clientRequestHTTPHost descending */
  | 'clientRequestHTTPHost_DESC'
  /** clientRequestHTTPMethodName ascending */
  | 'clientRequestHTTPMethodName_ASC'
  /** clientRequestHTTPMethodName descending */
  | 'clientRequestHTTPMethodName_DESC'
  /** clientRequestHTTPProtocol ascending */
  | 'clientRequestHTTPProtocol_ASC'
  /** clientRequestHTTPProtocol descending */
  | 'clientRequestHTTPProtocol_DESC'
  /** clientRequestPath ascending */
  | 'clientRequestPath_ASC'
  /** clientRequestPath descending */
  | 'clientRequestPath_DESC'
  /** clientRequestQuery ascending */
  | 'clientRequestQuery_ASC'
  /** clientRequestQuery descending */
  | 'clientRequestQuery_DESC'
  /** clientRequestScheme ascending */
  | 'clientRequestScheme_ASC'
  /** clientRequestScheme descending */
  | 'clientRequestScheme_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** edgeColoName ascending */
  | 'edgeColoName_ASC'
  /** edgeColoName descending */
  | 'edgeColoName_DESC'
  /** edgeResponseStatus ascending */
  | 'edgeResponseStatus_ASC'
  /** edgeResponseStatus descending */
  | 'edgeResponseStatus_DESC'
  /** httpApplicationVersion ascending */
  | 'httpApplicationVersion_ASC'
  /** httpApplicationVersion descending */
  | 'httpApplicationVersion_DESC'
  /** httpApplication ascending */
  | 'httpApplication_ASC'
  /** httpApplication descending */
  | 'httpApplication_DESC'
  /** ja3Hash ascending */
  | 'ja3Hash_ASC'
  /** ja3Hash descending */
  | 'ja3Hash_DESC'
  /** kind ascending */
  | 'kind_ASC'
  /** kind descending */
  | 'kind_DESC'
  /** matchIndex ascending */
  | 'matchIndex_ASC'
  /** matchIndex descending */
  | 'matchIndex_DESC'
  /** originResponseStatus ascending */
  | 'originResponseStatus_ASC'
  /** originResponseStatus descending */
  | 'originResponseStatus_DESC'
  /** originatorRayName ascending */
  | 'originatorRayName_ASC'
  /** originatorRayName descending */
  | 'originatorRayName_DESC'
  /** rayName ascending */
  | 'rayName_ASC'
  /** rayName descending */
  | 'rayName_DESC'
  /** ref ascending */
  | 'ref_ASC'
  /** ref descending */
  | 'ref_DESC'
  /** ruleId ascending */
  | 'ruleId_ASC'
  /** ruleId descending */
  | 'ruleId_DESC'
  /** rulesetId ascending */
  | 'rulesetId_ASC'
  /** rulesetId descending */
  | 'rulesetId_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** source ascending */
  | 'source_ASC'
  /** source descending */
  | 'source_DESC'
  /** userAgent ascending */
  | 'userAgent_ASC'
  /** userAgent descending */
  | 'userAgent_DESC'
  /** visibility ascending */
  | 'visibility_ASC'
  /** visibility descending */
  | 'visibility_DESC'
  /** wafAttackScore ascending */
  | 'wafAttackScore_ASC'
  /** wafAttackScore descending */
  | 'wafAttackScore_DESC'
  /** wafMlAttackScore ascending */
  | 'wafMlAttackScore_ASC'
  /** wafMlAttackScore descending */
  | 'wafMlAttackScore_DESC'
  /** wafMlSqliAttackScore ascending */
  | 'wafMlSqliAttackScore_ASC'
  /** wafMlSqliAttackScore descending */
  | 'wafMlSqliAttackScore_DESC'
  /** wafMlXssAttackScore ascending */
  | 'wafMlXssAttackScore_ASC'
  /** wafMlXssAttackScore descending */
  | 'wafMlXssAttackScore_DESC'
  /** wafRceAttackScore ascending */
  | 'wafRceAttackScore_ASC'
  /** wafRceAttackScore descending */
  | 'wafRceAttackScore_DESC'
  /** wafSqliAttackScore ascending */
  | 'wafSqliAttackScore_ASC'
  /** wafSqliAttackScore descending */
  | 'wafSqliAttackScore_DESC'
  /** wafXssAttackScore ascending */
  | 'wafXssAttackScore_ASC'
  /** wafXssAttackScore descending */
  | 'wafXssAttackScore_DESC';

type ZoneFirewallEventsAdaptiveOrderBy =
  /** action ascending */
  | 'action_ASC'
  /** action descending */
  | 'action_DESC'
  /** apiGatewayMatchedEndpoint ascending */
  | 'apiGatewayMatchedEndpoint_ASC'
  /** apiGatewayMatchedEndpoint descending */
  | 'apiGatewayMatchedEndpoint_DESC'
  /** botScoreSrcName ascending */
  | 'botScoreSrcName_ASC'
  /** botScoreSrcName descending */
  | 'botScoreSrcName_DESC'
  /** botScore ascending */
  | 'botScore_ASC'
  /** botScore descending */
  | 'botScore_DESC'
  /** clientASNDescription ascending */
  | 'clientASNDescription_ASC'
  /** clientASNDescription descending */
  | 'clientASNDescription_DESC'
  /** clientAsn ascending */
  | 'clientAsn_ASC'
  /** clientAsn descending */
  | 'clientAsn_DESC'
  /** clientCountryName ascending */
  | 'clientCountryName_ASC'
  /** clientCountryName descending */
  | 'clientCountryName_DESC'
  /** clientIPClass ascending */
  | 'clientIPClass_ASC'
  /** clientIPClass descending */
  | 'clientIPClass_DESC'
  /** clientIP ascending */
  | 'clientIP_ASC'
  /** clientIP descending */
  | 'clientIP_DESC'
  /** clientRefererHost ascending */
  | 'clientRefererHost_ASC'
  /** clientRefererHost descending */
  | 'clientRefererHost_DESC'
  /** clientRefererPath ascending */
  | 'clientRefererPath_ASC'
  /** clientRefererPath descending */
  | 'clientRefererPath_DESC'
  /** clientRefererQuery ascending */
  | 'clientRefererQuery_ASC'
  /** clientRefererQuery descending */
  | 'clientRefererQuery_DESC'
  /** clientRefererScheme ascending */
  | 'clientRefererScheme_ASC'
  /** clientRefererScheme descending */
  | 'clientRefererScheme_DESC'
  /** clientRequestHTTPHost ascending */
  | 'clientRequestHTTPHost_ASC'
  /** clientRequestHTTPHost descending */
  | 'clientRequestHTTPHost_DESC'
  /** clientRequestHTTPMethodName ascending */
  | 'clientRequestHTTPMethodName_ASC'
  /** clientRequestHTTPMethodName descending */
  | 'clientRequestHTTPMethodName_DESC'
  /** clientRequestHTTPProtocol ascending */
  | 'clientRequestHTTPProtocol_ASC'
  /** clientRequestHTTPProtocol descending */
  | 'clientRequestHTTPProtocol_DESC'
  /** clientRequestPath ascending */
  | 'clientRequestPath_ASC'
  /** clientRequestPath descending */
  | 'clientRequestPath_DESC'
  /** clientRequestQuery ascending */
  | 'clientRequestQuery_ASC'
  /** clientRequestQuery descending */
  | 'clientRequestQuery_DESC'
  /** clientRequestScheme ascending */
  | 'clientRequestScheme_ASC'
  /** clientRequestScheme descending */
  | 'clientRequestScheme_DESC'
  /** contentScanHasFailed ascending */
  | 'contentScanHasFailed_ASC'
  /** contentScanHasFailed descending */
  | 'contentScanHasFailed_DESC'
  /** contentScanNumMaliciousObj ascending */
  | 'contentScanNumMaliciousObj_ASC'
  /** contentScanNumMaliciousObj descending */
  | 'contentScanNumMaliciousObj_DESC'
  /** contentScanNumObj ascending */
  | 'contentScanNumObj_ASC'
  /** contentScanNumObj descending */
  | 'contentScanNumObj_DESC'
  /** contentScanObjResults ascending */
  | 'contentScanObjResults_ASC'
  /** contentScanObjResults descending */
  | 'contentScanObjResults_DESC'
  /** contentScanObjTypes ascending */
  | 'contentScanObjTypes_ASC'
  /** contentScanObjTypes descending */
  | 'contentScanObjTypes_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** edgeColoName ascending */
  | 'edgeColoName_ASC'
  /** edgeColoName descending */
  | 'edgeColoName_DESC'
  /** edgeResponseStatus ascending */
  | 'edgeResponseStatus_ASC'
  /** edgeResponseStatus descending */
  | 'edgeResponseStatus_DESC'
  /** httpApplicationVersion ascending */
  | 'httpApplicationVersion_ASC'
  /** httpApplicationVersion descending */
  | 'httpApplicationVersion_DESC'
  /** httpApplication ascending */
  | 'httpApplication_ASC'
  /** httpApplication descending */
  | 'httpApplication_DESC'
  /** ja3Hash ascending */
  | 'ja3Hash_ASC'
  /** ja3Hash descending */
  | 'ja3Hash_DESC'
  /** kind ascending */
  | 'kind_ASC'
  /** kind descending */
  | 'kind_DESC'
  /** matchIndex ascending */
  | 'matchIndex_ASC'
  /** matchIndex descending */
  | 'matchIndex_DESC'
  /** originResponseStatus ascending */
  | 'originResponseStatus_ASC'
  /** originResponseStatus descending */
  | 'originResponseStatus_DESC'
  /** originatorRayName ascending */
  | 'originatorRayName_ASC'
  /** originatorRayName descending */
  | 'originatorRayName_DESC'
  /** rayName ascending */
  | 'rayName_ASC'
  /** rayName descending */
  | 'rayName_DESC'
  /** ref ascending */
  | 'ref_ASC'
  /** ref descending */
  | 'ref_DESC'
  /** ruleId ascending */
  | 'ruleId_ASC'
  /** ruleId descending */
  | 'ruleId_DESC'
  /** rulesetId ascending */
  | 'rulesetId_ASC'
  /** rulesetId descending */
  | 'rulesetId_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** source ascending */
  | 'source_ASC'
  /** source descending */
  | 'source_DESC'
  /** userAgent ascending */
  | 'userAgent_ASC'
  /** userAgent descending */
  | 'userAgent_DESC'
  /** visibility ascending */
  | 'visibility_ASC'
  /** visibility descending */
  | 'visibility_DESC'
  /** wafAttackScore ascending */
  | 'wafAttackScore_ASC'
  /** wafAttackScore descending */
  | 'wafAttackScore_DESC'
  /** wafMlAttackScore ascending */
  | 'wafMlAttackScore_ASC'
  /** wafMlAttackScore descending */
  | 'wafMlAttackScore_DESC'
  /** wafMlSqliAttackScore ascending */
  | 'wafMlSqliAttackScore_ASC'
  /** wafMlSqliAttackScore descending */
  | 'wafMlSqliAttackScore_DESC'
  /** wafMlXssAttackScore ascending */
  | 'wafMlXssAttackScore_ASC'
  /** wafMlXssAttackScore descending */
  | 'wafMlXssAttackScore_DESC'
  /** wafRceAttackScore ascending */
  | 'wafRceAttackScore_ASC'
  /** wafRceAttackScore descending */
  | 'wafRceAttackScore_DESC'
  /** wafSqliAttackScore ascending */
  | 'wafSqliAttackScore_ASC'
  /** wafSqliAttackScore descending */
  | 'wafSqliAttackScore_DESC'
  /** wafXssAttackScore ascending */
  | 'wafXssAttackScore_ASC'
  /** wafXssAttackScore descending */
  | 'wafXssAttackScore_DESC';

interface ZoneHealthCheckEventsAdaptiveFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneHealthCheckEventsAdaptiveFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneHealthCheckEventsAdaptiveFilter_InputObject[]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly eventId: InputMaybe<Scalars['string']>;
    readonly eventId_geq: InputMaybe<Scalars['string']>;
    readonly eventId_gt: InputMaybe<Scalars['string']>;
    readonly eventId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly eventId_leq: InputMaybe<Scalars['string']>;
    readonly eventId_like: InputMaybe<Scalars['string']>;
    readonly eventId_lt: InputMaybe<Scalars['string']>;
    readonly eventId_neq: InputMaybe<Scalars['string']>;
    readonly eventId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly eventId_notlike: InputMaybe<Scalars['string']>;
    readonly expectedResponseCodes: InputMaybe<Scalars['string']>;
    readonly expectedResponseCodes_geq: InputMaybe<Scalars['string']>;
    readonly expectedResponseCodes_gt: InputMaybe<Scalars['string']>;
    readonly expectedResponseCodes_in: InputMaybe<readonly Scalars['string'][]>;
    readonly expectedResponseCodes_leq: InputMaybe<Scalars['string']>;
    readonly expectedResponseCodes_like: InputMaybe<Scalars['string']>;
    readonly expectedResponseCodes_lt: InputMaybe<Scalars['string']>;
    readonly expectedResponseCodes_neq: InputMaybe<Scalars['string']>;
    readonly expectedResponseCodes_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly expectedResponseCodes_notlike: InputMaybe<Scalars['string']>;
    readonly failureReason: InputMaybe<Scalars['string']>;
    readonly failureReason_geq: InputMaybe<Scalars['string']>;
    readonly failureReason_gt: InputMaybe<Scalars['string']>;
    readonly failureReason_in: InputMaybe<readonly Scalars['string'][]>;
    readonly failureReason_leq: InputMaybe<Scalars['string']>;
    readonly failureReason_like: InputMaybe<Scalars['string']>;
    readonly failureReason_lt: InputMaybe<Scalars['string']>;
    readonly failureReason_neq: InputMaybe<Scalars['string']>;
    readonly failureReason_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly failureReason_notlike: InputMaybe<Scalars['string']>;
    readonly fqdn: InputMaybe<Scalars['string']>;
    readonly fqdn_geq: InputMaybe<Scalars['string']>;
    readonly fqdn_gt: InputMaybe<Scalars['string']>;
    readonly fqdn_in: InputMaybe<readonly Scalars['string'][]>;
    readonly fqdn_leq: InputMaybe<Scalars['string']>;
    readonly fqdn_like: InputMaybe<Scalars['string']>;
    readonly fqdn_lt: InputMaybe<Scalars['string']>;
    readonly fqdn_neq: InputMaybe<Scalars['string']>;
    readonly fqdn_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly fqdn_notlike: InputMaybe<Scalars['string']>;
    readonly healthChanged: InputMaybe<Scalars['uint8']>;
    readonly healthChanged_geq: InputMaybe<Scalars['uint8']>;
    readonly healthChanged_gt: InputMaybe<Scalars['uint8']>;
    readonly healthChanged_in: InputMaybe<Scalars['bytes']>;
    readonly healthChanged_leq: InputMaybe<Scalars['uint8']>;
    readonly healthChanged_lt: InputMaybe<Scalars['uint8']>;
    readonly healthChanged_neq: InputMaybe<Scalars['uint8']>;
    readonly healthChanged_notin: InputMaybe<Scalars['bytes']>;
    readonly healthCheckId: InputMaybe<Scalars['string']>;
    readonly healthCheckId_geq: InputMaybe<Scalars['string']>;
    readonly healthCheckId_gt: InputMaybe<Scalars['string']>;
    readonly healthCheckId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly healthCheckId_leq: InputMaybe<Scalars['string']>;
    readonly healthCheckId_like: InputMaybe<Scalars['string']>;
    readonly healthCheckId_lt: InputMaybe<Scalars['string']>;
    readonly healthCheckId_neq: InputMaybe<Scalars['string']>;
    readonly healthCheckId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly healthCheckId_notlike: InputMaybe<Scalars['string']>;
    readonly healthCheckName: InputMaybe<Scalars['string']>;
    readonly healthCheckName_geq: InputMaybe<Scalars['string']>;
    readonly healthCheckName_gt: InputMaybe<Scalars['string']>;
    readonly healthCheckName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly healthCheckName_leq: InputMaybe<Scalars['string']>;
    readonly healthCheckName_like: InputMaybe<Scalars['string']>;
    readonly healthCheckName_lt: InputMaybe<Scalars['string']>;
    readonly healthCheckName_neq: InputMaybe<Scalars['string']>;
    readonly healthCheckName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly healthCheckName_notlike: InputMaybe<Scalars['string']>;
    readonly healthStatus: InputMaybe<Scalars['string']>;
    readonly healthStatus_geq: InputMaybe<Scalars['string']>;
    readonly healthStatus_gt: InputMaybe<Scalars['string']>;
    readonly healthStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly healthStatus_leq: InputMaybe<Scalars['string']>;
    readonly healthStatus_like: InputMaybe<Scalars['string']>;
    readonly healthStatus_lt: InputMaybe<Scalars['string']>;
    readonly healthStatus_neq: InputMaybe<Scalars['string']>;
    readonly healthStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly healthStatus_notlike: InputMaybe<Scalars['string']>;
    readonly originIP: InputMaybe<Scalars['string']>;
    readonly originIP_geq: InputMaybe<Scalars['string']>;
    readonly originIP_gt: InputMaybe<Scalars['string']>;
    readonly originIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly originIP_leq: InputMaybe<Scalars['string']>;
    readonly originIP_like: InputMaybe<Scalars['string']>;
    readonly originIP_lt: InputMaybe<Scalars['string']>;
    readonly originIP_neq: InputMaybe<Scalars['string']>;
    readonly originIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly originIP_notlike: InputMaybe<Scalars['string']>;
    readonly originResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly region: InputMaybe<Scalars['string']>;
    readonly region_geq: InputMaybe<Scalars['string']>;
    readonly region_gt: InputMaybe<Scalars['string']>;
    readonly region_in: InputMaybe<readonly Scalars['string'][]>;
    readonly region_leq: InputMaybe<Scalars['string']>;
    readonly region_like: InputMaybe<Scalars['string']>;
    readonly region_lt: InputMaybe<Scalars['string']>;
    readonly region_neq: InputMaybe<Scalars['string']>;
    readonly region_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly region_notlike: InputMaybe<Scalars['string']>;
    readonly rttMs: InputMaybe<Scalars['uint64']>;
    readonly rttMs_geq: InputMaybe<Scalars['uint64']>;
    readonly rttMs_gt: InputMaybe<Scalars['uint64']>;
    readonly rttMs_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly rttMs_leq: InputMaybe<Scalars['uint64']>;
    readonly rttMs_lt: InputMaybe<Scalars['uint64']>;
    readonly rttMs_neq: InputMaybe<Scalars['uint64']>;
    readonly rttMs_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly scope: InputMaybe<Scalars['string']>;
    readonly scope_geq: InputMaybe<Scalars['string']>;
    readonly scope_gt: InputMaybe<Scalars['string']>;
    readonly scope_in: InputMaybe<readonly Scalars['string'][]>;
    readonly scope_leq: InputMaybe<Scalars['string']>;
    readonly scope_like: InputMaybe<Scalars['string']>;
    readonly scope_lt: InputMaybe<Scalars['string']>;
    readonly scope_neq: InputMaybe<Scalars['string']>;
    readonly scope_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly scope_notlike: InputMaybe<Scalars['string']>;
    readonly tcpConnMs: InputMaybe<Scalars['uint32']>;
    readonly tcpConnMs_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpConnMs_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpConnMs_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpConnMs_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpConnMs_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpConnMs_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpConnMs_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly timeToFirstByteMs: InputMaybe<Scalars['uint32']>;
    readonly timeToFirstByteMs_geq: InputMaybe<Scalars['uint32']>;
    readonly timeToFirstByteMs_gt: InputMaybe<Scalars['uint32']>;
    readonly timeToFirstByteMs_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly timeToFirstByteMs_leq: InputMaybe<Scalars['uint32']>;
    readonly timeToFirstByteMs_lt: InputMaybe<Scalars['uint32']>;
    readonly timeToFirstByteMs_neq: InputMaybe<Scalars['uint32']>;
    readonly timeToFirstByteMs_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tlsHandshakeMs: InputMaybe<Scalars['uint32']>;
    readonly tlsHandshakeMs_geq: InputMaybe<Scalars['uint32']>;
    readonly tlsHandshakeMs_gt: InputMaybe<Scalars['uint32']>;
    readonly tlsHandshakeMs_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tlsHandshakeMs_leq: InputMaybe<Scalars['uint32']>;
    readonly tlsHandshakeMs_lt: InputMaybe<Scalars['uint32']>;
    readonly tlsHandshakeMs_neq: InputMaybe<Scalars['uint32']>;
    readonly tlsHandshakeMs_notin: InputMaybe<readonly Scalars['uint32'][]>;
}

interface ZoneHealthCheckEventsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneHealthCheckEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneHealthCheckEventsAdaptiveGroupsFilter_InputObject[]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly failureReason: InputMaybe<Scalars['string']>;
    readonly failureReason_geq: InputMaybe<Scalars['string']>;
    readonly failureReason_gt: InputMaybe<Scalars['string']>;
    readonly failureReason_in: InputMaybe<readonly Scalars['string'][]>;
    readonly failureReason_leq: InputMaybe<Scalars['string']>;
    readonly failureReason_like: InputMaybe<Scalars['string']>;
    readonly failureReason_lt: InputMaybe<Scalars['string']>;
    readonly failureReason_neq: InputMaybe<Scalars['string']>;
    readonly failureReason_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly failureReason_notlike: InputMaybe<Scalars['string']>;
    readonly fqdn: InputMaybe<Scalars['string']>;
    readonly fqdn_geq: InputMaybe<Scalars['string']>;
    readonly fqdn_gt: InputMaybe<Scalars['string']>;
    readonly fqdn_in: InputMaybe<readonly Scalars['string'][]>;
    readonly fqdn_leq: InputMaybe<Scalars['string']>;
    readonly fqdn_like: InputMaybe<Scalars['string']>;
    readonly fqdn_lt: InputMaybe<Scalars['string']>;
    readonly fqdn_neq: InputMaybe<Scalars['string']>;
    readonly fqdn_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly fqdn_notlike: InputMaybe<Scalars['string']>;
    readonly healthChanged: InputMaybe<Scalars['uint8']>;
    readonly healthChanged_geq: InputMaybe<Scalars['uint8']>;
    readonly healthChanged_gt: InputMaybe<Scalars['uint8']>;
    readonly healthChanged_in: InputMaybe<Scalars['bytes']>;
    readonly healthChanged_leq: InputMaybe<Scalars['uint8']>;
    readonly healthChanged_lt: InputMaybe<Scalars['uint8']>;
    readonly healthChanged_neq: InputMaybe<Scalars['uint8']>;
    readonly healthChanged_notin: InputMaybe<Scalars['bytes']>;
    readonly healthCheckId: InputMaybe<Scalars['string']>;
    readonly healthCheckId_geq: InputMaybe<Scalars['string']>;
    readonly healthCheckId_gt: InputMaybe<Scalars['string']>;
    readonly healthCheckId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly healthCheckId_leq: InputMaybe<Scalars['string']>;
    readonly healthCheckId_like: InputMaybe<Scalars['string']>;
    readonly healthCheckId_lt: InputMaybe<Scalars['string']>;
    readonly healthCheckId_neq: InputMaybe<Scalars['string']>;
    readonly healthCheckId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly healthCheckId_notlike: InputMaybe<Scalars['string']>;
    readonly healthCheckName: InputMaybe<Scalars['string']>;
    readonly healthCheckName_geq: InputMaybe<Scalars['string']>;
    readonly healthCheckName_gt: InputMaybe<Scalars['string']>;
    readonly healthCheckName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly healthCheckName_leq: InputMaybe<Scalars['string']>;
    readonly healthCheckName_like: InputMaybe<Scalars['string']>;
    readonly healthCheckName_lt: InputMaybe<Scalars['string']>;
    readonly healthCheckName_neq: InputMaybe<Scalars['string']>;
    readonly healthCheckName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly healthCheckName_notlike: InputMaybe<Scalars['string']>;
    readonly healthStatus: InputMaybe<Scalars['string']>;
    readonly healthStatus_geq: InputMaybe<Scalars['string']>;
    readonly healthStatus_gt: InputMaybe<Scalars['string']>;
    readonly healthStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly healthStatus_leq: InputMaybe<Scalars['string']>;
    readonly healthStatus_like: InputMaybe<Scalars['string']>;
    readonly healthStatus_lt: InputMaybe<Scalars['string']>;
    readonly healthStatus_neq: InputMaybe<Scalars['string']>;
    readonly healthStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly healthStatus_notlike: InputMaybe<Scalars['string']>;
    readonly originIP: InputMaybe<Scalars['string']>;
    readonly originIP_geq: InputMaybe<Scalars['string']>;
    readonly originIP_gt: InputMaybe<Scalars['string']>;
    readonly originIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly originIP_leq: InputMaybe<Scalars['string']>;
    readonly originIP_like: InputMaybe<Scalars['string']>;
    readonly originIP_lt: InputMaybe<Scalars['string']>;
    readonly originIP_neq: InputMaybe<Scalars['string']>;
    readonly originIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly originIP_notlike: InputMaybe<Scalars['string']>;
    readonly originResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly region: InputMaybe<Scalars['string']>;
    readonly region_geq: InputMaybe<Scalars['string']>;
    readonly region_gt: InputMaybe<Scalars['string']>;
    readonly region_in: InputMaybe<readonly Scalars['string'][]>;
    readonly region_leq: InputMaybe<Scalars['string']>;
    readonly region_like: InputMaybe<Scalars['string']>;
    readonly region_lt: InputMaybe<Scalars['string']>;
    readonly region_neq: InputMaybe<Scalars['string']>;
    readonly region_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly region_notlike: InputMaybe<Scalars['string']>;
    readonly rttMs: InputMaybe<Scalars['uint64']>;
    readonly rttMs_geq: InputMaybe<Scalars['uint64']>;
    readonly rttMs_gt: InputMaybe<Scalars['uint64']>;
    readonly rttMs_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly rttMs_leq: InputMaybe<Scalars['uint64']>;
    readonly rttMs_lt: InputMaybe<Scalars['uint64']>;
    readonly rttMs_neq: InputMaybe<Scalars['uint64']>;
    readonly rttMs_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly scope: InputMaybe<Scalars['string']>;
    readonly scope_geq: InputMaybe<Scalars['string']>;
    readonly scope_gt: InputMaybe<Scalars['string']>;
    readonly scope_in: InputMaybe<readonly Scalars['string'][]>;
    readonly scope_leq: InputMaybe<Scalars['string']>;
    readonly scope_like: InputMaybe<Scalars['string']>;
    readonly scope_lt: InputMaybe<Scalars['string']>;
    readonly scope_neq: InputMaybe<Scalars['string']>;
    readonly scope_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly scope_notlike: InputMaybe<Scalars['string']>;
    readonly tcpConnMs: InputMaybe<Scalars['uint32']>;
    readonly tcpConnMs_geq: InputMaybe<Scalars['uint32']>;
    readonly tcpConnMs_gt: InputMaybe<Scalars['uint32']>;
    readonly tcpConnMs_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tcpConnMs_leq: InputMaybe<Scalars['uint32']>;
    readonly tcpConnMs_lt: InputMaybe<Scalars['uint32']>;
    readonly tcpConnMs_neq: InputMaybe<Scalars['uint32']>;
    readonly tcpConnMs_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly timeToFirstByteMs: InputMaybe<Scalars['uint32']>;
    readonly timeToFirstByteMs_geq: InputMaybe<Scalars['uint32']>;
    readonly timeToFirstByteMs_gt: InputMaybe<Scalars['uint32']>;
    readonly timeToFirstByteMs_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly timeToFirstByteMs_leq: InputMaybe<Scalars['uint32']>;
    readonly timeToFirstByteMs_lt: InputMaybe<Scalars['uint32']>;
    readonly timeToFirstByteMs_neq: InputMaybe<Scalars['uint32']>;
    readonly timeToFirstByteMs_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tlsHandshakeMs: InputMaybe<Scalars['uint32']>;
    readonly tlsHandshakeMs_geq: InputMaybe<Scalars['uint32']>;
    readonly tlsHandshakeMs_gt: InputMaybe<Scalars['uint32']>;
    readonly tlsHandshakeMs_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly tlsHandshakeMs_leq: InputMaybe<Scalars['uint32']>;
    readonly tlsHandshakeMs_lt: InputMaybe<Scalars['uint32']>;
    readonly tlsHandshakeMs_neq: InputMaybe<Scalars['uint32']>;
    readonly tlsHandshakeMs_notin: InputMaybe<readonly Scalars['uint32'][]>;
}

type ZoneHealthCheckEventsAdaptiveGroupsOrderBy =
  /** avg(rttMs) ascending */
  | 'avg_rttMs_ASC'
  /** avg(rttMs) descending */
  | 'avg_rttMs_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** avg(tcpConnMs) ascending */
  | 'avg_tcpConnMs_ASC'
  /** avg(tcpConnMs) descending */
  | 'avg_tcpConnMs_DESC'
  /** avg(timeToFirstByteMs) ascending */
  | 'avg_timeToFirstByteMs_ASC'
  /** avg(timeToFirstByteMs) descending */
  | 'avg_timeToFirstByteMs_DESC'
  /** avg(tlsHandshakeMs) ascending */
  | 'avg_tlsHandshakeMs_ASC'
  /** avg(tlsHandshakeMs) descending */
  | 'avg_tlsHandshakeMs_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** failureReason ascending */
  | 'failureReason_ASC'
  /** failureReason descending */
  | 'failureReason_DESC'
  /** fqdn ascending */
  | 'fqdn_ASC'
  /** fqdn descending */
  | 'fqdn_DESC'
  /** healthChanged ascending */
  | 'healthChanged_ASC'
  /** healthChanged descending */
  | 'healthChanged_DESC'
  /** healthCheckId ascending */
  | 'healthCheckId_ASC'
  /** healthCheckId descending */
  | 'healthCheckId_DESC'
  /** healthCheckName ascending */
  | 'healthCheckName_ASC'
  /** healthCheckName descending */
  | 'healthCheckName_DESC'
  /** healthStatus ascending */
  | 'healthStatus_ASC'
  /** healthStatus descending */
  | 'healthStatus_DESC'
  /** originIP ascending */
  | 'originIP_ASC'
  /** originIP descending */
  | 'originIP_DESC'
  /** originResponseStatus ascending */
  | 'originResponseStatus_ASC'
  /** originResponseStatus descending */
  | 'originResponseStatus_DESC'
  /** region ascending */
  | 'region_ASC'
  /** region descending */
  | 'region_DESC'
  /** rttMs ascending */
  | 'rttMs_ASC'
  /** rttMs descending */
  | 'rttMs_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** scope ascending */
  | 'scope_ASC'
  /** scope descending */
  | 'scope_DESC'
  /** sum(healthStatus) ascending */
  | 'sum_healthStatus_ASC'
  /** sum(healthStatus) descending */
  | 'sum_healthStatus_DESC'
  /** tcpConnMs ascending */
  | 'tcpConnMs_ASC'
  /** tcpConnMs descending */
  | 'tcpConnMs_DESC'
  /** timeToFirstByteMs ascending */
  | 'timeToFirstByteMs_ASC'
  /** timeToFirstByteMs descending */
  | 'timeToFirstByteMs_DESC'
  /** tlsHandshakeMs ascending */
  | 'tlsHandshakeMs_ASC'
  /** tlsHandshakeMs descending */
  | 'tlsHandshakeMs_DESC';

type ZoneHealthCheckEventsAdaptiveOrderBy =
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** eventId ascending */
  | 'eventId_ASC'
  /** eventId descending */
  | 'eventId_DESC'
  /** expectedResponseCodes ascending */
  | 'expectedResponseCodes_ASC'
  /** expectedResponseCodes descending */
  | 'expectedResponseCodes_DESC'
  /** failureReason ascending */
  | 'failureReason_ASC'
  /** failureReason descending */
  | 'failureReason_DESC'
  /** fqdn ascending */
  | 'fqdn_ASC'
  /** fqdn descending */
  | 'fqdn_DESC'
  /** healthChanged ascending */
  | 'healthChanged_ASC'
  /** healthChanged descending */
  | 'healthChanged_DESC'
  /** healthCheckId ascending */
  | 'healthCheckId_ASC'
  /** healthCheckId descending */
  | 'healthCheckId_DESC'
  /** healthCheckName ascending */
  | 'healthCheckName_ASC'
  /** healthCheckName descending */
  | 'healthCheckName_DESC'
  /** healthStatus ascending */
  | 'healthStatus_ASC'
  /** healthStatus descending */
  | 'healthStatus_DESC'
  /** originIP ascending */
  | 'originIP_ASC'
  /** originIP descending */
  | 'originIP_DESC'
  /** originResponseStatus ascending */
  | 'originResponseStatus_ASC'
  /** originResponseStatus descending */
  | 'originResponseStatus_DESC'
  /** region ascending */
  | 'region_ASC'
  /** region descending */
  | 'region_DESC'
  /** rttMs ascending */
  | 'rttMs_ASC'
  /** rttMs descending */
  | 'rttMs_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** scope ascending */
  | 'scope_ASC'
  /** scope descending */
  | 'scope_DESC'
  /** tcpConnMs ascending */
  | 'tcpConnMs_ASC'
  /** tcpConnMs descending */
  | 'tcpConnMs_DESC'
  /** timeToFirstByteMs ascending */
  | 'timeToFirstByteMs_ASC'
  /** timeToFirstByteMs descending */
  | 'timeToFirstByteMs_DESC'
  /** tlsHandshakeMs ascending */
  | 'tlsHandshakeMs_ASC'
  /** tlsHandshakeMs descending */
  | 'tlsHandshakeMs_DESC';

interface ZoneHttpRequests1dByColoGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneHttpRequests1dByColoGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneHttpRequests1dByColoGroupsFilter_InputObject[]>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
}

type ZoneHttpRequests1dByColoGroupsOrderBy =
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** sum(bytes) ascending */
  | 'sum_bytes_ASC'
  /** sum(bytes) descending */
  | 'sum_bytes_DESC'
  /** sum(cachedBytes) ascending */
  | 'sum_cachedBytes_ASC'
  /** sum(cachedBytes) descending */
  | 'sum_cachedBytes_DESC'
  /** sum(cachedRequests) ascending */
  | 'sum_cachedRequests_ASC'
  /** sum(cachedRequests) descending */
  | 'sum_cachedRequests_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC';

interface ZoneHttpRequests1dGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneHttpRequests1dGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneHttpRequests1dGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
}

type ZoneHttpRequests1dGroupsOrderBy =
  /** avg(bytes) ascending */
  | 'avg_bytes_ASC'
  /** avg(bytes) descending */
  | 'avg_bytes_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** sum(bytes) ascending */
  | 'sum_bytes_ASC'
  /** sum(bytes) descending */
  | 'sum_bytes_DESC'
  /** sum(cachedBytes) ascending */
  | 'sum_cachedBytes_ASC'
  /** sum(cachedBytes) descending */
  | 'sum_cachedBytes_DESC'
  /** sum(cachedRequests) ascending */
  | 'sum_cachedRequests_ASC'
  /** sum(cachedRequests) descending */
  | 'sum_cachedRequests_DESC'
  /** sum(encryptedBytes) ascending */
  | 'sum_encryptedBytes_ASC'
  /** sum(encryptedBytes) descending */
  | 'sum_encryptedBytes_DESC'
  /** sum(encryptedRequests) ascending */
  | 'sum_encryptedRequests_ASC'
  /** sum(encryptedRequests) descending */
  | 'sum_encryptedRequests_DESC'
  /** sum(pageViews) ascending */
  | 'sum_pageViews_ASC'
  /** sum(pageViews) descending */
  | 'sum_pageViews_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(threats) ascending */
  | 'sum_threats_ASC'
  /** sum(threats) descending */
  | 'sum_threats_DESC'
  /** uniq(uniques) ascending */
  | 'uniq_uniques_ASC'
  /** uniq(uniques) descending */
  | 'uniq_uniques_DESC';

interface ZoneHttpRequests1hGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneHttpRequests1hGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneHttpRequests1hGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
}

type ZoneHttpRequests1hGroupsOrderBy =
  /** avg(bytes) ascending */
  | 'avg_bytes_ASC'
  /** avg(bytes) descending */
  | 'avg_bytes_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** sum(bytes) ascending */
  | 'sum_bytes_ASC'
  /** sum(bytes) descending */
  | 'sum_bytes_DESC'
  /** sum(cachedBytes) ascending */
  | 'sum_cachedBytes_ASC'
  /** sum(cachedBytes) descending */
  | 'sum_cachedBytes_DESC'
  /** sum(cachedRequests) ascending */
  | 'sum_cachedRequests_ASC'
  /** sum(cachedRequests) descending */
  | 'sum_cachedRequests_DESC'
  /** sum(encryptedBytes) ascending */
  | 'sum_encryptedBytes_ASC'
  /** sum(encryptedBytes) descending */
  | 'sum_encryptedBytes_DESC'
  /** sum(encryptedRequests) ascending */
  | 'sum_encryptedRequests_ASC'
  /** sum(encryptedRequests) descending */
  | 'sum_encryptedRequests_DESC'
  /** sum(pageViews) ascending */
  | 'sum_pageViews_ASC'
  /** sum(pageViews) descending */
  | 'sum_pageViews_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(threats) ascending */
  | 'sum_threats_ASC'
  /** sum(threats) descending */
  | 'sum_threats_DESC'
  /** uniq(uniques) ascending */
  | 'uniq_uniques_ASC'
  /** uniq(uniques) descending */
  | 'uniq_uniques_DESC';

interface ZoneHttpRequests1mByColoGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneHttpRequests1mByColoGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneHttpRequests1mByColoGroupsFilter_InputObject[]>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
}

type ZoneHttpRequests1mByColoGroupsOrderBy =
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** sum(bytes) ascending */
  | 'sum_bytes_ASC'
  /** sum(bytes) descending */
  | 'sum_bytes_DESC'
  /** sum(cachedBytes) ascending */
  | 'sum_cachedBytes_ASC'
  /** sum(cachedBytes) descending */
  | 'sum_cachedBytes_DESC'
  /** sum(cachedRequests) ascending */
  | 'sum_cachedRequests_ASC'
  /** sum(cachedRequests) descending */
  | 'sum_cachedRequests_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC';

interface ZoneHttpRequests1mGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneHttpRequests1mGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneHttpRequests1mGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeDay: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeDay_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
}

type ZoneHttpRequests1mGroupsOrderBy =
  /** avg(bytes) ascending */
  | 'avg_bytes_ASC'
  /** avg(bytes) descending */
  | 'avg_bytes_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeDay ascending */
  | 'datetimeDay_ASC'
  /** datetimeDay descending */
  | 'datetimeDay_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** sum(bytes) ascending */
  | 'sum_bytes_ASC'
  /** sum(bytes) descending */
  | 'sum_bytes_DESC'
  /** sum(cachedBytes) ascending */
  | 'sum_cachedBytes_ASC'
  /** sum(cachedBytes) descending */
  | 'sum_cachedBytes_DESC'
  /** sum(cachedRequests) ascending */
  | 'sum_cachedRequests_ASC'
  /** sum(cachedRequests) descending */
  | 'sum_cachedRequests_DESC'
  /** sum(encryptedBytes) ascending */
  | 'sum_encryptedBytes_ASC'
  /** sum(encryptedBytes) descending */
  | 'sum_encryptedBytes_DESC'
  /** sum(encryptedRequests) ascending */
  | 'sum_encryptedRequests_ASC'
  /** sum(encryptedRequests) descending */
  | 'sum_encryptedRequests_DESC'
  /** sum(pageViews) ascending */
  | 'sum_pageViews_ASC'
  /** sum(pageViews) descending */
  | 'sum_pageViews_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(threats) ascending */
  | 'sum_threats_ASC'
  /** sum(threats) descending */
  | 'sum_threats_DESC'
  /** uniq(uniques) ascending */
  | 'uniq_uniques_ASC'
  /** uniq(uniques) descending */
  | 'uniq_uniques_DESC';

interface ZoneHttpRequestsAdaptiveFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneHttpRequestsAdaptiveFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneHttpRequestsAdaptiveFilter_InputObject[]>;
    readonly apiGatewayMatchedEndpoint: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_geq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_gt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_in: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_leq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_like: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_lt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_neq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_notlike: InputMaybe<Scalars['string']>;
    readonly botManagementDecision: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_geq: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_gt: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_in: InputMaybe<readonly Scalars['string'][]>;
    readonly botManagementDecision_leq: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_like: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_lt: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_neq: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly botManagementDecision_notlike: InputMaybe<Scalars['string']>;
    readonly botScore: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10_geq: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10_gt: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10_in: InputMaybe<Scalars['bytes']>;
    readonly botScoreBucketBy10_leq: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10_lt: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10_neq: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10_notin: InputMaybe<Scalars['bytes']>;
    readonly botScoreSrcName: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_geq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_gt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_leq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_like: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_lt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_neq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_notlike: InputMaybe<Scalars['string']>;
    readonly botScore_geq: InputMaybe<Scalars['uint8']>;
    readonly botScore_gt: InputMaybe<Scalars['uint8']>;
    readonly botScore_in: InputMaybe<Scalars['bytes']>;
    readonly botScore_leq: InputMaybe<Scalars['uint8']>;
    readonly botScore_lt: InputMaybe<Scalars['uint8']>;
    readonly botScore_neq: InputMaybe<Scalars['uint8']>;
    readonly botScore_notin: InputMaybe<Scalars['bytes']>;
    readonly cacheStatus: InputMaybe<Scalars['uint64']>;
    readonly cacheStatus_geq: InputMaybe<Scalars['uint64']>;
    readonly cacheStatus_gt: InputMaybe<Scalars['uint64']>;
    readonly cacheStatus_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly cacheStatus_leq: InputMaybe<Scalars['uint64']>;
    readonly cacheStatus_lt: InputMaybe<Scalars['uint64']>;
    readonly cacheStatus_neq: InputMaybe<Scalars['uint64']>;
    readonly cacheStatus_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly clientASNDescription: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_like: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly clientAsn: InputMaybe<Scalars['string']>;
    readonly clientAsn_geq: InputMaybe<Scalars['string']>;
    readonly clientAsn_gt: InputMaybe<Scalars['string']>;
    readonly clientAsn_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_leq: InputMaybe<Scalars['string']>;
    readonly clientAsn_like: InputMaybe<Scalars['string']>;
    readonly clientAsn_lt: InputMaybe<Scalars['string']>;
    readonly clientAsn_neq: InputMaybe<Scalars['string']>;
    readonly clientAsn_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_notlike: InputMaybe<Scalars['string']>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly clientDeviceType: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_geq: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_gt: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientDeviceType_leq: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_like: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_lt: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_neq: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientDeviceType_notlike: InputMaybe<Scalars['string']>;
    readonly clientIP: InputMaybe<Scalars['string']>;
    readonly clientIP_geq: InputMaybe<Scalars['string']>;
    readonly clientIP_gt: InputMaybe<Scalars['string']>;
    readonly clientIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_leq: InputMaybe<Scalars['string']>;
    readonly clientIP_like: InputMaybe<Scalars['string']>;
    readonly clientIP_lt: InputMaybe<Scalars['string']>;
    readonly clientIP_neq: InputMaybe<Scalars['string']>;
    readonly clientIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererHost: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_like: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestPath: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_like: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_like: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestReferer_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_like: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestReferer_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_like: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_notlike: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientSSLProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientSSLProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly contentScanHasFailed: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_geq: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_gt: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_in: InputMaybe<Scalars['bytes']>;
    readonly contentScanHasFailed_leq: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_lt: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_neq: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_notin: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumMaliciousObj: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_geq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_gt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_in: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumMaliciousObj_leq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_lt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_neq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_notin: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumObj: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_geq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_gt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_in: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumObj_leq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_lt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_neq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_notin: InputMaybe<Scalars['bytes']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly edgeResponseContentTypeName: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_geq: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_gt: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeResponseContentTypeName_leq: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_like: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_lt: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_neq: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeResponseContentTypeName_notlike: InputMaybe<Scalars['string']>;
    readonly edgeResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly edgeResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly httpApplication: InputMaybe<Scalars['string']>;
    readonly httpApplicationVersion: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_geq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_gt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplicationVersion_leq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_lt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_neq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplication_geq: InputMaybe<Scalars['string']>;
    readonly httpApplication_gt: InputMaybe<Scalars['string']>;
    readonly httpApplication_in: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_leq: InputMaybe<Scalars['string']>;
    readonly httpApplication_like: InputMaybe<Scalars['string']>;
    readonly httpApplication_lt: InputMaybe<Scalars['string']>;
    readonly httpApplication_neq: InputMaybe<Scalars['string']>;
    readonly httpApplication_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_notlike: InputMaybe<Scalars['string']>;
    readonly ja3Hash: InputMaybe<Scalars['string']>;
    readonly ja3Hash_geq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_gt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_leq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_like: InputMaybe<Scalars['string']>;
    readonly ja3Hash_lt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_neq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_notlike: InputMaybe<Scalars['string']>;
    readonly originASN: InputMaybe<Scalars['uint32']>;
    readonly originASNDescription: InputMaybe<Scalars['string']>;
    readonly originASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly originASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly originASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly originASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly originASNDescription_like: InputMaybe<Scalars['string']>;
    readonly originASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly originASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly originASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly originASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly originASN_geq: InputMaybe<Scalars['uint32']>;
    readonly originASN_gt: InputMaybe<Scalars['uint32']>;
    readonly originASN_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly originASN_leq: InputMaybe<Scalars['uint32']>;
    readonly originASN_lt: InputMaybe<Scalars['uint32']>;
    readonly originASN_neq: InputMaybe<Scalars['uint32']>;
    readonly originASN_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly originIP: InputMaybe<Scalars['string']>;
    readonly originIP_geq: InputMaybe<Scalars['string']>;
    readonly originIP_gt: InputMaybe<Scalars['string']>;
    readonly originIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly originIP_leq: InputMaybe<Scalars['string']>;
    readonly originIP_like: InputMaybe<Scalars['string']>;
    readonly originIP_lt: InputMaybe<Scalars['string']>;
    readonly originIP_neq: InputMaybe<Scalars['string']>;
    readonly originIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly originIP_notlike: InputMaybe<Scalars['string']>;
    readonly originResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly rayName: InputMaybe<Scalars['string']>;
    readonly rayName_geq: InputMaybe<Scalars['string']>;
    readonly rayName_gt: InputMaybe<Scalars['string']>;
    readonly rayName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly rayName_leq: InputMaybe<Scalars['string']>;
    readonly rayName_like: InputMaybe<Scalars['string']>;
    readonly rayName_lt: InputMaybe<Scalars['string']>;
    readonly rayName_neq: InputMaybe<Scalars['string']>;
    readonly rayName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly rayName_notlike: InputMaybe<Scalars['string']>;
    readonly requestSource: InputMaybe<Scalars['string']>;
    readonly requestSource_geq: InputMaybe<Scalars['string']>;
    readonly requestSource_gt: InputMaybe<Scalars['string']>;
    readonly requestSource_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestSource_leq: InputMaybe<Scalars['string']>;
    readonly requestSource_like: InputMaybe<Scalars['string']>;
    readonly requestSource_lt: InputMaybe<Scalars['string']>;
    readonly requestSource_neq: InputMaybe<Scalars['string']>;
    readonly requestSource_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestSource_notlike: InputMaybe<Scalars['string']>;
    readonly upperTierColoName: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_geq: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_gt: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly upperTierColoName_leq: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_like: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_lt: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_neq: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly upperTierColoName_notlike: InputMaybe<Scalars['string']>;
    readonly userAgent: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_geq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_gt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_leq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_like: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_lt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_neq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_notlike: InputMaybe<Scalars['string']>;
    readonly userAgentOS: InputMaybe<Scalars['string']>;
    readonly userAgentOS_geq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_gt: InputMaybe<Scalars['string']>;
    readonly userAgentOS_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentOS_leq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_like: InputMaybe<Scalars['string']>;
    readonly userAgentOS_lt: InputMaybe<Scalars['string']>;
    readonly userAgentOS_neq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentOS_notlike: InputMaybe<Scalars['string']>;
    readonly userAgent_geq: InputMaybe<Scalars['string']>;
    readonly userAgent_gt: InputMaybe<Scalars['string']>;
    readonly userAgent_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_leq: InputMaybe<Scalars['string']>;
    readonly userAgent_like: InputMaybe<Scalars['string']>;
    readonly userAgent_lt: InputMaybe<Scalars['string']>;
    readonly userAgent_neq: InputMaybe<Scalars['string']>;
    readonly userAgent_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_notlike: InputMaybe<Scalars['string']>;
    readonly wafAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly xRequestedWith: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_geq: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_gt: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_in: InputMaybe<readonly Scalars['string'][]>;
    readonly xRequestedWith_leq: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_like: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_lt: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_neq: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly xRequestedWith_notlike: InputMaybe<Scalars['string']>;
}

interface ZoneHttpRequestsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneHttpRequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneHttpRequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly apiGatewayMatchedEndpoint: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_geq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_gt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_in: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_leq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_like: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_lt: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_neq: InputMaybe<Scalars['string']>;
    readonly apiGatewayMatchedEndpoint_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly apiGatewayMatchedEndpoint_notlike: InputMaybe<Scalars['string']>;
    readonly botManagementDecision: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_geq: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_gt: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_in: InputMaybe<readonly Scalars['string'][]>;
    readonly botManagementDecision_leq: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_like: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_lt: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_neq: InputMaybe<Scalars['string']>;
    readonly botManagementDecision_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly botManagementDecision_notlike: InputMaybe<Scalars['string']>;
    readonly botScore: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10_geq: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10_gt: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10_in: InputMaybe<Scalars['bytes']>;
    readonly botScoreBucketBy10_leq: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10_lt: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10_neq: InputMaybe<Scalars['uint8']>;
    readonly botScoreBucketBy10_notin: InputMaybe<Scalars['bytes']>;
    readonly botScoreSrcName: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_geq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_gt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_leq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_like: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_lt: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_neq: InputMaybe<Scalars['string']>;
    readonly botScoreSrcName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly botScoreSrcName_notlike: InputMaybe<Scalars['string']>;
    readonly botScore_geq: InputMaybe<Scalars['uint8']>;
    readonly botScore_gt: InputMaybe<Scalars['uint8']>;
    readonly botScore_in: InputMaybe<Scalars['bytes']>;
    readonly botScore_leq: InputMaybe<Scalars['uint8']>;
    readonly botScore_lt: InputMaybe<Scalars['uint8']>;
    readonly botScore_neq: InputMaybe<Scalars['uint8']>;
    readonly botScore_notin: InputMaybe<Scalars['bytes']>;
    readonly cacheStatus: InputMaybe<Scalars['string']>;
    readonly cacheStatus_geq: InputMaybe<Scalars['string']>;
    readonly cacheStatus_gt: InputMaybe<Scalars['string']>;
    readonly cacheStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly cacheStatus_leq: InputMaybe<Scalars['string']>;
    readonly cacheStatus_like: InputMaybe<Scalars['string']>;
    readonly cacheStatus_lt: InputMaybe<Scalars['string']>;
    readonly cacheStatus_neq: InputMaybe<Scalars['string']>;
    readonly cacheStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly cacheStatus_notlike: InputMaybe<Scalars['string']>;
    readonly clientASNDescription: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_like: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly clientASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly clientAsn: InputMaybe<Scalars['string']>;
    readonly clientAsn_geq: InputMaybe<Scalars['string']>;
    readonly clientAsn_gt: InputMaybe<Scalars['string']>;
    readonly clientAsn_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_leq: InputMaybe<Scalars['string']>;
    readonly clientAsn_like: InputMaybe<Scalars['string']>;
    readonly clientAsn_lt: InputMaybe<Scalars['string']>;
    readonly clientAsn_neq: InputMaybe<Scalars['string']>;
    readonly clientAsn_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientAsn_notlike: InputMaybe<Scalars['string']>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly clientDeviceType: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_geq: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_gt: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientDeviceType_leq: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_like: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_lt: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_neq: InputMaybe<Scalars['string']>;
    readonly clientDeviceType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientDeviceType_notlike: InputMaybe<Scalars['string']>;
    readonly clientIP: InputMaybe<Scalars['string']>;
    readonly clientIP_geq: InputMaybe<Scalars['string']>;
    readonly clientIP_gt: InputMaybe<Scalars['string']>;
    readonly clientIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_leq: InputMaybe<Scalars['string']>;
    readonly clientIP_like: InputMaybe<Scalars['string']>;
    readonly clientIP_lt: InputMaybe<Scalars['string']>;
    readonly clientIP_neq: InputMaybe<Scalars['string']>;
    readonly clientIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIP_notlike: InputMaybe<Scalars['string']>;
    readonly clientRefererHost: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_like: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRefererHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRefererHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPHost_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPHost_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPMethodName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPMethodName_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestPath: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_like: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestPath_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_like: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestQuery_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestQuery_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestReferer_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_like: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestReferer_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestReferer_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_like: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestScheme_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestScheme_notlike: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientSSLProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientSSLProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly contentScanHasFailed: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_geq: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_gt: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_in: InputMaybe<Scalars['bytes']>;
    readonly contentScanHasFailed_leq: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_lt: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_neq: InputMaybe<Scalars['uint8']>;
    readonly contentScanHasFailed_notin: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumMaliciousObj: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_geq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_gt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_in: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumMaliciousObj_leq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_lt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_neq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumMaliciousObj_notin: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumObj: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_geq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_gt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_in: InputMaybe<Scalars['bytes']>;
    readonly contentScanNumObj_leq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_lt: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_neq: InputMaybe<Scalars['uint8']>;
    readonly contentScanNumObj_notin: InputMaybe<Scalars['bytes']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly edgeResponseContentTypeName: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_geq: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_gt: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeResponseContentTypeName_leq: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_like: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_lt: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_neq: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeResponseContentTypeName_notlike: InputMaybe<Scalars['string']>;
    readonly edgeResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly edgeResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly httpApplication: InputMaybe<Scalars['string']>;
    readonly httpApplicationVersion: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_geq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_gt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplicationVersion_leq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_lt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_neq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplication_geq: InputMaybe<Scalars['string']>;
    readonly httpApplication_gt: InputMaybe<Scalars['string']>;
    readonly httpApplication_in: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_leq: InputMaybe<Scalars['string']>;
    readonly httpApplication_like: InputMaybe<Scalars['string']>;
    readonly httpApplication_lt: InputMaybe<Scalars['string']>;
    readonly httpApplication_neq: InputMaybe<Scalars['string']>;
    readonly httpApplication_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_notlike: InputMaybe<Scalars['string']>;
    readonly ja3Hash: InputMaybe<Scalars['string']>;
    readonly ja3Hash_geq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_gt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_in: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_leq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_like: InputMaybe<Scalars['string']>;
    readonly ja3Hash_lt: InputMaybe<Scalars['string']>;
    readonly ja3Hash_neq: InputMaybe<Scalars['string']>;
    readonly ja3Hash_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly ja3Hash_notlike: InputMaybe<Scalars['string']>;
    readonly originASN: InputMaybe<Scalars['uint32']>;
    readonly originASNDescription: InputMaybe<Scalars['string']>;
    readonly originASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly originASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly originASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly originASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly originASNDescription_like: InputMaybe<Scalars['string']>;
    readonly originASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly originASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly originASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly originASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly originASN_geq: InputMaybe<Scalars['uint32']>;
    readonly originASN_gt: InputMaybe<Scalars['uint32']>;
    readonly originASN_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly originASN_leq: InputMaybe<Scalars['uint32']>;
    readonly originASN_lt: InputMaybe<Scalars['uint32']>;
    readonly originASN_neq: InputMaybe<Scalars['uint32']>;
    readonly originASN_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly originIP: InputMaybe<Scalars['string']>;
    readonly originIP_geq: InputMaybe<Scalars['string']>;
    readonly originIP_gt: InputMaybe<Scalars['string']>;
    readonly originIP_in: InputMaybe<readonly Scalars['string'][]>;
    readonly originIP_leq: InputMaybe<Scalars['string']>;
    readonly originIP_like: InputMaybe<Scalars['string']>;
    readonly originIP_lt: InputMaybe<Scalars['string']>;
    readonly originIP_neq: InputMaybe<Scalars['string']>;
    readonly originIP_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly originIP_notlike: InputMaybe<Scalars['string']>;
    readonly originResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly originResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly originResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly requestSource: InputMaybe<Scalars['string']>;
    readonly requestSource_geq: InputMaybe<Scalars['string']>;
    readonly requestSource_gt: InputMaybe<Scalars['string']>;
    readonly requestSource_in: InputMaybe<readonly Scalars['string'][]>;
    readonly requestSource_leq: InputMaybe<Scalars['string']>;
    readonly requestSource_like: InputMaybe<Scalars['string']>;
    readonly requestSource_lt: InputMaybe<Scalars['string']>;
    readonly requestSource_neq: InputMaybe<Scalars['string']>;
    readonly requestSource_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly requestSource_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly upperTierColoName: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_geq: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_gt: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly upperTierColoName_leq: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_like: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_lt: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_neq: InputMaybe<Scalars['string']>;
    readonly upperTierColoName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly upperTierColoName_notlike: InputMaybe<Scalars['string']>;
    readonly userAgent: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_geq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_gt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_leq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_like: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_lt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_neq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_notlike: InputMaybe<Scalars['string']>;
    readonly userAgentOS: InputMaybe<Scalars['string']>;
    readonly userAgentOS_geq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_gt: InputMaybe<Scalars['string']>;
    readonly userAgentOS_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentOS_leq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_like: InputMaybe<Scalars['string']>;
    readonly userAgentOS_lt: InputMaybe<Scalars['string']>;
    readonly userAgentOS_neq: InputMaybe<Scalars['string']>;
    readonly userAgentOS_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentOS_notlike: InputMaybe<Scalars['string']>;
    readonly userAgent_geq: InputMaybe<Scalars['string']>;
    readonly userAgent_gt: InputMaybe<Scalars['string']>;
    readonly userAgent_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_leq: InputMaybe<Scalars['string']>;
    readonly userAgent_like: InputMaybe<Scalars['string']>;
    readonly userAgent_lt: InputMaybe<Scalars['string']>;
    readonly userAgent_neq: InputMaybe<Scalars['string']>;
    readonly userAgent_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgent_notlike: InputMaybe<Scalars['string']>;
    readonly wafAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafRceAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafRceAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafSqliAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafSqliAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_geq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_gt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_in: InputMaybe<Scalars['bytes']>;
    readonly wafXssAttackScore_leq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_lt: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_neq: InputMaybe<Scalars['uint8']>;
    readonly wafXssAttackScore_notin: InputMaybe<Scalars['bytes']>;
    readonly xRequestedWith: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_geq: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_gt: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_in: InputMaybe<readonly Scalars['string'][]>;
    readonly xRequestedWith_leq: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_like: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_lt: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_neq: InputMaybe<Scalars['string']>;
    readonly xRequestedWith_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly xRequestedWith_notlike: InputMaybe<Scalars['string']>;
}

type ZoneHttpRequestsAdaptiveGroupsOrderBy =
  /** apiGatewayMatchedEndpoint ascending */
  | 'apiGatewayMatchedEndpoint_ASC'
  /** apiGatewayMatchedEndpoint descending */
  | 'apiGatewayMatchedEndpoint_DESC'
  /** avg(originResponseDurationMs) ascending */
  | 'avg_originResponseDurationMs_ASC'
  /** avg(originResponseDurationMs) descending */
  | 'avg_originResponseDurationMs_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** botManagementDecision ascending */
  | 'botManagementDecision_ASC'
  /** botManagementDecision descending */
  | 'botManagementDecision_DESC'
  /** botScoreBucketBy10 ascending */
  | 'botScoreBucketBy10_ASC'
  /** botScoreBucketBy10 descending */
  | 'botScoreBucketBy10_DESC'
  /** botScoreSrcName ascending */
  | 'botScoreSrcName_ASC'
  /** botScoreSrcName descending */
  | 'botScoreSrcName_DESC'
  /** botScore ascending */
  | 'botScore_ASC'
  /** botScore descending */
  | 'botScore_DESC'
  /** cacheStatus ascending */
  | 'cacheStatus_ASC'
  /** cacheStatus descending */
  | 'cacheStatus_DESC'
  /** clientASNDescription ascending */
  | 'clientASNDescription_ASC'
  /** clientASNDescription descending */
  | 'clientASNDescription_DESC'
  /** clientAsn ascending */
  | 'clientAsn_ASC'
  /** clientAsn descending */
  | 'clientAsn_DESC'
  /** clientCountryName ascending */
  | 'clientCountryName_ASC'
  /** clientCountryName descending */
  | 'clientCountryName_DESC'
  /** clientDeviceType ascending */
  | 'clientDeviceType_ASC'
  /** clientDeviceType descending */
  | 'clientDeviceType_DESC'
  /** clientIP ascending */
  | 'clientIP_ASC'
  /** clientIP descending */
  | 'clientIP_DESC'
  /** clientRefererHost ascending */
  | 'clientRefererHost_ASC'
  /** clientRefererHost descending */
  | 'clientRefererHost_DESC'
  /** clientRequestHTTPHost ascending */
  | 'clientRequestHTTPHost_ASC'
  /** clientRequestHTTPHost descending */
  | 'clientRequestHTTPHost_DESC'
  /** clientRequestHTTPMethodName ascending */
  | 'clientRequestHTTPMethodName_ASC'
  /** clientRequestHTTPMethodName descending */
  | 'clientRequestHTTPMethodName_DESC'
  /** clientRequestHTTPProtocol ascending */
  | 'clientRequestHTTPProtocol_ASC'
  /** clientRequestHTTPProtocol descending */
  | 'clientRequestHTTPProtocol_DESC'
  /** clientRequestPath ascending */
  | 'clientRequestPath_ASC'
  /** clientRequestPath descending */
  | 'clientRequestPath_DESC'
  /** clientRequestQuery ascending */
  | 'clientRequestQuery_ASC'
  /** clientRequestQuery descending */
  | 'clientRequestQuery_DESC'
  /** clientRequestReferer ascending */
  | 'clientRequestReferer_ASC'
  /** clientRequestReferer descending */
  | 'clientRequestReferer_DESC'
  /** clientRequestScheme ascending */
  | 'clientRequestScheme_ASC'
  /** clientRequestScheme descending */
  | 'clientRequestScheme_DESC'
  /** clientSSLProtocol ascending */
  | 'clientSSLProtocol_ASC'
  /** clientSSLProtocol descending */
  | 'clientSSLProtocol_DESC'
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** contentScanHasFailed ascending */
  | 'contentScanHasFailed_ASC'
  /** contentScanHasFailed descending */
  | 'contentScanHasFailed_DESC'
  /** contentScanNumMaliciousObj ascending */
  | 'contentScanNumMaliciousObj_ASC'
  /** contentScanNumMaliciousObj descending */
  | 'contentScanNumMaliciousObj_DESC'
  /** contentScanNumObj ascending */
  | 'contentScanNumObj_ASC'
  /** contentScanNumObj descending */
  | 'contentScanNumObj_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** edgeResponseContentTypeName ascending */
  | 'edgeResponseContentTypeName_ASC'
  /** edgeResponseContentTypeName descending */
  | 'edgeResponseContentTypeName_DESC'
  /** edgeResponseStatus ascending */
  | 'edgeResponseStatus_ASC'
  /** edgeResponseStatus descending */
  | 'edgeResponseStatus_DESC'
  /** httpApplicationVersion ascending */
  | 'httpApplicationVersion_ASC'
  /** httpApplicationVersion descending */
  | 'httpApplicationVersion_DESC'
  /** httpApplication ascending */
  | 'httpApplication_ASC'
  /** httpApplication descending */
  | 'httpApplication_DESC'
  /** ja3Hash ascending */
  | 'ja3Hash_ASC'
  /** ja3Hash descending */
  | 'ja3Hash_DESC'
  /** originASNDescription ascending */
  | 'originASNDescription_ASC'
  /** originASNDescription descending */
  | 'originASNDescription_DESC'
  /** originASN ascending */
  | 'originASN_ASC'
  /** originASN descending */
  | 'originASN_DESC'
  /** originIP ascending */
  | 'originIP_ASC'
  /** originIP descending */
  | 'originIP_DESC'
  /** originResponseStatus ascending */
  | 'originResponseStatus_ASC'
  /** originResponseStatus descending */
  | 'originResponseStatus_DESC'
  /** ratio(status4xx) ascending */
  | 'ratio_status4xx_ASC'
  /** ratio(status4xx) descending */
  | 'ratio_status4xx_DESC'
  /** ratio(status5xx) ascending */
  | 'ratio_status5xx_ASC'
  /** ratio(status5xx) descending */
  | 'ratio_status5xx_DESC'
  /** requestSource ascending */
  | 'requestSource_ASC'
  /** requestSource descending */
  | 'requestSource_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** sum(edgeResponseBytes) ascending */
  | 'sum_edgeResponseBytes_ASC'
  /** sum(edgeResponseBytes) descending */
  | 'sum_edgeResponseBytes_DESC'
  /** sum(visits) ascending */
  | 'sum_visits_ASC'
  /** sum(visits) descending */
  | 'sum_visits_DESC'
  /** upperTierColoName ascending */
  | 'upperTierColoName_ASC'
  /** upperTierColoName descending */
  | 'upperTierColoName_DESC'
  /** userAgentBrowser ascending */
  | 'userAgentBrowser_ASC'
  /** userAgentBrowser descending */
  | 'userAgentBrowser_DESC'
  /** userAgentOS ascending */
  | 'userAgentOS_ASC'
  /** userAgentOS descending */
  | 'userAgentOS_DESC'
  /** userAgent ascending */
  | 'userAgent_ASC'
  /** userAgent descending */
  | 'userAgent_DESC'
  /** wafAttackScore ascending */
  | 'wafAttackScore_ASC'
  /** wafAttackScore descending */
  | 'wafAttackScore_DESC'
  /** wafRceAttackScore ascending */
  | 'wafRceAttackScore_ASC'
  /** wafRceAttackScore descending */
  | 'wafRceAttackScore_DESC'
  /** wafSqliAttackScore ascending */
  | 'wafSqliAttackScore_ASC'
  /** wafSqliAttackScore descending */
  | 'wafSqliAttackScore_DESC'
  /** wafXssAttackScore ascending */
  | 'wafXssAttackScore_ASC'
  /** wafXssAttackScore descending */
  | 'wafXssAttackScore_DESC'
  /** xRequestedWith ascending */
  | 'xRequestedWith_ASC'
  /** xRequestedWith descending */
  | 'xRequestedWith_DESC';

type ZoneHttpRequestsAdaptiveOrderBy =
  /** apiGatewayMatchedEndpoint ascending */
  | 'apiGatewayMatchedEndpoint_ASC'
  /** apiGatewayMatchedEndpoint descending */
  | 'apiGatewayMatchedEndpoint_DESC'
  /** botManagementDecision ascending */
  | 'botManagementDecision_ASC'
  /** botManagementDecision descending */
  | 'botManagementDecision_DESC'
  /** botScoreBucketBy10 ascending */
  | 'botScoreBucketBy10_ASC'
  /** botScoreBucketBy10 descending */
  | 'botScoreBucketBy10_DESC'
  /** botScoreSrcName ascending */
  | 'botScoreSrcName_ASC'
  /** botScoreSrcName descending */
  | 'botScoreSrcName_DESC'
  /** botScore ascending */
  | 'botScore_ASC'
  /** botScore descending */
  | 'botScore_DESC'
  /** cacheStatus ascending */
  | 'cacheStatus_ASC'
  /** cacheStatus descending */
  | 'cacheStatus_DESC'
  /** clientASNDescription ascending */
  | 'clientASNDescription_ASC'
  /** clientASNDescription descending */
  | 'clientASNDescription_DESC'
  /** clientAsn ascending */
  | 'clientAsn_ASC'
  /** clientAsn descending */
  | 'clientAsn_DESC'
  /** clientCountryName ascending */
  | 'clientCountryName_ASC'
  /** clientCountryName descending */
  | 'clientCountryName_DESC'
  /** clientDeviceType ascending */
  | 'clientDeviceType_ASC'
  /** clientDeviceType descending */
  | 'clientDeviceType_DESC'
  /** clientIP ascending */
  | 'clientIP_ASC'
  /** clientIP descending */
  | 'clientIP_DESC'
  /** clientRefererHost ascending */
  | 'clientRefererHost_ASC'
  /** clientRefererHost descending */
  | 'clientRefererHost_DESC'
  /** clientRequestHTTPHost ascending */
  | 'clientRequestHTTPHost_ASC'
  /** clientRequestHTTPHost descending */
  | 'clientRequestHTTPHost_DESC'
  /** clientRequestHTTPMethodName ascending */
  | 'clientRequestHTTPMethodName_ASC'
  /** clientRequestHTTPMethodName descending */
  | 'clientRequestHTTPMethodName_DESC'
  /** clientRequestHTTPProtocol ascending */
  | 'clientRequestHTTPProtocol_ASC'
  /** clientRequestHTTPProtocol descending */
  | 'clientRequestHTTPProtocol_DESC'
  /** clientRequestPath ascending */
  | 'clientRequestPath_ASC'
  /** clientRequestPath descending */
  | 'clientRequestPath_DESC'
  /** clientRequestQuery ascending */
  | 'clientRequestQuery_ASC'
  /** clientRequestQuery descending */
  | 'clientRequestQuery_DESC'
  /** clientRequestReferer ascending */
  | 'clientRequestReferer_ASC'
  /** clientRequestReferer descending */
  | 'clientRequestReferer_DESC'
  /** clientRequestScheme ascending */
  | 'clientRequestScheme_ASC'
  /** clientRequestScheme descending */
  | 'clientRequestScheme_DESC'
  /** clientSSLProtocol ascending */
  | 'clientSSLProtocol_ASC'
  /** clientSSLProtocol descending */
  | 'clientSSLProtocol_DESC'
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** contentScanHasFailed ascending */
  | 'contentScanHasFailed_ASC'
  /** contentScanHasFailed descending */
  | 'contentScanHasFailed_DESC'
  /** contentScanNumMaliciousObj ascending */
  | 'contentScanNumMaliciousObj_ASC'
  /** contentScanNumMaliciousObj descending */
  | 'contentScanNumMaliciousObj_DESC'
  /** contentScanNumObj ascending */
  | 'contentScanNumObj_ASC'
  /** contentScanNumObj descending */
  | 'contentScanNumObj_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** edgeResponseContentTypeName ascending */
  | 'edgeResponseContentTypeName_ASC'
  /** edgeResponseContentTypeName descending */
  | 'edgeResponseContentTypeName_DESC'
  /** edgeResponseStatus ascending */
  | 'edgeResponseStatus_ASC'
  /** edgeResponseStatus descending */
  | 'edgeResponseStatus_DESC'
  /** httpApplicationVersion ascending */
  | 'httpApplicationVersion_ASC'
  /** httpApplicationVersion descending */
  | 'httpApplicationVersion_DESC'
  /** httpApplication ascending */
  | 'httpApplication_ASC'
  /** httpApplication descending */
  | 'httpApplication_DESC'
  /** ja3Hash ascending */
  | 'ja3Hash_ASC'
  /** ja3Hash descending */
  | 'ja3Hash_DESC'
  /** originASNDescription ascending */
  | 'originASNDescription_ASC'
  /** originASNDescription descending */
  | 'originASNDescription_DESC'
  /** originASN ascending */
  | 'originASN_ASC'
  /** originASN descending */
  | 'originASN_DESC'
  /** originIP ascending */
  | 'originIP_ASC'
  /** originIP descending */
  | 'originIP_DESC'
  /** originResponseStatus ascending */
  | 'originResponseStatus_ASC'
  /** originResponseStatus descending */
  | 'originResponseStatus_DESC'
  /** rayName ascending */
  | 'rayName_ASC'
  /** rayName descending */
  | 'rayName_DESC'
  /** requestSource ascending */
  | 'requestSource_ASC'
  /** requestSource descending */
  | 'requestSource_DESC'
  /** upperTierColoName ascending */
  | 'upperTierColoName_ASC'
  /** upperTierColoName descending */
  | 'upperTierColoName_DESC'
  /** userAgentBrowser ascending */
  | 'userAgentBrowser_ASC'
  /** userAgentBrowser descending */
  | 'userAgentBrowser_DESC'
  /** userAgentOS ascending */
  | 'userAgentOS_ASC'
  /** userAgentOS descending */
  | 'userAgentOS_DESC'
  /** userAgent ascending */
  | 'userAgent_ASC'
  /** userAgent descending */
  | 'userAgent_DESC'
  /** wafAttackScore ascending */
  | 'wafAttackScore_ASC'
  /** wafAttackScore descending */
  | 'wafAttackScore_DESC'
  /** wafRceAttackScore ascending */
  | 'wafRceAttackScore_ASC'
  /** wafRceAttackScore descending */
  | 'wafRceAttackScore_DESC'
  /** wafSqliAttackScore ascending */
  | 'wafSqliAttackScore_ASC'
  /** wafSqliAttackScore descending */
  | 'wafSqliAttackScore_DESC'
  /** wafXssAttackScore ascending */
  | 'wafXssAttackScore_ASC'
  /** wafXssAttackScore descending */
  | 'wafXssAttackScore_DESC'
  /** xRequestedWith ascending */
  | 'xRequestedWith_ASC'
  /** xRequestedWith descending */
  | 'xRequestedWith_DESC';

interface ZoneHttpRequestsOverviewAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneHttpRequestsOverviewAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneHttpRequestsOverviewAdaptiveGroupsFilter_InputObject[]>;
    readonly clientCountryName: InputMaybe<Scalars['string']>;
    readonly clientCountryName_geq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_gt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_leq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_like: InputMaybe<Scalars['string']>;
    readonly clientCountryName_lt: InputMaybe<Scalars['string']>;
    readonly clientCountryName_neq: InputMaybe<Scalars['string']>;
    readonly clientCountryName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientCountryName_notlike: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientRequestHTTPProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientRequestHTTPProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_geq: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_gt: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientSSLProtocol_leq: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_like: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_lt: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_neq: InputMaybe<Scalars['string']>;
    readonly clientSSLProtocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientSSLProtocol_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly edgeResponseContentTypeName: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_geq: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_gt: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeResponseContentTypeName_leq: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_like: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_lt: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_neq: InputMaybe<Scalars['string']>;
    readonly edgeResponseContentTypeName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly edgeResponseContentTypeName_notlike: InputMaybe<Scalars['string']>;
    readonly edgeResponseStatus: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_geq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_gt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly edgeResponseStatus_leq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_lt: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_neq: InputMaybe<Scalars['uint16']>;
    readonly edgeResponseStatus_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly httpApplication: InputMaybe<Scalars['string']>;
    readonly httpApplicationVersion: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_geq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_gt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplicationVersion_leq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_lt: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_neq: InputMaybe<Scalars['uint64']>;
    readonly httpApplicationVersion_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly httpApplication_geq: InputMaybe<Scalars['string']>;
    readonly httpApplication_gt: InputMaybe<Scalars['string']>;
    readonly httpApplication_in: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_leq: InputMaybe<Scalars['string']>;
    readonly httpApplication_like: InputMaybe<Scalars['string']>;
    readonly httpApplication_lt: InputMaybe<Scalars['string']>;
    readonly httpApplication_neq: InputMaybe<Scalars['string']>;
    readonly httpApplication_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly httpApplication_notlike: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_geq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_gt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_in: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_leq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_like: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_lt: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_neq: InputMaybe<Scalars['string']>;
    readonly userAgentBrowser_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly userAgentBrowser_notlike: InputMaybe<Scalars['string']>;
}

type ZoneHttpRequestsOverviewAdaptiveGroupsOrderBy =
  /** avg(originResponseDurationMs) ascending */
  | 'avg_originResponseDurationMs_ASC'
  /** avg(originResponseDurationMs) descending */
  | 'avg_originResponseDurationMs_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** clientCountryName ascending */
  | 'clientCountryName_ASC'
  /** clientCountryName descending */
  | 'clientCountryName_DESC'
  /** clientRequestHTTPProtocol ascending */
  | 'clientRequestHTTPProtocol_ASC'
  /** clientRequestHTTPProtocol descending */
  | 'clientRequestHTTPProtocol_DESC'
  /** clientSSLProtocol ascending */
  | 'clientSSLProtocol_ASC'
  /** clientSSLProtocol descending */
  | 'clientSSLProtocol_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** edgeResponseContentTypeName ascending */
  | 'edgeResponseContentTypeName_ASC'
  /** edgeResponseContentTypeName descending */
  | 'edgeResponseContentTypeName_DESC'
  /** edgeResponseStatus ascending */
  | 'edgeResponseStatus_ASC'
  /** edgeResponseStatus descending */
  | 'edgeResponseStatus_DESC'
  /** httpApplicationVersion ascending */
  | 'httpApplicationVersion_ASC'
  /** httpApplicationVersion descending */
  | 'httpApplicationVersion_DESC'
  /** httpApplication ascending */
  | 'httpApplication_ASC'
  /** httpApplication descending */
  | 'httpApplication_DESC'
  /** ratio(status4xx) ascending */
  | 'ratio_status4xx_ASC'
  /** ratio(status4xx) descending */
  | 'ratio_status4xx_DESC'
  /** ratio(status5xx) ascending */
  | 'ratio_status5xx_ASC'
  /** ratio(status5xx) descending */
  | 'ratio_status5xx_DESC'
  /** requestSource ascending */
  | 'requestSource_ASC'
  /** requestSource descending */
  | 'requestSource_DESC'
  /** sum(bytes) ascending */
  | 'sum_bytes_ASC'
  /** sum(bytes) descending */
  | 'sum_bytes_DESC'
  /** sum(cachedBytes) ascending */
  | 'sum_cachedBytes_ASC'
  /** sum(cachedBytes) descending */
  | 'sum_cachedBytes_DESC'
  /** sum(cachedRequests) ascending */
  | 'sum_cachedRequests_ASC'
  /** sum(cachedRequests) descending */
  | 'sum_cachedRequests_DESC'
  /** sum(pageViews) ascending */
  | 'sum_pageViews_ASC'
  /** sum(pageViews) descending */
  | 'sum_pageViews_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(visits) ascending */
  | 'sum_visits_ASC'
  /** sum(visits) descending */
  | 'sum_visits_DESC'
  /** userAgentBrowser ascending */
  | 'userAgentBrowser_ASC'
  /** userAgentBrowser descending */
  | 'userAgentBrowser_DESC';

interface ZoneImageResizingRequests1mGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneImageResizingRequests1mGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneImageResizingRequests1mGroupsFilter_InputObject[]>;
    readonly contentType: InputMaybe<Scalars['string']>;
    readonly contentType_geq: InputMaybe<Scalars['string']>;
    readonly contentType_gt: InputMaybe<Scalars['string']>;
    readonly contentType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly contentType_leq: InputMaybe<Scalars['string']>;
    readonly contentType_like: InputMaybe<Scalars['string']>;
    readonly contentType_lt: InputMaybe<Scalars['string']>;
    readonly contentType_neq: InputMaybe<Scalars['string']>;
    readonly contentType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly contentType_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly resizeError: InputMaybe<Scalars['string']>;
    readonly resizeError_geq: InputMaybe<Scalars['string']>;
    readonly resizeError_gt: InputMaybe<Scalars['string']>;
    readonly resizeError_in: InputMaybe<readonly Scalars['string'][]>;
    readonly resizeError_leq: InputMaybe<Scalars['string']>;
    readonly resizeError_like: InputMaybe<Scalars['string']>;
    readonly resizeError_lt: InputMaybe<Scalars['string']>;
    readonly resizeError_neq: InputMaybe<Scalars['string']>;
    readonly resizeError_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly resizeError_notlike: InputMaybe<Scalars['string']>;
}

type ZoneImageResizingRequests1mGroupsOrderBy =
  /** contentType ascending */
  | 'contentType_ASC'
  /** contentType descending */
  | 'contentType_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** resizeError ascending */
  | 'resizeError_ASC'
  /** resizeError descending */
  | 'resizeError_DESC'
  /** sum(originalBytes) ascending */
  | 'sum_originalBytes_ASC'
  /** sum(originalBytes) descending */
  | 'sum_originalBytes_DESC'
  /** sum(originalPixels) ascending */
  | 'sum_originalPixels_ASC'
  /** sum(originalPixels) descending */
  | 'sum_originalPixels_DESC'
  /** sum(requests) ascending */
  | 'sum_requests_ASC'
  /** sum(requests) descending */
  | 'sum_requests_DESC'
  /** sum(resizedBytes) ascending */
  | 'sum_resizedBytes_ASC'
  /** sum(resizedBytes) descending */
  | 'sum_resizedBytes_DESC'
  /** sum(resizedPixels) ascending */
  | 'sum_resizedPixels_ASC'
  /** sum(resizedPixels) descending */
  | 'sum_resizedPixels_DESC';

interface ZoneLoadBalancingRequestsAdaptiveFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneLoadBalancingRequestsAdaptiveFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneLoadBalancingRequestsAdaptiveFilter_InputObject[]>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly errorType: InputMaybe<Scalars['string']>;
    readonly errorType_geq: InputMaybe<Scalars['string']>;
    readonly errorType_gt: InputMaybe<Scalars['string']>;
    readonly errorType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly errorType_leq: InputMaybe<Scalars['string']>;
    readonly errorType_like: InputMaybe<Scalars['string']>;
    readonly errorType_lt: InputMaybe<Scalars['string']>;
    readonly errorType_neq: InputMaybe<Scalars['string']>;
    readonly errorType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly errorType_notlike: InputMaybe<Scalars['string']>;
    readonly lbName: InputMaybe<Scalars['string']>;
    readonly lbName_geq: InputMaybe<Scalars['string']>;
    readonly lbName_gt: InputMaybe<Scalars['string']>;
    readonly lbName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly lbName_leq: InputMaybe<Scalars['string']>;
    readonly lbName_like: InputMaybe<Scalars['string']>;
    readonly lbName_lt: InputMaybe<Scalars['string']>;
    readonly lbName_neq: InputMaybe<Scalars['string']>;
    readonly lbName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly lbName_notlike: InputMaybe<Scalars['string']>;
    readonly numberOriginsSelected: InputMaybe<Scalars['uint16']>;
    readonly numberOriginsSelected_geq: InputMaybe<Scalars['uint16']>;
    readonly numberOriginsSelected_gt: InputMaybe<Scalars['uint16']>;
    readonly numberOriginsSelected_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly numberOriginsSelected_leq: InputMaybe<Scalars['uint16']>;
    readonly numberOriginsSelected_lt: InputMaybe<Scalars['uint16']>;
    readonly numberOriginsSelected_neq: InputMaybe<Scalars['uint16']>;
    readonly numberOriginsSelected_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly proxied: InputMaybe<Scalars['uint8']>;
    readonly proxied_geq: InputMaybe<Scalars['uint8']>;
    readonly proxied_gt: InputMaybe<Scalars['uint8']>;
    readonly proxied_in: InputMaybe<Scalars['bytes']>;
    readonly proxied_leq: InputMaybe<Scalars['uint8']>;
    readonly proxied_lt: InputMaybe<Scalars['uint8']>;
    readonly proxied_neq: InputMaybe<Scalars['uint8']>;
    readonly proxied_notin: InputMaybe<Scalars['bytes']>;
    readonly region: InputMaybe<Scalars['string']>;
    readonly region_geq: InputMaybe<Scalars['string']>;
    readonly region_gt: InputMaybe<Scalars['string']>;
    readonly region_in: InputMaybe<readonly Scalars['string'][]>;
    readonly region_leq: InputMaybe<Scalars['string']>;
    readonly region_like: InputMaybe<Scalars['string']>;
    readonly region_lt: InputMaybe<Scalars['string']>;
    readonly region_neq: InputMaybe<Scalars['string']>;
    readonly region_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly region_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly selectedOriginIndex: InputMaybe<Scalars['uint16']>;
    readonly selectedOriginIndex_geq: InputMaybe<Scalars['uint16']>;
    readonly selectedOriginIndex_gt: InputMaybe<Scalars['uint16']>;
    readonly selectedOriginIndex_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly selectedOriginIndex_leq: InputMaybe<Scalars['uint16']>;
    readonly selectedOriginIndex_lt: InputMaybe<Scalars['uint16']>;
    readonly selectedOriginIndex_neq: InputMaybe<Scalars['uint16']>;
    readonly selectedOriginIndex_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly selectedPoolAvgRttMs: InputMaybe<Scalars['uint64']>;
    readonly selectedPoolAvgRttMs_geq: InputMaybe<Scalars['uint64']>;
    readonly selectedPoolAvgRttMs_gt: InputMaybe<Scalars['uint64']>;
    readonly selectedPoolAvgRttMs_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly selectedPoolAvgRttMs_leq: InputMaybe<Scalars['uint64']>;
    readonly selectedPoolAvgRttMs_lt: InputMaybe<Scalars['uint64']>;
    readonly selectedPoolAvgRttMs_neq: InputMaybe<Scalars['uint64']>;
    readonly selectedPoolAvgRttMs_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly selectedPoolHealthChecksEnabled: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthChecksEnabled_geq: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthChecksEnabled_gt: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthChecksEnabled_in: InputMaybe<Scalars['bytes']>;
    readonly selectedPoolHealthChecksEnabled_leq: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthChecksEnabled_lt: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthChecksEnabled_neq: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthChecksEnabled_notin: InputMaybe<Scalars['bytes']>;
    readonly selectedPoolHealthy: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthy_geq: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthy_gt: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthy_in: InputMaybe<Scalars['bytes']>;
    readonly selectedPoolHealthy_leq: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthy_lt: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthy_neq: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthy_notin: InputMaybe<Scalars['bytes']>;
    readonly selectedPoolId: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_geq: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_gt: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly selectedPoolId_leq: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_like: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_lt: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_neq: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly selectedPoolId_notlike: InputMaybe<Scalars['string']>;
    readonly selectedPoolIndex: InputMaybe<Scalars['uint32']>;
    readonly selectedPoolIndex_geq: InputMaybe<Scalars['uint32']>;
    readonly selectedPoolIndex_gt: InputMaybe<Scalars['uint32']>;
    readonly selectedPoolIndex_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly selectedPoolIndex_leq: InputMaybe<Scalars['uint32']>;
    readonly selectedPoolIndex_lt: InputMaybe<Scalars['uint32']>;
    readonly selectedPoolIndex_neq: InputMaybe<Scalars['uint32']>;
    readonly selectedPoolIndex_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly selectedPoolName: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_geq: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_gt: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly selectedPoolName_leq: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_like: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_lt: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_neq: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly selectedPoolName_notlike: InputMaybe<Scalars['string']>;
    readonly sessionAffinity: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_geq: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_gt: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sessionAffinityStatus_leq: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_like: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_lt: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_neq: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sessionAffinityStatus_notlike: InputMaybe<Scalars['string']>;
    readonly sessionAffinity_geq: InputMaybe<Scalars['string']>;
    readonly sessionAffinity_gt: InputMaybe<Scalars['string']>;
    readonly sessionAffinity_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sessionAffinity_leq: InputMaybe<Scalars['string']>;
    readonly sessionAffinity_like: InputMaybe<Scalars['string']>;
    readonly sessionAffinity_lt: InputMaybe<Scalars['string']>;
    readonly sessionAffinity_neq: InputMaybe<Scalars['string']>;
    readonly sessionAffinity_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sessionAffinity_notlike: InputMaybe<Scalars['string']>;
    readonly steeringPolicy: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_geq: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_gt: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_in: InputMaybe<readonly Scalars['string'][]>;
    readonly steeringPolicy_leq: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_like: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_lt: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_neq: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly steeringPolicy_notlike: InputMaybe<Scalars['string']>;
}

interface ZoneLoadBalancingRequestsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneLoadBalancingRequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneLoadBalancingRequestsAdaptiveGroupsFilter_InputObject[]>;
    readonly coloCode: InputMaybe<Scalars['string']>;
    readonly coloCode_geq: InputMaybe<Scalars['string']>;
    readonly coloCode_gt: InputMaybe<Scalars['string']>;
    readonly coloCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_leq: InputMaybe<Scalars['string']>;
    readonly coloCode_like: InputMaybe<Scalars['string']>;
    readonly coloCode_lt: InputMaybe<Scalars['string']>;
    readonly coloCode_neq: InputMaybe<Scalars['string']>;
    readonly coloCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly coloCode_notlike: InputMaybe<Scalars['string']>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly errorType: InputMaybe<Scalars['string']>;
    readonly errorType_geq: InputMaybe<Scalars['string']>;
    readonly errorType_gt: InputMaybe<Scalars['string']>;
    readonly errorType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly errorType_leq: InputMaybe<Scalars['string']>;
    readonly errorType_like: InputMaybe<Scalars['string']>;
    readonly errorType_lt: InputMaybe<Scalars['string']>;
    readonly errorType_neq: InputMaybe<Scalars['string']>;
    readonly errorType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly errorType_notlike: InputMaybe<Scalars['string']>;
    readonly lbName: InputMaybe<Scalars['string']>;
    readonly lbName_geq: InputMaybe<Scalars['string']>;
    readonly lbName_gt: InputMaybe<Scalars['string']>;
    readonly lbName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly lbName_leq: InputMaybe<Scalars['string']>;
    readonly lbName_like: InputMaybe<Scalars['string']>;
    readonly lbName_lt: InputMaybe<Scalars['string']>;
    readonly lbName_neq: InputMaybe<Scalars['string']>;
    readonly lbName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly lbName_notlike: InputMaybe<Scalars['string']>;
    readonly multipleOriginsSelected: InputMaybe<Scalars['uint8']>;
    readonly multipleOriginsSelected_geq: InputMaybe<Scalars['uint8']>;
    readonly multipleOriginsSelected_gt: InputMaybe<Scalars['uint8']>;
    readonly multipleOriginsSelected_in: InputMaybe<Scalars['bytes']>;
    readonly multipleOriginsSelected_leq: InputMaybe<Scalars['uint8']>;
    readonly multipleOriginsSelected_lt: InputMaybe<Scalars['uint8']>;
    readonly multipleOriginsSelected_neq: InputMaybe<Scalars['uint8']>;
    readonly multipleOriginsSelected_notin: InputMaybe<Scalars['bytes']>;
    readonly numberOriginsSelected: InputMaybe<Scalars['uint16']>;
    readonly numberOriginsSelected_geq: InputMaybe<Scalars['uint16']>;
    readonly numberOriginsSelected_gt: InputMaybe<Scalars['uint16']>;
    readonly numberOriginsSelected_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly numberOriginsSelected_leq: InputMaybe<Scalars['uint16']>;
    readonly numberOriginsSelected_lt: InputMaybe<Scalars['uint16']>;
    readonly numberOriginsSelected_neq: InputMaybe<Scalars['uint16']>;
    readonly numberOriginsSelected_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly proxied: InputMaybe<Scalars['uint8']>;
    readonly proxied_geq: InputMaybe<Scalars['uint8']>;
    readonly proxied_gt: InputMaybe<Scalars['uint8']>;
    readonly proxied_in: InputMaybe<Scalars['bytes']>;
    readonly proxied_leq: InputMaybe<Scalars['uint8']>;
    readonly proxied_lt: InputMaybe<Scalars['uint8']>;
    readonly proxied_neq: InputMaybe<Scalars['uint8']>;
    readonly proxied_notin: InputMaybe<Scalars['bytes']>;
    readonly region: InputMaybe<Scalars['string']>;
    readonly region_geq: InputMaybe<Scalars['string']>;
    readonly region_gt: InputMaybe<Scalars['string']>;
    readonly region_in: InputMaybe<readonly Scalars['string'][]>;
    readonly region_leq: InputMaybe<Scalars['string']>;
    readonly region_like: InputMaybe<Scalars['string']>;
    readonly region_lt: InputMaybe<Scalars['string']>;
    readonly region_neq: InputMaybe<Scalars['string']>;
    readonly region_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly region_notlike: InputMaybe<Scalars['string']>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly selectedOriginIndex: InputMaybe<Scalars['uint16']>;
    readonly selectedOriginIndex_geq: InputMaybe<Scalars['uint16']>;
    readonly selectedOriginIndex_gt: InputMaybe<Scalars['uint16']>;
    readonly selectedOriginIndex_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly selectedOriginIndex_leq: InputMaybe<Scalars['uint16']>;
    readonly selectedOriginIndex_lt: InputMaybe<Scalars['uint16']>;
    readonly selectedOriginIndex_neq: InputMaybe<Scalars['uint16']>;
    readonly selectedOriginIndex_notin: InputMaybe<readonly Scalars['uint16'][]>;
    readonly selectedOriginName: InputMaybe<Scalars['string']>;
    readonly selectedOriginName_geq: InputMaybe<Scalars['string']>;
    readonly selectedOriginName_gt: InputMaybe<Scalars['string']>;
    readonly selectedOriginName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly selectedOriginName_leq: InputMaybe<Scalars['string']>;
    readonly selectedOriginName_like: InputMaybe<Scalars['string']>;
    readonly selectedOriginName_lt: InputMaybe<Scalars['string']>;
    readonly selectedOriginName_neq: InputMaybe<Scalars['string']>;
    readonly selectedOriginName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly selectedOriginName_notlike: InputMaybe<Scalars['string']>;
    readonly selectedOriginNames: InputMaybe<Scalars['string']>;
    readonly selectedOriginNames_geq: InputMaybe<Scalars['string']>;
    readonly selectedOriginNames_gt: InputMaybe<Scalars['string']>;
    readonly selectedOriginNames_in: InputMaybe<readonly Scalars['string'][]>;
    readonly selectedOriginNames_leq: InputMaybe<Scalars['string']>;
    readonly selectedOriginNames_like: InputMaybe<Scalars['string']>;
    readonly selectedOriginNames_lt: InputMaybe<Scalars['string']>;
    readonly selectedOriginNames_neq: InputMaybe<Scalars['string']>;
    readonly selectedOriginNames_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly selectedOriginNames_notlike: InputMaybe<Scalars['string']>;
    readonly selectedPoolAvgRttMs: InputMaybe<Scalars['uint64']>;
    readonly selectedPoolAvgRttMs_geq: InputMaybe<Scalars['uint64']>;
    readonly selectedPoolAvgRttMs_gt: InputMaybe<Scalars['uint64']>;
    readonly selectedPoolAvgRttMs_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly selectedPoolAvgRttMs_leq: InputMaybe<Scalars['uint64']>;
    readonly selectedPoolAvgRttMs_lt: InputMaybe<Scalars['uint64']>;
    readonly selectedPoolAvgRttMs_neq: InputMaybe<Scalars['uint64']>;
    readonly selectedPoolAvgRttMs_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly selectedPoolHealthChecksEnabled: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthChecksEnabled_geq: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthChecksEnabled_gt: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthChecksEnabled_in: InputMaybe<Scalars['bytes']>;
    readonly selectedPoolHealthChecksEnabled_leq: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthChecksEnabled_lt: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthChecksEnabled_neq: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthChecksEnabled_notin: InputMaybe<Scalars['bytes']>;
    readonly selectedPoolHealthy: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthy_geq: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthy_gt: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthy_in: InputMaybe<Scalars['bytes']>;
    readonly selectedPoolHealthy_leq: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthy_lt: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthy_neq: InputMaybe<Scalars['uint8']>;
    readonly selectedPoolHealthy_notin: InputMaybe<Scalars['bytes']>;
    readonly selectedPoolId: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_geq: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_gt: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly selectedPoolId_leq: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_like: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_lt: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_neq: InputMaybe<Scalars['string']>;
    readonly selectedPoolId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly selectedPoolId_notlike: InputMaybe<Scalars['string']>;
    readonly selectedPoolIndex: InputMaybe<Scalars['uint32']>;
    readonly selectedPoolIndex_geq: InputMaybe<Scalars['uint32']>;
    readonly selectedPoolIndex_gt: InputMaybe<Scalars['uint32']>;
    readonly selectedPoolIndex_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly selectedPoolIndex_leq: InputMaybe<Scalars['uint32']>;
    readonly selectedPoolIndex_lt: InputMaybe<Scalars['uint32']>;
    readonly selectedPoolIndex_neq: InputMaybe<Scalars['uint32']>;
    readonly selectedPoolIndex_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly selectedPoolName: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_geq: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_gt: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly selectedPoolName_leq: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_like: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_lt: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_neq: InputMaybe<Scalars['string']>;
    readonly selectedPoolName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly selectedPoolName_notlike: InputMaybe<Scalars['string']>;
    readonly sessionAffinityEnabled: InputMaybe<Scalars['string']>;
    readonly sessionAffinityEnabled_geq: InputMaybe<Scalars['string']>;
    readonly sessionAffinityEnabled_gt: InputMaybe<Scalars['string']>;
    readonly sessionAffinityEnabled_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sessionAffinityEnabled_leq: InputMaybe<Scalars['string']>;
    readonly sessionAffinityEnabled_like: InputMaybe<Scalars['string']>;
    readonly sessionAffinityEnabled_lt: InputMaybe<Scalars['string']>;
    readonly sessionAffinityEnabled_neq: InputMaybe<Scalars['string']>;
    readonly sessionAffinityEnabled_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sessionAffinityEnabled_notlike: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_geq: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_gt: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_in: InputMaybe<readonly Scalars['string'][]>;
    readonly sessionAffinityStatus_leq: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_like: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_lt: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_neq: InputMaybe<Scalars['string']>;
    readonly sessionAffinityStatus_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly sessionAffinityStatus_notlike: InputMaybe<Scalars['string']>;
    readonly steeringPolicy: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_geq: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_gt: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_in: InputMaybe<readonly Scalars['string'][]>;
    readonly steeringPolicy_leq: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_like: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_lt: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_neq: InputMaybe<Scalars['string']>;
    readonly steeringPolicy_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly steeringPolicy_notlike: InputMaybe<Scalars['string']>;
}

type ZoneLoadBalancingRequestsAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** errorType ascending */
  | 'errorType_ASC'
  /** errorType descending */
  | 'errorType_DESC'
  /** lbName ascending */
  | 'lbName_ASC'
  /** lbName descending */
  | 'lbName_DESC'
  /** multipleOriginsSelected ascending */
  | 'multipleOriginsSelected_ASC'
  /** multipleOriginsSelected descending */
  | 'multipleOriginsSelected_DESC'
  /** numberOriginsSelected ascending */
  | 'numberOriginsSelected_ASC'
  /** numberOriginsSelected descending */
  | 'numberOriginsSelected_DESC'
  /** proxied ascending */
  | 'proxied_ASC'
  /** proxied descending */
  | 'proxied_DESC'
  /** region ascending */
  | 'region_ASC'
  /** region descending */
  | 'region_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** selectedOriginIndex ascending */
  | 'selectedOriginIndex_ASC'
  /** selectedOriginIndex descending */
  | 'selectedOriginIndex_DESC'
  /** selectedOriginName ascending */
  | 'selectedOriginName_ASC'
  /** selectedOriginName descending */
  | 'selectedOriginName_DESC'
  /** selectedOriginNames ascending */
  | 'selectedOriginNames_ASC'
  /** selectedOriginNames descending */
  | 'selectedOriginNames_DESC'
  /** selectedPoolAvgRttMs ascending */
  | 'selectedPoolAvgRttMs_ASC'
  /** selectedPoolAvgRttMs descending */
  | 'selectedPoolAvgRttMs_DESC'
  /** selectedPoolHealthChecksEnabled ascending */
  | 'selectedPoolHealthChecksEnabled_ASC'
  /** selectedPoolHealthChecksEnabled descending */
  | 'selectedPoolHealthChecksEnabled_DESC'
  /** selectedPoolHealthy ascending */
  | 'selectedPoolHealthy_ASC'
  /** selectedPoolHealthy descending */
  | 'selectedPoolHealthy_DESC'
  /** selectedPoolId ascending */
  | 'selectedPoolId_ASC'
  /** selectedPoolId descending */
  | 'selectedPoolId_DESC'
  /** selectedPoolIndex ascending */
  | 'selectedPoolIndex_ASC'
  /** selectedPoolIndex descending */
  | 'selectedPoolIndex_DESC'
  /** selectedPoolName ascending */
  | 'selectedPoolName_ASC'
  /** selectedPoolName descending */
  | 'selectedPoolName_DESC'
  /** sessionAffinityEnabled ascending */
  | 'sessionAffinityEnabled_ASC'
  /** sessionAffinityEnabled descending */
  | 'sessionAffinityEnabled_DESC'
  /** sessionAffinityStatus ascending */
  | 'sessionAffinityStatus_ASC'
  /** sessionAffinityStatus descending */
  | 'sessionAffinityStatus_DESC'
  /** steeringPolicy ascending */
  | 'steeringPolicy_ASC'
  /** steeringPolicy descending */
  | 'steeringPolicy_DESC';

type ZoneLoadBalancingRequestsAdaptiveOrderBy =
  /** coloCode ascending */
  | 'coloCode_ASC'
  /** coloCode descending */
  | 'coloCode_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** errorType ascending */
  | 'errorType_ASC'
  /** errorType descending */
  | 'errorType_DESC'
  /** lbName ascending */
  | 'lbName_ASC'
  /** lbName descending */
  | 'lbName_DESC'
  /** numberOriginsSelected ascending */
  | 'numberOriginsSelected_ASC'
  /** numberOriginsSelected descending */
  | 'numberOriginsSelected_DESC'
  /** proxied ascending */
  | 'proxied_ASC'
  /** proxied descending */
  | 'proxied_DESC'
  /** region ascending */
  | 'region_ASC'
  /** region descending */
  | 'region_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** selectedOriginIndex ascending */
  | 'selectedOriginIndex_ASC'
  /** selectedOriginIndex descending */
  | 'selectedOriginIndex_DESC'
  /** selectedPoolAvgRttMs ascending */
  | 'selectedPoolAvgRttMs_ASC'
  /** selectedPoolAvgRttMs descending */
  | 'selectedPoolAvgRttMs_DESC'
  /** selectedPoolHealthChecksEnabled ascending */
  | 'selectedPoolHealthChecksEnabled_ASC'
  /** selectedPoolHealthChecksEnabled descending */
  | 'selectedPoolHealthChecksEnabled_DESC'
  /** selectedPoolHealthy ascending */
  | 'selectedPoolHealthy_ASC'
  /** selectedPoolHealthy descending */
  | 'selectedPoolHealthy_DESC'
  /** selectedPoolId ascending */
  | 'selectedPoolId_ASC'
  /** selectedPoolId descending */
  | 'selectedPoolId_DESC'
  /** selectedPoolIndex ascending */
  | 'selectedPoolIndex_ASC'
  /** selectedPoolIndex descending */
  | 'selectedPoolIndex_DESC'
  /** selectedPoolName ascending */
  | 'selectedPoolName_ASC'
  /** selectedPoolName descending */
  | 'selectedPoolName_DESC'
  /** sessionAffinityStatus ascending */
  | 'sessionAffinityStatus_ASC'
  /** sessionAffinityStatus descending */
  | 'sessionAffinityStatus_DESC'
  /** sessionAffinity ascending */
  | 'sessionAffinity_ASC'
  /** sessionAffinity descending */
  | 'sessionAffinity_DESC'
  /** steeringPolicy ascending */
  | 'steeringPolicy_ASC'
  /** steeringPolicy descending */
  | 'steeringPolicy_DESC';

interface ZoneLogpushHealthAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneLogpushHealthAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneLogpushHealthAdaptiveGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly destinationType: InputMaybe<Scalars['string']>;
    readonly destinationType_geq: InputMaybe<Scalars['string']>;
    readonly destinationType_gt: InputMaybe<Scalars['string']>;
    readonly destinationType_in: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationType_leq: InputMaybe<Scalars['string']>;
    readonly destinationType_like: InputMaybe<Scalars['string']>;
    readonly destinationType_lt: InputMaybe<Scalars['string']>;
    readonly destinationType_neq: InputMaybe<Scalars['string']>;
    readonly destinationType_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly destinationType_notlike: InputMaybe<Scalars['string']>;
    readonly final: InputMaybe<Scalars['uint8']>;
    readonly final_geq: InputMaybe<Scalars['uint8']>;
    readonly final_gt: InputMaybe<Scalars['uint8']>;
    readonly final_in: InputMaybe<Scalars['bytes']>;
    readonly final_leq: InputMaybe<Scalars['uint8']>;
    readonly final_lt: InputMaybe<Scalars['uint8']>;
    readonly final_neq: InputMaybe<Scalars['uint8']>;
    readonly final_notin: InputMaybe<Scalars['bytes']>;
    readonly jobId: InputMaybe<Scalars['uint64']>;
    readonly jobId_geq: InputMaybe<Scalars['uint64']>;
    readonly jobId_gt: InputMaybe<Scalars['uint64']>;
    readonly jobId_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly jobId_leq: InputMaybe<Scalars['uint64']>;
    readonly jobId_lt: InputMaybe<Scalars['uint64']>;
    readonly jobId_neq: InputMaybe<Scalars['uint64']>;
    readonly jobId_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly status: InputMaybe<Scalars['uint16']>;
    readonly status_geq: InputMaybe<Scalars['uint16']>;
    readonly status_gt: InputMaybe<Scalars['uint16']>;
    readonly status_in: InputMaybe<readonly Scalars['uint16'][]>;
    readonly status_leq: InputMaybe<Scalars['uint16']>;
    readonly status_lt: InputMaybe<Scalars['uint16']>;
    readonly status_neq: InputMaybe<Scalars['uint16']>;
    readonly status_notin: InputMaybe<readonly Scalars['uint16'][]>;
}

type ZoneLogpushHealthAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** destinationType ascending */
  | 'destinationType_ASC'
  /** destinationType descending */
  | 'destinationType_DESC'
  /** final ascending */
  | 'final_ASC'
  /** final descending */
  | 'final_DESC'
  /** jobId ascending */
  | 'jobId_ASC'
  /** jobId descending */
  | 'jobId_DESC'
  /** status ascending */
  | 'status_ASC'
  /** status descending */
  | 'status_DESC'
  /** sum(bytesCompressed) ascending */
  | 'sum_bytesCompressed_ASC'
  /** sum(bytesCompressed) descending */
  | 'sum_bytesCompressed_DESC'
  /** sum(bytes) ascending */
  | 'sum_bytes_ASC'
  /** sum(bytes) descending */
  | 'sum_bytes_DESC'
  /** sum(records) ascending */
  | 'sum_records_ASC'
  /** sum(records) descending */
  | 'sum_records_DESC';

interface ZoneNelReportsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneNelReportsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneNelReportsAdaptiveGroupsFilter_InputObject[]>;
    readonly clientIPASN: InputMaybe<Scalars['uint32']>;
    readonly clientIPASNDescription: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_geq: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_gt: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPASNDescription_leq: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_like: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_lt: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_neq: InputMaybe<Scalars['string']>;
    readonly clientIPASNDescription_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPASNDescription_notlike: InputMaybe<Scalars['string']>;
    readonly clientIPASN_geq: InputMaybe<Scalars['uint32']>;
    readonly clientIPASN_gt: InputMaybe<Scalars['uint32']>;
    readonly clientIPASN_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly clientIPASN_leq: InputMaybe<Scalars['uint32']>;
    readonly clientIPASN_lt: InputMaybe<Scalars['uint32']>;
    readonly clientIPASN_neq: InputMaybe<Scalars['uint32']>;
    readonly clientIPASN_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly clientIPCountry: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_geq: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_gt: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPCountryCode_leq: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_like: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_lt: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_neq: InputMaybe<Scalars['string']>;
    readonly clientIPCountryCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPCountryCode_notlike: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_geq: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_gt: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_in: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPCountry_leq: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_like: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_lt: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_neq: InputMaybe<Scalars['string']>;
    readonly clientIPCountry_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly clientIPCountry_notlike: InputMaybe<Scalars['string']>;
    readonly clientIPVersion: InputMaybe<Scalars['uint8']>;
    readonly clientIPVersion_geq: InputMaybe<Scalars['uint8']>;
    readonly clientIPVersion_gt: InputMaybe<Scalars['uint8']>;
    readonly clientIPVersion_in: InputMaybe<Scalars['bytes']>;
    readonly clientIPVersion_leq: InputMaybe<Scalars['uint8']>;
    readonly clientIPVersion_lt: InputMaybe<Scalars['uint8']>;
    readonly clientIPVersion_neq: InputMaybe<Scalars['uint8']>;
    readonly clientIPVersion_notin: InputMaybe<Scalars['bytes']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHalfOfHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHalfOfHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly lastKnownGoodColoCode: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_geq: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_gt: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_in: InputMaybe<readonly Scalars['string'][]>;
    readonly lastKnownGoodColoCode_leq: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_like: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_lt: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_neq: InputMaybe<Scalars['string']>;
    readonly lastKnownGoodColoCode_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly lastKnownGoodColoCode_notlike: InputMaybe<Scalars['string']>;
    readonly phase: InputMaybe<Scalars['string']>;
    readonly phase_geq: InputMaybe<Scalars['string']>;
    readonly phase_gt: InputMaybe<Scalars['string']>;
    readonly phase_in: InputMaybe<readonly Scalars['string'][]>;
    readonly phase_leq: InputMaybe<Scalars['string']>;
    readonly phase_like: InputMaybe<Scalars['string']>;
    readonly phase_lt: InputMaybe<Scalars['string']>;
    readonly phase_neq: InputMaybe<Scalars['string']>;
    readonly phase_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly phase_notlike: InputMaybe<Scalars['string']>;
    readonly protocol: InputMaybe<Scalars['string']>;
    readonly protocol_geq: InputMaybe<Scalars['string']>;
    readonly protocol_gt: InputMaybe<Scalars['string']>;
    readonly protocol_in: InputMaybe<readonly Scalars['string'][]>;
    readonly protocol_leq: InputMaybe<Scalars['string']>;
    readonly protocol_like: InputMaybe<Scalars['string']>;
    readonly protocol_lt: InputMaybe<Scalars['string']>;
    readonly protocol_neq: InputMaybe<Scalars['string']>;
    readonly protocol_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly protocol_notlike: InputMaybe<Scalars['string']>;
    readonly type: InputMaybe<Scalars['string']>;
    readonly type_geq: InputMaybe<Scalars['string']>;
    readonly type_gt: InputMaybe<Scalars['string']>;
    readonly type_in: InputMaybe<readonly Scalars['string'][]>;
    readonly type_leq: InputMaybe<Scalars['string']>;
    readonly type_like: InputMaybe<Scalars['string']>;
    readonly type_lt: InputMaybe<Scalars['string']>;
    readonly type_neq: InputMaybe<Scalars['string']>;
    readonly type_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly type_notlike: InputMaybe<Scalars['string']>;
}

type ZoneNelReportsAdaptiveGroupsOrderBy =
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** clientIPASNDescription ascending */
  | 'clientIPASNDescription_ASC'
  /** clientIPASNDescription descending */
  | 'clientIPASNDescription_DESC'
  /** clientIPASN ascending */
  | 'clientIPASN_ASC'
  /** clientIPASN descending */
  | 'clientIPASN_DESC'
  /** clientIPCountryCode ascending */
  | 'clientIPCountryCode_ASC'
  /** clientIPCountryCode descending */
  | 'clientIPCountryCode_DESC'
  /** clientIPCountry ascending */
  | 'clientIPCountry_ASC'
  /** clientIPCountry descending */
  | 'clientIPCountry_DESC'
  /** clientIPVersion ascending */
  | 'clientIPVersion_ASC'
  /** clientIPVersion descending */
  | 'clientIPVersion_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHalfOfHour ascending */
  | 'datetimeHalfOfHour_ASC'
  /** datetimeHalfOfHour descending */
  | 'datetimeHalfOfHour_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** lastKnownGoodColoCode ascending */
  | 'lastKnownGoodColoCode_ASC'
  /** lastKnownGoodColoCode descending */
  | 'lastKnownGoodColoCode_DESC'
  /** phase ascending */
  | 'phase_ASC'
  /** phase descending */
  | 'phase_DESC'
  /** protocol ascending */
  | 'protocol_ASC'
  /** protocol descending */
  | 'protocol_DESC'
  /** type ascending */
  | 'type_ASC'
  /** type descending */
  | 'type_DESC';

interface ZoneSynAvgPps1mGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneSynAvgPps1mGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneSynAvgPps1mGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetimeDay: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeDay_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeDay_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
}

type ZoneSynAvgPps1mGroupsOrderBy =
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeDay ascending */
  | 'datetimeDay_ASC'
  /** datetimeDay descending */
  | 'datetimeDay_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** sum(avgPpsPerMinute) ascending */
  | 'sum_avgPpsPerMinute_ASC'
  /** sum(avgPpsPerMinute) descending */
  | 'sum_avgPpsPerMinute_DESC';

interface ZoneWaitingRoomAnalyticsAdaptiveFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneWaitingRoomAnalyticsAdaptiveFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneWaitingRoomAnalyticsAdaptiveFilter_InputObject[]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly maxEstimatedTimeMinutes: InputMaybe<Scalars['uint64']>;
    readonly maxEstimatedTimeMinutes_geq: InputMaybe<Scalars['uint64']>;
    readonly maxEstimatedTimeMinutes_gt: InputMaybe<Scalars['uint64']>;
    readonly maxEstimatedTimeMinutes_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly maxEstimatedTimeMinutes_leq: InputMaybe<Scalars['uint64']>;
    readonly maxEstimatedTimeMinutes_lt: InputMaybe<Scalars['uint64']>;
    readonly maxEstimatedTimeMinutes_neq: InputMaybe<Scalars['uint64']>;
    readonly maxEstimatedTimeMinutes_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly newUsersPerMinute: InputMaybe<Scalars['uint64']>;
    readonly newUsersPerMinuteConfig: InputMaybe<Scalars['uint64']>;
    readonly newUsersPerMinuteConfig_geq: InputMaybe<Scalars['uint64']>;
    readonly newUsersPerMinuteConfig_gt: InputMaybe<Scalars['uint64']>;
    readonly newUsersPerMinuteConfig_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly newUsersPerMinuteConfig_leq: InputMaybe<Scalars['uint64']>;
    readonly newUsersPerMinuteConfig_lt: InputMaybe<Scalars['uint64']>;
    readonly newUsersPerMinuteConfig_neq: InputMaybe<Scalars['uint64']>;
    readonly newUsersPerMinuteConfig_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly newUsersPerMinute_geq: InputMaybe<Scalars['uint64']>;
    readonly newUsersPerMinute_gt: InputMaybe<Scalars['uint64']>;
    readonly newUsersPerMinute_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly newUsersPerMinute_leq: InputMaybe<Scalars['uint64']>;
    readonly newUsersPerMinute_lt: InputMaybe<Scalars['uint64']>;
    readonly newUsersPerMinute_neq: InputMaybe<Scalars['uint64']>;
    readonly newUsersPerMinute_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sessionDuration: InputMaybe<Scalars['uint64']>;
    readonly sessionDuration_geq: InputMaybe<Scalars['uint64']>;
    readonly sessionDuration_gt: InputMaybe<Scalars['uint64']>;
    readonly sessionDuration_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly sessionDuration_leq: InputMaybe<Scalars['uint64']>;
    readonly sessionDuration_lt: InputMaybe<Scalars['uint64']>;
    readonly sessionDuration_neq: InputMaybe<Scalars['uint64']>;
    readonly sessionDuration_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeBetweenRefreshesP50: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP50_geq: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP50_gt: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP50_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeBetweenRefreshesP50_leq: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP50_lt: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP50_neq: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP50_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeBetweenRefreshesP75: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP75_geq: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP75_gt: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP75_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeBetweenRefreshesP75_leq: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP75_lt: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP75_neq: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP75_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeBetweenRefreshesP90: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP90_geq: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP90_gt: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP90_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeBetweenRefreshesP90_leq: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP90_lt: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP90_neq: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP90_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeBetweenRefreshesP95: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP95_geq: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP95_gt: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP95_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeBetweenRefreshesP95_leq: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP95_lt: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP95_neq: InputMaybe<Scalars['uint64']>;
    readonly timeBetweenRefreshesP95_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeInQueueP50: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP50_geq: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP50_gt: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP50_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeInQueueP50_leq: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP50_lt: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP50_neq: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP50_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeInQueueP75: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP75_geq: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP75_gt: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP75_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeInQueueP75_leq: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP75_lt: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP75_neq: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP75_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeInQueueP90: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP90_geq: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP90_gt: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP90_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeInQueueP90_leq: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP90_lt: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP90_neq: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP90_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeInQueueP95: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP95_geq: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP95_gt: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP95_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeInQueueP95_leq: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP95_lt: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP95_neq: InputMaybe<Scalars['uint64']>;
    readonly timeInQueueP95_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeOnOriginP50: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP50_geq: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP50_gt: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP50_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeOnOriginP50_leq: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP50_lt: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP50_neq: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP50_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeOnOriginP75: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP75_geq: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP75_gt: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP75_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeOnOriginP75_leq: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP75_lt: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP75_neq: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP75_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeOnOriginP90: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP90_geq: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP90_gt: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP90_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeOnOriginP90_leq: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP90_lt: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP90_neq: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP90_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeOnOriginP95: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP95_geq: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP95_gt: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP95_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly timeOnOriginP95_leq: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP95_lt: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP95_neq: InputMaybe<Scalars['uint64']>;
    readonly timeOnOriginP95_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly totalActiveUsers: InputMaybe<Scalars['uint64']>;
    readonly totalActiveUsersConfig: InputMaybe<Scalars['uint64']>;
    readonly totalActiveUsersConfig_geq: InputMaybe<Scalars['uint64']>;
    readonly totalActiveUsersConfig_gt: InputMaybe<Scalars['uint64']>;
    readonly totalActiveUsersConfig_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly totalActiveUsersConfig_leq: InputMaybe<Scalars['uint64']>;
    readonly totalActiveUsersConfig_lt: InputMaybe<Scalars['uint64']>;
    readonly totalActiveUsersConfig_neq: InputMaybe<Scalars['uint64']>;
    readonly totalActiveUsersConfig_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly totalActiveUsers_geq: InputMaybe<Scalars['uint64']>;
    readonly totalActiveUsers_gt: InputMaybe<Scalars['uint64']>;
    readonly totalActiveUsers_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly totalActiveUsers_leq: InputMaybe<Scalars['uint64']>;
    readonly totalActiveUsers_lt: InputMaybe<Scalars['uint64']>;
    readonly totalActiveUsers_neq: InputMaybe<Scalars['uint64']>;
    readonly totalActiveUsers_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly totalQueuedUsers: InputMaybe<Scalars['uint64']>;
    readonly totalQueuedUsers_geq: InputMaybe<Scalars['uint64']>;
    readonly totalQueuedUsers_gt: InputMaybe<Scalars['uint64']>;
    readonly totalQueuedUsers_in: InputMaybe<readonly Scalars['uint64'][]>;
    readonly totalQueuedUsers_leq: InputMaybe<Scalars['uint64']>;
    readonly totalQueuedUsers_lt: InputMaybe<Scalars['uint64']>;
    readonly totalQueuedUsers_neq: InputMaybe<Scalars['uint64']>;
    readonly totalQueuedUsers_notin: InputMaybe<readonly Scalars['uint64'][]>;
    readonly waitingRoomId: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_geq: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_gt: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly waitingRoomId_leq: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_like: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_lt: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_neq: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly waitingRoomId_notlike: InputMaybe<Scalars['string']>;
    readonly waitingRoomName: InputMaybe<Scalars['string']>;
    readonly waitingRoomName_geq: InputMaybe<Scalars['string']>;
    readonly waitingRoomName_gt: InputMaybe<Scalars['string']>;
    readonly waitingRoomName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly waitingRoomName_leq: InputMaybe<Scalars['string']>;
    readonly waitingRoomName_like: InputMaybe<Scalars['string']>;
    readonly waitingRoomName_lt: InputMaybe<Scalars['string']>;
    readonly waitingRoomName_neq: InputMaybe<Scalars['string']>;
    readonly waitingRoomName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly waitingRoomName_notlike: InputMaybe<Scalars['string']>;
}

interface ZoneWaitingRoomAnalyticsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneWaitingRoomAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneWaitingRoomAnalyticsAdaptiveGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetime: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_geq: InputMaybe<Scalars['Time']>;
    readonly datetime_gt: InputMaybe<Scalars['Time']>;
    readonly datetime_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetime_leq: InputMaybe<Scalars['Time']>;
    readonly datetime_lt: InputMaybe<Scalars['Time']>;
    readonly datetime_neq: InputMaybe<Scalars['Time']>;
    readonly datetime_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly sampleInterval: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_geq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_gt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_in: InputMaybe<readonly Scalars['uint32'][]>;
    readonly sampleInterval_leq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_lt: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_neq: InputMaybe<Scalars['uint32']>;
    readonly sampleInterval_notin: InputMaybe<readonly Scalars['uint32'][]>;
    readonly waitingRoomId: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_geq: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_gt: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_in: InputMaybe<readonly Scalars['string'][]>;
    readonly waitingRoomId_leq: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_like: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_lt: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_neq: InputMaybe<Scalars['string']>;
    readonly waitingRoomId_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly waitingRoomId_notlike: InputMaybe<Scalars['string']>;
}

type ZoneWaitingRoomAnalyticsAdaptiveGroupsOrderBy =
  /** avgWeighted(timeBetweenRefreshesP50) ascending */
  | 'avgWeighted_timeBetweenRefreshesP50_ASC'
  /** avgWeighted(timeBetweenRefreshesP50) descending */
  | 'avgWeighted_timeBetweenRefreshesP50_DESC'
  /** avgWeighted(timeBetweenRefreshesP75) ascending */
  | 'avgWeighted_timeBetweenRefreshesP75_ASC'
  /** avgWeighted(timeBetweenRefreshesP75) descending */
  | 'avgWeighted_timeBetweenRefreshesP75_DESC'
  /** avgWeighted(timeBetweenRefreshesP90) ascending */
  | 'avgWeighted_timeBetweenRefreshesP90_ASC'
  /** avgWeighted(timeBetweenRefreshesP90) descending */
  | 'avgWeighted_timeBetweenRefreshesP90_DESC'
  /** avgWeighted(timeBetweenRefreshesP95) ascending */
  | 'avgWeighted_timeBetweenRefreshesP95_ASC'
  /** avgWeighted(timeBetweenRefreshesP95) descending */
  | 'avgWeighted_timeBetweenRefreshesP95_DESC'
  /** avgWeighted(timeInQueueP50) ascending */
  | 'avgWeighted_timeInQueueP50_ASC'
  /** avgWeighted(timeInQueueP50) descending */
  | 'avgWeighted_timeInQueueP50_DESC'
  /** avgWeighted(timeInQueueP75) ascending */
  | 'avgWeighted_timeInQueueP75_ASC'
  /** avgWeighted(timeInQueueP75) descending */
  | 'avgWeighted_timeInQueueP75_DESC'
  /** avgWeighted(timeInQueueP90) ascending */
  | 'avgWeighted_timeInQueueP90_ASC'
  /** avgWeighted(timeInQueueP90) descending */
  | 'avgWeighted_timeInQueueP90_DESC'
  /** avgWeighted(timeInQueueP95) ascending */
  | 'avgWeighted_timeInQueueP95_ASC'
  /** avgWeighted(timeInQueueP95) descending */
  | 'avgWeighted_timeInQueueP95_DESC'
  /** avgWeighted(timeOnOriginP50) ascending */
  | 'avgWeighted_timeOnOriginP50_ASC'
  /** avgWeighted(timeOnOriginP50) descending */
  | 'avgWeighted_timeOnOriginP50_DESC'
  /** avgWeighted(timeOnOriginP75) ascending */
  | 'avgWeighted_timeOnOriginP75_ASC'
  /** avgWeighted(timeOnOriginP75) descending */
  | 'avgWeighted_timeOnOriginP75_DESC'
  /** avgWeighted(timeOnOriginP90) ascending */
  | 'avgWeighted_timeOnOriginP90_ASC'
  /** avgWeighted(timeOnOriginP90) descending */
  | 'avgWeighted_timeOnOriginP90_DESC'
  /** avgWeighted(timeOnOriginP95) ascending */
  | 'avgWeighted_timeOnOriginP95_ASC'
  /** avgWeighted(timeOnOriginP95) descending */
  | 'avgWeighted_timeOnOriginP95_DESC'
  /** avg(abandoningUsersPerMinute) ascending */
  | 'avg_abandoningUsersPerMinute_ASC'
  /** avg(abandoningUsersPerMinute) descending */
  | 'avg_abandoningUsersPerMinute_DESC'
  /** avg(maxEstimatedTimeMinutes) ascending */
  | 'avg_maxEstimatedTimeMinutes_ASC'
  /** avg(maxEstimatedTimeMinutes) descending */
  | 'avg_maxEstimatedTimeMinutes_DESC'
  /** avg(newUsersPerMinuteConfig) ascending */
  | 'avg_newUsersPerMinuteConfig_ASC'
  /** avg(newUsersPerMinuteConfig) descending */
  | 'avg_newUsersPerMinuteConfig_DESC'
  /** avg(newUsersPerMinute) ascending */
  | 'avg_newUsersPerMinute_ASC'
  /** avg(newUsersPerMinute) descending */
  | 'avg_newUsersPerMinute_DESC'
  /** avg(sampleInterval) ascending */
  | 'avg_sampleInterval_ASC'
  /** avg(sampleInterval) descending */
  | 'avg_sampleInterval_DESC'
  /** avg(sessionDuration) ascending */
  | 'avg_sessionDuration_ASC'
  /** avg(sessionDuration) descending */
  | 'avg_sessionDuration_DESC'
  /** avg(totalActiveUsersConfig) ascending */
  | 'avg_totalActiveUsersConfig_ASC'
  /** avg(totalActiveUsersConfig) descending */
  | 'avg_totalActiveUsersConfig_DESC'
  /** avg(totalActiveUsers) ascending */
  | 'avg_totalActiveUsers_ASC'
  /** avg(totalActiveUsers) descending */
  | 'avg_totalActiveUsers_DESC'
  /** avg(totalQueuedUsers) ascending */
  | 'avg_totalQueuedUsers_ASC'
  /** avg(totalQueuedUsers) descending */
  | 'avg_totalQueuedUsers_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** max(abandoningUsersPerMinute) ascending */
  | 'max_abandoningUsersPerMinute_ASC'
  /** max(abandoningUsersPerMinute) descending */
  | 'max_abandoningUsersPerMinute_DESC'
  /** max(maxEstimatedTimeMinutes) ascending */
  | 'max_maxEstimatedTimeMinutes_ASC'
  /** max(maxEstimatedTimeMinutes) descending */
  | 'max_maxEstimatedTimeMinutes_DESC'
  /** max(newUsersPerMinuteConfig) ascending */
  | 'max_newUsersPerMinuteConfig_ASC'
  /** max(newUsersPerMinuteConfig) descending */
  | 'max_newUsersPerMinuteConfig_DESC'
  /** max(newUsersPerMinute) ascending */
  | 'max_newUsersPerMinute_ASC'
  /** max(newUsersPerMinute) descending */
  | 'max_newUsersPerMinute_DESC'
  /** max(sessionDuration) ascending */
  | 'max_sessionDuration_ASC'
  /** max(sessionDuration) descending */
  | 'max_sessionDuration_DESC'
  /** max(totalActiveUsersConfig) ascending */
  | 'max_totalActiveUsersConfig_ASC'
  /** max(totalActiveUsersConfig) descending */
  | 'max_totalActiveUsersConfig_DESC'
  /** max(totalActiveUsers) ascending */
  | 'max_totalActiveUsers_ASC'
  /** max(totalActiveUsers) descending */
  | 'max_totalActiveUsers_DESC'
  /** max(totalQueuedUsers) ascending */
  | 'max_totalQueuedUsers_ASC'
  /** max(totalQueuedUsers) descending */
  | 'max_totalQueuedUsers_DESC'
  /** min(maxEstimatedTimeMinutes) ascending */
  | 'min_maxEstimatedTimeMinutes_ASC'
  /** min(maxEstimatedTimeMinutes) descending */
  | 'min_maxEstimatedTimeMinutes_DESC'
  /** min(newUsersPerMinuteConfig) ascending */
  | 'min_newUsersPerMinuteConfig_ASC'
  /** min(newUsersPerMinuteConfig) descending */
  | 'min_newUsersPerMinuteConfig_DESC'
  /** min(newUsersPerMinute) ascending */
  | 'min_newUsersPerMinute_ASC'
  /** min(newUsersPerMinute) descending */
  | 'min_newUsersPerMinute_DESC'
  /** min(sessionDuration) ascending */
  | 'min_sessionDuration_ASC'
  /** min(sessionDuration) descending */
  | 'min_sessionDuration_DESC'
  /** min(totalActiveUsersConfig) ascending */
  | 'min_totalActiveUsersConfig_ASC'
  /** min(totalActiveUsersConfig) descending */
  | 'min_totalActiveUsersConfig_DESC'
  /** min(totalActiveUsers) ascending */
  | 'min_totalActiveUsers_ASC'
  /** min(totalActiveUsers) descending */
  | 'min_totalActiveUsers_DESC'
  /** min(totalQueuedUsers) ascending */
  | 'min_totalQueuedUsers_ASC'
  /** min(totalQueuedUsers) descending */
  | 'min_totalQueuedUsers_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** waitingRoomId ascending */
  | 'waitingRoomId_ASC'
  /** waitingRoomId descending */
  | 'waitingRoomId_DESC';

type ZoneWaitingRoomAnalyticsAdaptiveOrderBy =
  /** abandoningUsersPerMinute ascending */
  | 'abandoningUsersPerMinute_ASC'
  /** abandoningUsersPerMinute descending */
  | 'abandoningUsersPerMinute_DESC'
  /** datetime ascending */
  | 'datetime_ASC'
  /** datetime descending */
  | 'datetime_DESC'
  /** maxEstimatedTimeMinutes ascending */
  | 'maxEstimatedTimeMinutes_ASC'
  /** maxEstimatedTimeMinutes descending */
  | 'maxEstimatedTimeMinutes_DESC'
  /** newUsersPerMinuteConfig ascending */
  | 'newUsersPerMinuteConfig_ASC'
  /** newUsersPerMinuteConfig descending */
  | 'newUsersPerMinuteConfig_DESC'
  /** newUsersPerMinute ascending */
  | 'newUsersPerMinute_ASC'
  /** newUsersPerMinute descending */
  | 'newUsersPerMinute_DESC'
  /** sampleInterval ascending */
  | 'sampleInterval_ASC'
  /** sampleInterval descending */
  | 'sampleInterval_DESC'
  /** sessionDuration ascending */
  | 'sessionDuration_ASC'
  /** sessionDuration descending */
  | 'sessionDuration_DESC'
  /** timeBetweenRefreshesP50 ascending */
  | 'timeBetweenRefreshesP50_ASC'
  /** timeBetweenRefreshesP50 descending */
  | 'timeBetweenRefreshesP50_DESC'
  /** timeBetweenRefreshesP75 ascending */
  | 'timeBetweenRefreshesP75_ASC'
  /** timeBetweenRefreshesP75 descending */
  | 'timeBetweenRefreshesP75_DESC'
  /** timeBetweenRefreshesP90 ascending */
  | 'timeBetweenRefreshesP90_ASC'
  /** timeBetweenRefreshesP90 descending */
  | 'timeBetweenRefreshesP90_DESC'
  /** timeBetweenRefreshesP95 ascending */
  | 'timeBetweenRefreshesP95_ASC'
  /** timeBetweenRefreshesP95 descending */
  | 'timeBetweenRefreshesP95_DESC'
  /** timeInQueueP50 ascending */
  | 'timeInQueueP50_ASC'
  /** timeInQueueP50 descending */
  | 'timeInQueueP50_DESC'
  /** timeInQueueP75 ascending */
  | 'timeInQueueP75_ASC'
  /** timeInQueueP75 descending */
  | 'timeInQueueP75_DESC'
  /** timeInQueueP90 ascending */
  | 'timeInQueueP90_ASC'
  /** timeInQueueP90 descending */
  | 'timeInQueueP90_DESC'
  /** timeInQueueP95 ascending */
  | 'timeInQueueP95_ASC'
  /** timeInQueueP95 descending */
  | 'timeInQueueP95_DESC'
  /** timeOnOriginP50 ascending */
  | 'timeOnOriginP50_ASC'
  /** timeOnOriginP50 descending */
  | 'timeOnOriginP50_DESC'
  /** timeOnOriginP75 ascending */
  | 'timeOnOriginP75_ASC'
  /** timeOnOriginP75 descending */
  | 'timeOnOriginP75_DESC'
  /** timeOnOriginP90 ascending */
  | 'timeOnOriginP90_ASC'
  /** timeOnOriginP90 descending */
  | 'timeOnOriginP90_DESC'
  /** timeOnOriginP95 ascending */
  | 'timeOnOriginP95_ASC'
  /** timeOnOriginP95 descending */
  | 'timeOnOriginP95_DESC'
  /** totalActiveUsersConfig ascending */
  | 'totalActiveUsersConfig_ASC'
  /** totalActiveUsersConfig descending */
  | 'totalActiveUsersConfig_DESC'
  /** totalActiveUsers ascending */
  | 'totalActiveUsers_ASC'
  /** totalActiveUsers descending */
  | 'totalActiveUsers_DESC'
  /** totalQueuedUsers ascending */
  | 'totalQueuedUsers_ASC'
  /** totalQueuedUsers descending */
  | 'totalQueuedUsers_DESC'
  /** waitingRoomId ascending */
  | 'waitingRoomId_ASC'
  /** waitingRoomId descending */
  | 'waitingRoomId_DESC'
  /** waitingRoomName ascending */
  | 'waitingRoomName_ASC'
  /** waitingRoomName descending */
  | 'waitingRoomName_DESC';

interface ZoneZarazActionsAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneZarazActionsAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneZarazActionsAdaptiveGroupsFilter_InputObject[]>;
    readonly actionName: InputMaybe<Scalars['string']>;
    readonly actionName_geq: InputMaybe<Scalars['string']>;
    readonly actionName_gt: InputMaybe<Scalars['string']>;
    readonly actionName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly actionName_leq: InputMaybe<Scalars['string']>;
    readonly actionName_like: InputMaybe<Scalars['string']>;
    readonly actionName_lt: InputMaybe<Scalars['string']>;
    readonly actionName_neq: InputMaybe<Scalars['string']>;
    readonly actionName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly actionName_notlike: InputMaybe<Scalars['string']>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly toolName: InputMaybe<Scalars['string']>;
    readonly toolName_geq: InputMaybe<Scalars['string']>;
    readonly toolName_gt: InputMaybe<Scalars['string']>;
    readonly toolName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly toolName_leq: InputMaybe<Scalars['string']>;
    readonly toolName_like: InputMaybe<Scalars['string']>;
    readonly toolName_lt: InputMaybe<Scalars['string']>;
    readonly toolName_neq: InputMaybe<Scalars['string']>;
    readonly toolName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly toolName_notlike: InputMaybe<Scalars['string']>;
}

type ZoneZarazActionsAdaptiveGroupsOrderBy =
  /** actionName ascending */
  | 'actionName_ASC'
  /** actionName descending */
  | 'actionName_DESC'
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** toolName ascending */
  | 'toolName_ASC'
  /** toolName descending */
  | 'toolName_DESC';

interface ZoneZarazTrackAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneZarazTrackAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneZarazTrackAdaptiveGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly trackName: InputMaybe<Scalars['string']>;
    readonly trackName_geq: InputMaybe<Scalars['string']>;
    readonly trackName_gt: InputMaybe<Scalars['string']>;
    readonly trackName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly trackName_leq: InputMaybe<Scalars['string']>;
    readonly trackName_like: InputMaybe<Scalars['string']>;
    readonly trackName_lt: InputMaybe<Scalars['string']>;
    readonly trackName_neq: InputMaybe<Scalars['string']>;
    readonly trackName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly trackName_notlike: InputMaybe<Scalars['string']>;
    readonly urlPath: InputMaybe<Scalars['string']>;
    readonly urlPath_geq: InputMaybe<Scalars['string']>;
    readonly urlPath_gt: InputMaybe<Scalars['string']>;
    readonly urlPath_in: InputMaybe<readonly Scalars['string'][]>;
    readonly urlPath_leq: InputMaybe<Scalars['string']>;
    readonly urlPath_like: InputMaybe<Scalars['string']>;
    readonly urlPath_lt: InputMaybe<Scalars['string']>;
    readonly urlPath_neq: InputMaybe<Scalars['string']>;
    readonly urlPath_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly urlPath_notlike: InputMaybe<Scalars['string']>;
}

type ZoneZarazTrackAdaptiveGroupsOrderBy =
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** trackName ascending */
  | 'trackName_ASC'
  /** trackName descending */
  | 'trackName_DESC'
  /** urlPath ascending */
  | 'urlPath_ASC'
  /** urlPath descending */
  | 'urlPath_DESC';

interface ZoneZarazTriggersAdaptiveGroupsFilter_InputObject {
    readonly AND: InputMaybe<readonly ZoneZarazTriggersAdaptiveGroupsFilter_InputObject[]>;
    readonly OR: InputMaybe<readonly ZoneZarazTriggersAdaptiveGroupsFilter_InputObject[]>;
    readonly date: InputMaybe<Scalars['Date']>;
    readonly date_geq: InputMaybe<Scalars['Date']>;
    readonly date_gt: InputMaybe<Scalars['Date']>;
    readonly date_in: InputMaybe<readonly Scalars['Date'][]>;
    readonly date_leq: InputMaybe<Scalars['Date']>;
    readonly date_lt: InputMaybe<Scalars['Date']>;
    readonly date_neq: InputMaybe<Scalars['Date']>;
    readonly date_notin: InputMaybe<readonly Scalars['Date'][]>;
    readonly datetimeFifteenMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFifteenMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFifteenMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeFiveMinutes_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeFiveMinutes_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeHour_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeHour_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_geq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_gt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_in: InputMaybe<readonly Scalars['Time'][]>;
    readonly datetimeMinute_leq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_lt: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_neq: InputMaybe<Scalars['Time']>;
    readonly datetimeMinute_notin: InputMaybe<readonly Scalars['Time'][]>;
    readonly triggerName: InputMaybe<Scalars['string']>;
    readonly triggerName_geq: InputMaybe<Scalars['string']>;
    readonly triggerName_gt: InputMaybe<Scalars['string']>;
    readonly triggerName_in: InputMaybe<readonly Scalars['string'][]>;
    readonly triggerName_leq: InputMaybe<Scalars['string']>;
    readonly triggerName_like: InputMaybe<Scalars['string']>;
    readonly triggerName_lt: InputMaybe<Scalars['string']>;
    readonly triggerName_neq: InputMaybe<Scalars['string']>;
    readonly triggerName_notin: InputMaybe<readonly Scalars['string'][]>;
    readonly triggerName_notlike: InputMaybe<Scalars['string']>;
}

type ZoneZarazTriggersAdaptiveGroupsOrderBy =
  /** count() ascending */
  | 'count_ASC'
  /** count() descending */
  | 'count_DESC'
  /** date ascending */
  | 'date_ASC'
  /** date descending */
  | 'date_DESC'
  /** datetimeFifteenMinutes ascending */
  | 'datetimeFifteenMinutes_ASC'
  /** datetimeFifteenMinutes descending */
  | 'datetimeFifteenMinutes_DESC'
  /** datetimeFiveMinutes ascending */
  | 'datetimeFiveMinutes_ASC'
  /** datetimeFiveMinutes descending */
  | 'datetimeFiveMinutes_DESC'
  /** datetimeHour ascending */
  | 'datetimeHour_ASC'
  /** datetimeHour descending */
  | 'datetimeHour_DESC'
  /** datetimeMinute ascending */
  | 'datetimeMinute_ASC'
  /** datetimeMinute descending */
  | 'datetimeMinute_DESC'
  /** triggerName ascending */
  | 'triggerName_ASC'
  /** triggerName descending */
  | 'triggerName_DESC';

type FetchZoneAnalyticsQueryVariables = Exact<{
    zoneTag?: InputMaybe<Scalars['string']>;
    datetime?: InputMaybe<Scalars['Time']>;
}>;


interface FetchZoneAnalyticsQuery {
    readonly viewer: { readonly zones: readonly { readonly httpRequests1mGroups: readonly { readonly dimensions: { readonly datetime: string } | null, readonly sum: { readonly bytes: number, readonly cachedBytes: number, readonly cachedRequests: number, readonly encryptedBytes: number, readonly encryptedRequests: number, readonly pageViews: number, readonly requests: number, readonly threats: number, readonly browserMap: readonly { readonly pageViews: number, readonly uaBrowserFamily: string }[], readonly clientHTTPVersionMap: readonly { readonly clientHTTPProtocol: string, readonly requests: number }[], readonly clientSSLMap: readonly { readonly clientSSLProtocol: string, readonly requests: number }[], readonly contentTypeMap: readonly { readonly bytes: number, readonly edgeResponseContentTypeName: string, readonly requests: number }[], readonly countryMap: readonly { readonly bytes: number, readonly clientCountryName: string, readonly requests: number, readonly threats: number }[], readonly ipClassMap: readonly { readonly ipType: string, readonly requests: number }[], readonly responseStatusMap: readonly { readonly edgeResponseStatus: number, readonly requests: number }[], readonly threatPathingMap: readonly { readonly requests: number, readonly threatPathingName: string }[] } | null, readonly uniq: { readonly uniques: number } | null }[], readonly httpRequestsAdaptiveGroups: readonly { readonly count: number, readonly sum: { readonly edgeResponseBytes: number, readonly visits: number } | null, readonly dimensions: { readonly datetime: string, readonly clientRequestHTTPHost: string, readonly clientCountryName: string, readonly cacheStatus: string, readonly edgeResponseStatus: number, readonly edgeResponseContentTypeName: string } | null }[], readonly healthCheckEventsAdaptiveGroups: readonly { readonly count: number, readonly sum: { readonly healthStatus: number } | null, readonly dimensions: { readonly healthStatus: string, readonly region: string, readonly fqdn: string, readonly datetime: string, readonly rttMs: number } | null }[], readonly firewallEventsAdaptiveGroups: readonly { readonly count: number, readonly dimensions: { readonly source: string, readonly datetime: string, readonly action: string, readonly clientRequestHTTPHost: string, readonly clientCountryName: string, readonly clientRequestHTTPMethodName: string } | null }[] }[] } | null;
}

type FetchAccountAnalyticsQueryVariables = Exact<{
    accountTag?: InputMaybe<Scalars['string']>;
    datetime?: InputMaybe<Scalars['Time']>;
}>;


interface FetchAccountAnalyticsQuery {
    readonly viewer: { readonly accounts: readonly { readonly workersInvocationsAdaptive: readonly { readonly dimensions: { readonly datetime: string, readonly scriptName: string, readonly status: string } | null, readonly sum: { readonly duration: number, readonly errors: number, readonly requests: number } | null }[], readonly r2OperationsAdaptiveGroups: readonly { readonly dimensions: { readonly actionType: string, readonly bucketName: string, readonly datetime: string } | null, readonly sum: { readonly requests: number, readonly responseObjectSize: number } | null }[], readonly r2StorageAdaptiveGroups: readonly { readonly dimensions: { readonly bucketName: string, readonly datetime: string } | null, readonly max: { readonly metadataSize: number, readonly objectCount: number, readonly payloadSize: number, readonly uploadCount: number } | null }[], readonly rumPageloadEventsAdaptiveGroups: readonly { readonly count: number, readonly sum: { readonly visits: number } | null, readonly dimensions: { readonly countryName: string, readonly date: unknown, readonly deviceType: string, readonly userAgentOS: string, readonly userAgentBrowser: string, readonly requestHost: string } | null }[], readonly rumPerformanceEventsAdaptiveGroups: readonly { readonly count: number, readonly sum: { readonly visits: number } | null, readonly dimensions: { readonly countryName: string, readonly date: unknown, readonly deviceType: string, readonly requestHost: string } | null, readonly avg: { readonly connectionTime: number, readonly dnsTime: number, readonly firstContentfulPaint: number, readonly firstPaint: number, readonly loadEventTime: number, readonly pageLoadTime: number, readonly pageRenderTime: number, readonly requestTime: number, readonly responseTime: number, readonly sampleInterval: number } | null }[], readonly rumWebVitalsEventsAdaptiveGroups: readonly { readonly sum: { readonly clsGood: number, readonly clsNeedsImprovement: number, readonly clsPoor: number, readonly clsTotal: number, readonly fidGood: number, readonly fidNeedsImprovement: number, readonly fidPoor: number, readonly fidTotal: number, readonly lcpGood: number, readonly lcpNeedsImprovement: number, readonly lcpPoor: number, readonly lcpTotal: number, readonly visits: number } | null, readonly dimensions: { readonly countryName: string, readonly date: unknown, readonly userAgentBrowser: string, readonly requestHost: string, readonly largestContentfulPaintElement: string, readonly largestContentfulPaintObjectPath: string, readonly largestContentfulPaintObjectHost: string, readonly largestContentfulPaintPath: string, readonly firstInputDelayElement: string, readonly firstInputDelayName: string, readonly firstInputDelayPath: string, readonly deviceType: string, readonly userAgentOS: string } | null }[] }[] } | null;
}


const FetchZoneAnalyticsDocument = gql`
    query fetchZoneAnalytics($zoneTag: string = "", $datetime: Time = "") {
  viewer {
    zones(filter: {zoneTag: $zoneTag}) {
      httpRequests1mGroups(
        filter: {datetime_geq: $datetime}
        limit: 9999
        orderBy: [datetime_ASC]
      ) {
        dimensions {
          datetime
        }
        sum {
          browserMap {
            pageViews
            uaBrowserFamily
          }
          bytes
          cachedBytes
          cachedRequests
          clientHTTPVersionMap {
            clientHTTPProtocol
            requests
          }
          clientSSLMap {
            clientSSLProtocol
            requests
          }
          contentTypeMap {
            bytes
            edgeResponseContentTypeName
            requests
          }
          countryMap {
            bytes
            clientCountryName
            requests
            threats
          }
          encryptedBytes
          encryptedRequests
          ipClassMap {
            ipType
            requests
          }
          pageViews
          requests
          responseStatusMap {
            edgeResponseStatus
            requests
          }
          threatPathingMap {
            requests
            threatPathingName
          }
          threats
        }
        uniq {
          uniques
        }
      }
      httpRequestsAdaptiveGroups(
        filter: {datetime_geq: $datetime}
        limit: 9999
        orderBy: [datetime_ASC]
      ) {
        sum {
          edgeResponseBytes
          visits
        }
        dimensions {
          datetime
          clientRequestHTTPHost
          clientCountryName
          cacheStatus
          edgeResponseStatus
          edgeResponseContentTypeName
        }
        count
      }
      healthCheckEventsAdaptiveGroups(
        filter: {datetime_geq: $datetime}
        limit: 9999
        orderBy: [datetime_ASC]
      ) {
        sum {
          healthStatus
        }
        dimensions {
          healthStatus
          region
          fqdn
          datetime
          rttMs
        }
        count
      }
      firewallEventsAdaptiveGroups(
        filter: {datetime_geq: $datetime}
        limit: 9999
        orderBy: [datetime_ASC]
      ) {
        dimensions {
          source
          datetime
          action
          clientRequestHTTPHost
          clientCountryName
          clientRequestHTTPMethodName
        }
        count
      }
    }
  }
}
    `;
const FetchAccountAnalyticsDocument = gql`
    query fetchAccountAnalytics($accountTag: string = "", $datetime: Time = "") {
  viewer {
    accounts(filter: {accountTag: $accountTag}) {
      workersInvocationsAdaptive(
        filter: {datetime_geq: $datetime}
        limit: 9999
        orderBy: [datetime_ASC]
      ) {
        dimensions {
          datetime
          scriptName
          status
        }
        sum {
          duration
          errors
          requests
        }
      }
      r2OperationsAdaptiveGroups(
        filter: {datetime_geq: $datetime}
        limit: 9999
        orderBy: [datetime_ASC]
      ) {
        dimensions {
          actionType
          bucketName
          datetime
        }
        sum {
          requests
          responseObjectSize
        }
      }
      r2StorageAdaptiveGroups(
        filter: {datetime_geq: $datetime}
        limit: 9999
        orderBy: [datetime_ASC]
      ) {
        dimensions {
          bucketName
          datetime
        }
        max {
          metadataSize
          objectCount
          payloadSize
          uploadCount
        }
      }
      rumPageloadEventsAdaptiveGroups(filter: {datetime_geq: $datetime}, limit: 9999) {
        sum {
          visits
        }
        dimensions {
          countryName
          date
          deviceType
          userAgentOS
          userAgentBrowser
          requestHost
        }
        count
      }
      rumPerformanceEventsAdaptiveGroups(
        filter: {datetime_geq: $datetime}
        limit: 9999
      ) {
        sum {
          visits
        }
        dimensions {
          countryName
          date
          deviceType
          requestHost
        }
        count
        avg {
          connectionTime
          dnsTime
          firstContentfulPaint
          firstPaint
          loadEventTime
          pageLoadTime
          pageRenderTime
          requestTime
          responseTime
          sampleInterval
        }
      }
      rumWebVitalsEventsAdaptiveGroups(filter: {datetime_geq: $datetime}, limit: 9999) {
        sum {
          clsGood
          clsNeedsImprovement
          clsPoor
          clsTotal
          fidGood
          fidNeedsImprovement
          fidPoor
          fidTotal
          lcpGood
          lcpNeedsImprovement
          lcpPoor
          lcpTotal
          visits
        }
        dimensions {
          countryName
          date
          userAgentBrowser
          requestHost
          largestContentfulPaintElement
          largestContentfulPaintObjectPath
          largestContentfulPaintObjectHost
          largestContentfulPaintPath
          firstInputDelayElement
          firstInputDelayName
          firstInputDelayPath
          deviceType
          userAgentOS
        }
      }
    }
  }
}
    `;

export type SdkFunctionWrapper = <T>(action: (requestHeaders?: { [key: string]: string }) => Promise<T>, operationName: string, operationType?: string) => Promise<T>;


const defaultWrapper: SdkFunctionWrapper = (action, _operationName, _operationType) => action();

export function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {
    return {
        fetchZoneAnalytics(variables?: FetchZoneAnalyticsQueryVariables, requestHeaders?: Dom.RequestInit['headers']): Promise<FetchZoneAnalyticsQuery> {
            return withWrapper(wrappedRequestHeaders => client.request<FetchZoneAnalyticsQuery>(FetchZoneAnalyticsDocument, variables, { ...requestHeaders, ...wrappedRequestHeaders }), 'fetchZoneAnalytics', 'query');
        },
        fetchAccountAnalytics(variables?: FetchAccountAnalyticsQueryVariables, requestHeaders?: Dom.RequestInit['headers']): Promise<FetchAccountAnalyticsQuery> {
            return withWrapper(wrappedRequestHeaders => client.request<FetchAccountAnalyticsQuery>(FetchAccountAnalyticsDocument, variables, { ...requestHeaders, ...wrappedRequestHeaders }), 'fetchAccountAnalytics', 'query');
        },
    };
}
export type Sdk = ReturnType<typeof getSdk>;
